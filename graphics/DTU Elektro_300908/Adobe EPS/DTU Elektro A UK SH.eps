%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: DTU Elektro A UK SH.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: PeopleGroup%%CreationDate: 27/02/08%%BoundingBox: 0 0 194 37%%HiResBoundingBox: 0 0 193.1954 36.7325%%CropBox: 0 0 193.1954 36.7325%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 24 8%%BeginData: 4834 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C452727277DA82727277D537DFFA828FFFFFFA828F852A85252FD0AFF%A8FD06FF52FD09FF5252FD04FF272727FD0BFFA852FD13FF7D7DFD22FFF8%FFA827A8FF277DFF5252FF7D27FFFFFF7D27FFFFFF7D52FFA8277DFFFF52%527D7DF87DA87D527D7D7DFFAF5252A87D277DFFA827FFFFFF7D52FFFFA8%7D7D5252FFFF7D52FD047DA8527D527EFFA82752A8FF7D527DFF537D52A8%52A87D7D5252A8FF7D595284FD18FF27FFFF27A8FF527DFF527DFFA827FF%FFFF7D275252FF7D52FF27A827847D52A8FFA827A8FF2752A8A8F8FF277D%A8FFA8A827A8A828FFFFFFA8005252FF7D2784277D7D52A8F8FFA827FF52%27A8F8FF277D5252A827A8277DA8F8A8FF527DA8F8A8277D7D27A8277DFD%18FFF8FFFF277DFF27A8FF5252FF7D27A8FFFF7D27A8A8FF52527D275252%7D527DFFFFFF21FFFF527DFFA827A827A8FFFF5352277DFF27FFFFFF7D27%A8A8FFA827FF527D7D275227A8A827FF527DFF277D275252527D277D27A8%A852FFFF527DA827FF7D52A8277D27A8FD18FF27A87D27FFFF527DFF7D27%A85227FFFFFF7D52A8AFFF7D52FF27A8A8FF5252A8FFFF27A8FF287DFFFF%F8FF277DA8A8F8A8277DA827FFFFFFA827FFA8FF7D52FF527DA80052A8FF%A827FF7D52FF27A8277DA8FFA8277DA8FFA827FFFF527DFF27FF7D52A827%27A8FD19FF525227A8FFFF52A8FFFF525252FD05FF525252FF7D7DFF7D27%52A8FF52527DFF5252FF7D7DFFAF7DFFA82752A87D525252A859FD04FF7D%2752A8A87DFF7DA852527D27A8FF52FF7DA8FF7DA8A827527DFF7D5228FF%A87DFFFF7DA8A87DFFA87DA827A8277DFD5AFF7D277D27A8FD1CFF7D527D%277DFD5BFFA87DFD1FFFA8A8A8FD19FFA87DA8FD2EFF7DFFFFFFA8A87DFF%A8FD0FFFA8FD09FFA8FFFFFFA8A87DFD0AFFA8FD11FFA8FD09FF52FFA87D%FFFFA8FFFFFFA8FFFFFFA8A8FFFFAFFFA87DA8FFA8FFFFA8A8FFFFA8A8FF%FFFFA8FFAF7DA8FFFFFFA8FFFFFF7D7DAFFFFF7DA8FFFFA8A8FFA8FFFFFF%A8AFFFA87DFFFFFFA8A8FFFFA8FFFFA8A8FFA87DFFFFA87DA8FFFFFFA8FF%FFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FF%FFFFA8FF7DFFFF7DFF7DA87DFF7DA87DA8FFA87DA8A87DA8A852A8A8FD05%7DFFA87D7DA8A87D7D84FF7D7EFFFFAF7D7DA8FF7D59FFFFFF7DFFA8FF7E%FFA87E7DA8AF7D7DFF7D7DA8A87DFF7DFF7D7EA8FFA8A8A8FF7DFFFFFF7D%FFA8FF7DA87DA8FF7D7D7DA8A8A87E7D7DA8FF7DA87DFF7DA87DFF7D84A8%A8A87D7D7DA8A87DA87D7DFFFF7E7D7DA87D7DA8A8FF7DFFA8A87DA87DFF%FF7DFFA8A8FF7DFF7DA853FF7DA87DFFFF7DFF7DA8FFFFA87DFF7DA9A8A8%FFFFFF7D7DFD04A87D7EA87DA87DFFFFA87DFF7DFFFF7DA87DFFFFA8A87D%7DA8A8FFFFA87D7DA8A884FFFF7DA87DFF7DA87DFF7DFFA8A87DA8A87D7D%7DA87D7D7DFFFF7DA87DFF7DA87DA8A87D7DFFFF7DA87DFFFFFF7DFFFF84%7DA8A87DA8A8FFFF7DFFFD04A8FF7EA87DA8FFFFA8A8FF7DFF7DFFFFFFA8%A8FFA8A8A87DFFFFFF7DFFFFFF7DAF7DA8A8FF7DA8FFFFA8A8FFA8A8FF7D%FF7DFFFFA8A8FF7DFF7DFFFFFF7DFFFFFF7DFFA8A8A87D7DFFFFA8A8A8FF%A8A8A87DFFFFFF7DFFA8FF7DFFFFA8A8A8FFA8A8A87DA8A852A87DA8FF7D%7DA8A8A87D7DA8A87DA87DA87DFFFF7D7DA8A8FF7DFF7DFF7DA87DFF7DFF%FF7DFFA87DFFFFFF7D7D7DFFA8A8FFFFFF7D7DFD05A87DA8A8FF7D7DA8FF%52A87DFFFF7DA8A87DA8FD047DA8A8FFFFFF7D7D7EA8A8FFFF7DFF7DA87D%FF7DFF7DFFA8A8A87D7DA8A87D7DA8A87DFFFF7DFF7DFF7DA8A87D7DA8FF%A8FD05FFA8FF7DA8AFFFFFFFAFFD0FFFA8FD0DFFA8FD09FFA8FD05FFA8FF%FFFFA8FD0DFFA8FD09FFA8FD05FF7DA8FF7DA8FD0DFFA8FD0AFFA8A8FF52%FD09FFA9A8FD55FF7D7EA8FD19FFA8A87DA8FDFCFFFDFCFFFD08FF522752%275227522752275227522752275227522752275227522752275227522752%27522752275227522752275227522752275227522752275227522752FD43%FFF8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8%F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F8%27F8FD43FF7D7D7D597D7D7D597D7D7D597D7D7D597D7D7D597D7D7D597D%7D7D597D7D7D597D7D7D597D7D7D597D7D7D597D7D7D597D7D7D597D7D7D%597D7D7D527EFDC2FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2008-01-14T12:16:04+01:00</xap:CreateDate>
         <xap:ModifyDate>2008-02-27T18:09:42+01:00</xap:ModifyDate>
         <xap:MetadataDate>2008-02-27T18:09:42+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>52</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgANAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AC6J5I0ey/wCcerb8ztNk&#xA;urDztaercnVYbmasrR6k0CrLGzNGV9IUoFFe9cKs0/MHyH5SvfMvkPUmspY5vN2o89cVLy7CyiW3&#xA;9YqAJQIxzP8AusLirJdD0mx0L/nIC30PS1eDS7TyWfQtmlklCk6sSSWlZ2Y/EdycCq35TTzyfmN+&#xA;aCSSM6R6naiNWJIUek/2QemFWNfnR+h9Q/NfRdI8yaXqnmDy+mjTXQ0XSUuJXNybjgJmjt3jfiqr&#xA;Qmvhiqh528v+TofJHka+0Xy9c6KLXzJYW9nFqcUsd/DE9y7SIxuGkmCO45KC1KUpiqZedvz117Tf&#xA;MHmK10dtBgsvK/Fbi11i7aG/v5BH6ki2Mauv2R8IqG5Hp1oFU8u/zN8269r2jaJ5Fs7BZ7/RIfMN&#xA;5d6wZjFFb3JAihVIOLGQ13NaYFQHnTWfzUtPzL/L7Tba806L9KRX5nsk+si1kmt7KN7gTmvKREcs&#xA;1uQqkftDFU0n86fmS/5qT+TLG20iWyht4tTe9mNzHIljJP6bJxUyB5uIoOi139sVY7Z+dpfKWr/m&#xA;zq2oaVZyaxoiaVNeXNi9yiXr3ED/AFfmk8kyxCMMoPpjx67YVZlp+rfmjB5X1DVPMU3luxmEEU+n&#xA;zB7qK1h5Gsv1x5T9lEIoyMKnwG+BWK+VvPzee7nzH5L80JoevW8GnrfxXujmSWykXlTg6TtIwkjk&#xA;4sDX3wqyP/nHsk/k35Zr/viX/qIkwK8q1C18m6z+ZXnWTzh5Y17zVPZajHDpsulxXs8VrEkK/u/9&#xA;GliCEmhocKvRda84/mHp/nTSvKHl6y0p7fU9Pe701tQ+twyW8UAVStxxaUuyjsAK9yMVS8fnb5jX&#xA;yRa30um2MfmKXX28s3EkkskemRXCFq3DuQ0gi2pQ7++Kojy/59/MHXdW82aC76BJNoFrBILi0F1P&#xA;bTm6UvwMglQrREYHatcVSHRPP/mbQPyx8gXvljSdLh07X7yLR4dJme7rDc3U8/FluHkmb0z6e/IM&#xA;QfEbBVOn/OTzN5fsfPMfm/T7FtV8oxWlxAdNeUW1wuofDApM3J1KuyhjT5DbcKpeUvzu1RvMJ0rz&#xA;Lc6FfxTaZcapDdeXLlrkQG1T1Jba4Vnk+P0wxDAgGn3FUt8r/n/r9/q3l19Rfy+2meZ7oWVvpun3&#xA;bTarYPNUQNdxl+LBmoGoq0r47YqyXyl5z/NPXvM+vaObfRIbTy/cSWl1fUuuUkrQF4PTh5H4fUK8&#xA;6v8AZrTfArEtN8/+YfLP5b615g0XStLgmtPMl3aarZ1u3S4uJZ4ojPE8kzNHydySp2pSgHcqy/Tv&#xA;zG886b5v1Dy95v02waRNFm13Tjo7zuWSB+DWzmYDlId6MqgffsFY7pn5z+fb6XylNx8vrZ+bblYI&#xA;raCW4uby1VwWHrRhoxUAUYjoeuFXuWBXYq7FXYq7FXYq8O038hPO6+VLXyLqPnCI+Sbd+U9naWQj&#xA;ubhGnNy0bTO7lP3h2K19xhV6N5p8jfprWPKl9BcraQ+Wbw3focC/qL6RjWNTyHGnjvgVLvO35ea5&#xA;qPmmy84eVtZTR/MVpZvp0puIBc289qzmURuvJSpWQlqiuKoz8uvIM3lWLVbrUNR/S2va7dm91XUP&#xA;SWBWanFI44lLcUQVpv3xVA+d/wAv/M2o+bLDzb5W1qHStZsrOTT5I7u3+sQywSSCTsylSG9jiq7X&#xA;fIPmTzF5a0Ww1zWYJtV0zVrbVJ72G2Mccq20jMIli5niSrU5VPyxVJ9a/KLzEnm3Vdd8tatp9vBr&#xA;jxz39nqenJfenNGnAvC5ZWAegqpwqj9c/LfzO3mDTvM/lrXbfS9eg0xNI1ISWYltLiFHEnNYQ6+m&#xA;yvUqN9qCtOoVV83/AJf+a9Z1Lyfr1hrdta+YfK6ziaea0aS3uGvIY4bhhEsilAQjcV5d+u1cVTi3&#xA;8lvD+ZV35z+tho7rSo9LFlwoVMc5l9T1OW4PSnHFUi1b8oINWvvzAkvdQItvPEOnxIkcdHtW0+Ax&#xA;q5JaklXo1NthTFUHqv5X+evMPkXU/K3mXzPbXInW1GnXVvY+kY2tJRJymX1KSepwWo2ocVW+Wvyr&#xA;866b5tk8x6j5gsL6W80waXfwR6d9WAjUlgYfSmVQ3OhLMu++w2oqy/8ALnyi/lDyVpfluS5F4+nR&#xA;sjXKp6YfnI0lQpLU+3TrirFp/wAuPP8ApnmrW9X8o+ZbWxs/MFwl3e2l7ZfWGjlSPgTG4dKg06Gn&#xA;9VWQ3Pkm6ufPuiebJr5S+l6fPYzW6xEeq85UmRW5HgKg/DQ/PFXln5l/lvf6J5GSwBm1KzvPNx1r&#xA;Ubq1tDctaWlxzLM1oTKs4StDyUr/AJOFU5/I5tRY+YdCtrSJ/LUUafUPMCaR+hWuZ5QyyK8FEEhQ&#xA;U+IKPxGKpzbfk7cQ+SvJHls6ojP5R1i11eS59E0uBbSSyGJU5/By9anKp6dMCojX/wAnrbXtT86T&#xA;399S0822dlaLEkfx272QqkvItR/3gVqUHTriq3yl+XPmuxklt/MWp6VqGlyWklm6WmmJa3MiyII+&#xA;TzKxpUV5AAg4VQXkj8qPNvle90+1Gtabe+X9Nf8AciXS4xftECxVGuA2zLUAP+GKss8o+S5NA1zz&#xA;PqbXYuB5hvlvUiCcDCFjCcCeTcunXbArFbn8l7ibyLrXlkasiyatrb60tz6J4xh7lJ/RK89zSOnK&#xA;v0Yqm/m3yRe3Pmi6832sn1iWDy9eaVBpKgpJNLKxlTjMGHCp+Hp74q8T/Ka01Dy9rvlWHSLD9I6p&#xA;cSRW3mG0vPL5s7jTImUi4lXUgkfLhuPiJLd+tMKvqfArsVdirsVdirsVefWevebk8pw+a5L6K6go&#xA;ZbnTWgWMemJCjenKpryAFRUYVZJqHnPR7G4khdbiYwIkt5JBC8qW6SDkrTMo+Gq7+NMCrr7zfpdr&#xA;OIUjubxvQS6ZrSF5lWGSvF2ZdqHiTiq+580WUVtb3UFvdX1tcx+tHNaQPKoTxYilD7dcVUn866GD&#xA;ZCIzXLajF69osELyMyAhTUKPhoTvXpiqGtfOsUmralZzWVzDBYIJPWaFwAoiaR/UJFFrx+D+bFWx&#xA;+YGjPwWK2v5ZJo/Vto0tJi0sfdo/h3C13PTFUTJ5z0QWNldwmW6/SIY2dvbxNJM/p7SfABtwP2q4&#xA;qtfzvoS2ltchpnF1K9vHCkMjTCaIEvG0QHMMKUpTFUNqXnq0h0C91Oztp5Z7NjFLayxPG8UlOQ9Y&#xA;EVVaHriqd6dqcd5pqXzRyWsZUs63CGJlC9SVehA2rXwxVLbDzro19cRQxJcp9ZVmspZYHjjuAg5H&#xA;0WYDltiqA8o+YtS1jW9W9czx2lvK8NtbPbenGgjKbvMRX1Ty3Qnpvird9qerXXmK/sIdXg0i2sEg&#xA;4l445HlaZS5NZGUALsNhiqKXXJLTWZYL68R9PtdJhvJrniAGcySK8o412ZUFFH0Yqr6d5w0i9mMR&#xA;E9o/pNcx/W4nhEkK/akQtsVHXFVFfOlpNY3F3a2N9JDFCZoZTbSLHKtQAUYjcGtflU4qoaf58sZN&#xA;EsdRvbe4gkvGESRLBK3OUx+p+6ABZ1PQMMVRCeZbW3utYnvbspaWMVrK1s8JR4PXVjQtuXZzT4ab&#xA;HbFVePzPFJZvcjTtRHBlT0WtZBI3MEgqp6jbc9u+Kpdqnm8SaZDc6YXhmXUbezu4LiIpInqOvNGR&#xA;ulVbqMVTHzfrFzpOhS3drwFwXiijeQVRTLIqcmFR9kNXFUJbahNpdrdX+p66mqWtvFzkjhhiRl3H&#xA;xfu2Yn5Yqi7HzbpN3dS21J7aSOFrlTdQyQB4VNGkT1AKha74qoWvnbSbm5s4I4bsLftxs53t5Eik&#xA;2LVVmA24ivyxVStfN1nbadZPeTTXs97LcxwNBbsXcwSspX04+R+EDjXvSuKolfOWinSjqJMqqJ/q&#xA;ZtTE31j6z/vn0gOXP2xV0fnPQzp91eTNLbfUmWO6tponSdHk+wvp0qS9fhpiqwedtFFneXM63Fqb&#xA;BUkube4heOZUkPFGCHqCfDFWj5iin1LSvSmltra6W7P1aa3ZGmECqQ4L8WQLWo2+LFXaf550S+mt&#xA;EiW5SO+PC1uJYJI4XkAJ4B2FOW2KrLvz5olv6r+ndTW8MvoPdw28jQery48RJQKfi2+eKsasbbzB&#xA;N5Ih8qLo9zDdyKYJ7yf00t40aUuz1Dlmop6ccKoi+0O6s9a1X17TU7qw1D0jE2myIFZREI3SZGdN&#xA;9vpGKq9teHR/MU9vaaZd3SJpVlFFBGI2eMR+qFWUlwAe1RXAqEs9F8xabbaRYXMN9PYw2JUw6bOI&#xA;SLxpS5EriSL4QjAA8qYVRHk3QtXsrrQWurV4lttNuYZy1Pgke4DKpoepXfFUbeW+pprHmSEWM0kO&#xA;q2ii1uk4mPnHbuhRt6glthtgVUs9K1BNY8szNAwis9OkhuWNKJIUjAU+9QcVY9aeXdasrPQ7qW1v&#xA;SLZL2G7gsZFjuU9a5aSNlqyhgw674VTSz0NxeaLc2VjewxDULi6vfrzK0waSDh6jcXfZiB3xVV1f&#xA;Q9SuLbzjHDAS1/6JsxsPVKWyBuP+yUj54qnqLcan5akgMElnPcWzwelcABlYoU34ltq4FY5ZW+t3&#xA;0nluwm0qaxXRGV725lMfpEwwmJRDxZi3InwFMKp35UsLu0k1w3MRiFzqk88Ff2onSMKw9jxOBUo1&#xA;LT4oPM+pXeoeXW1m2vEtzaTRwwXBQxIUkVhMyla7HbrirWt6Df6k2oCyszbQ3Whw29rC4WMJIsru&#xA;ICFJVSqkDwGFVCDRf0qssctlq0F/9SuYIbjUJUkt42uIvTYKRIzGtf5e2KpvotzqNxof6HuNLubK&#xA;5gsfQMswj9BnRBHRHV2Jr1Hw9MCpdo9nqsmn+VoJbCe3l0qfhdiUKAFW2kTmCCaqSRiqzXfL2r3V&#xA;75llt7cv6x0yazBIUTG1JaRFJ6Htv3wqjNb1LXNSsIGtNO1KzhjuoxqES+nFcvAVavossh6NxruD&#xA;+OBUkh0DWWhvStjdRibVrG4iS6kE0xhj483d+clad/iNOmFWV+eNMutS8uzW9rCLiVZIZfq5p+8W&#xA;KVXZfi23UHrgVI9Rs7W98v6va6V5Ym0u7mtiqsbe3h9T4h8AMTsSe9DhVMPNFlO2tW98yf6Bb6df&#xA;pdTkckTmi05AEE1odsCsd8t/Xkby23mEXjWx9MaMedu8HqvCeHqcFSYfB9nlWnjhVOND0bU4JfLp&#xA;mt2QWk2qNcE0+ATyOYyf9YEUxVCar5e1eQXVzHbzt6GuNeiOBxHPJbtbpGXhYkfED2xVbdaBLeaX&#xA;e3NhY6lHfm4s55hfyIJ5ltWJAhcO9GVWNK4qp6pokmoaLrD2mnar+k5baO3jbUXRi6CZZOCUkfpQ&#xA;nFWR6/p17ceZNEuYYi8FvDfrPIKUUyxIqA/6xGBUpt9E1VfLPlG2Ns4nsb63lu49qxoiy8mbftyG&#xA;FWPw/WksbyXUPrR8o/pCZ3+qtb+nQXW1Y3X11j5jcK5xQ9YwJdiqitnapdyXaxgXMqLHJL3KISVB&#xA;+XI4qrYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWnRHRkdQyMCGUioIOxBBx&#xA;VKbHyl5bsbtbu0sIorhK+m4qeFdjwBJCf7EYqm+KuxV2KuxV2KuxVJ5PJ/lmS9N4+nRG4L+qxoeJ&#xA;eteRSvAmvemKvnD/AKHS1P8A6lSH/pMf/qjhpXf9Dpan/wBSpD/0mP8A9UcaV3/Q6Wp/9SpD/wBJ&#xA;j/8AVHGld/0Olqf/AFKkP/SY/wD1RxpXf9Dpan/1KkP/AEmP/wBUcaV3/Q6Wp/8AUqQ/9Jj/APVH&#xA;Gld/0Olqf/UqQ/8ASY//AFRxpXf9Dpan/wBSpD/0mP8A9UcaV3/Q6Wp/9SpD/wBJj/8AVHGld/0O&#xA;lqf/AFKkP/SY/wD1RxpXf9Dpan/1KkP/AEmP/wBUcaV3/Q6Wp/8AUqQ/9Jj/APVHGld/0Olqf/Uq&#xA;Q/8ASY//AFRxpXf9Dpan/wBSpD/0mP8A9UcaV3/Q6Wp/9SpD/wBJj/8AVHGlfQf5cebpPN/krS/M&#xA;klsLN9Rjd2tlcyBOMjR05ELX7FemBWSYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWC/wDI&#xA;Df8Av2P+5firv+QG/wDfsf8AcvxV3/IDf+/Y/wC5firv+QG/9+x/3L8Vd/yA3/v2P+5firv+QG/9&#xA;+x/3L8Vd/wAgN/79j/uX4q7/AJAb/wB+x/3L8Vd/yA3/AL9j/uX4q7/kBv8A37H/AHL8Vd/yA3/v&#xA;2P8AuX4q7/kBv/fsf9y/FXf8gN/79j/uX4q7/kBv/fsf9y/FXf8AIDf+/Y/7l+Ksu0b9DfoyD9C/&#xA;V/0ZQ/VvqfD0KcjX0/T+CnKvTviqMxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:BC77C3BA2CC4DC11B0F7C948713094C1</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:6E80450BE6F111DCA9DBE848ED1657C8</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:BB77C3BA2CC4DC11B0F7C948713094C1</stRef:instanceID>
            <stRef:documentID>uuid:BA77C3BA2CC4DC11B0F7C948713094C1</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5080.000000</stDim:w>
            <stDim:h>5080.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.609375</xapG:cyan>
                           <xapG:magenta>67.578125</xapG:magenta>
                           <xapG:yellow>66.796875</xapG:yellow>
                           <xapG:black>89.843750</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>6.250000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>96.093750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>62.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>51.562500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.890625</xapG:cyan>
                           <xapG:magenta>76.562500</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>26.953125</xapG:cyan>
                           <xapG:magenta>81.250000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>16.796875</xapG:cyan>
                           <xapG:magenta>97.656250</xapG:magenta>
                           <xapG:yellow>92.187500</xapG:yellow>
                           <xapG:black>6.640625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.390625</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>79.296875</xapG:magenta>
                           <xapG:yellow>96.484375</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>98.046875</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>34.765625</xapG:magenta>
                           <xapG:yellow>86.718750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>4.687500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>92.968750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>18.750000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>97.656250</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>98.828125</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218750</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>99.218750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>85.937500</xapG:cyan>
                           <xapG:magenta>17.578125</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>3.906250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>89.843750</xapG:cyan>
                           <xapG:magenta>33.203125</xapG:magenta>
                           <xapG:yellow>98.437500</xapG:yellow>
                           <xapG:black>25.781250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.781250</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>74.609375</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984375</xapG:magenta>
                           <xapG:yellow>45.703125</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>69.531250</xapG:cyan>
                           <xapG:magenta>14.843750</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.109375</xapG:cyan>
                           <xapG:magenta>52.343750</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>98.828125</xapG:cyan>
                           <xapG:magenta>96.093750</xapG:magenta>
                           <xapG:yellow>3.515625</xapG:yellow>
                           <xapG:black>0.390625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>26.171875</xapG:yellow>
                           <xapG:black>24.609375</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218750</xapG:cyan>
                           <xapG:magenta>98.046875</xapG:magenta>
                           <xapG:yellow>0.781250</xapG:yellow>
                           <xapG:black>0.390625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>49.218750</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>1.171875</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>34.765625</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>37.109375</xapG:yellow>
                           <xapG:black>10.937500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>11.718750</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>49.218750</xapG:yellow>
                           <xapG:black>0.781250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>96.484375</xapG:magenta>
                           <xapG:yellow>20.312500</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656250</xapG:cyan>
                           <xapG:magenta>27.343750</xapG:magenta>
                           <xapG:yellow>39.843750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.843750</xapG:cyan>
                           <xapG:magenta>42.578125</xapG:magenta>
                           <xapG:yellow>52.343750</xapG:yellow>
                           <xapG:black>6.640625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.390625</xapG:cyan>
                           <xapG:magenta>52.734375</xapG:magenta>
                           <xapG:yellow>60.546875</xapG:yellow>
                           <xapG:black>23.437500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>57.421875</xapG:cyan>
                           <xapG:magenta>60.156250</xapG:magenta>
                           <xapG:yellow>63.671875</xapG:yellow>
                           <xapG:black>41.796875</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656250</xapG:cyan>
                           <xapG:magenta>38.281250</xapG:magenta>
                           <xapG:yellow>63.281250</xapG:yellow>
                           <xapG:black>1.171875</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>31.640625</xapG:cyan>
                           <xapG:magenta>48.828125</xapG:magenta>
                           <xapG:yellow>73.828125</xapG:yellow>
                           <xapG:black>9.765625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.937500</xapG:cyan>
                           <xapG:magenta>57.031250</xapG:magenta>
                           <xapG:yellow>83.593750</xapG:yellow>
                           <xapG:black>22.656250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.062500</xapG:cyan>
                           <xapG:magenta>63.671875</xapG:magenta>
                           <xapG:yellow>92.968750</xapG:yellow>
                           <xapG:black>35.546875</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>41.406250</xapG:cyan>
                           <xapG:magenta>69.531250</xapG:magenta>
                           <xapG:yellow>96.484375</xapG:yellow>
                           <xapG:black>48.828125</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>47.656250</xapG:cyan>
                           <xapG:magenta>73.046875</xapG:magenta>
                           <xapG:yellow>83.203125</xapG:yellow>
                           <xapG:black>67.968750</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Web Color Group</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=236 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.781250</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984375</xapG:magenta>
                           <xapG:yellow>45.703125</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218750</xapG:cyan>
                           <xapG:magenta>98.046875</xapG:magenta>
                           <xapG:yellow>0.781250</xapG:yellow>
                           <xapG:black>0.390625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=139 G=146 B=152 1</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>48.437500</xapG:cyan>
                           <xapG:magenta>36.328125</xapG:magenta>
                           <xapG:yellow>33.593750</xapG:yellow>
                           <xapG:black>1.562500</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Grayscale</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>204</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>153</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -36.7324 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 36.7324 li193.195 36.7324 li193.195 0 licpclp[1 0 0 1 0 0 ] concat91.8145 33.1602 mo91.8145 36.7324 li0 36.7324 li0 33.1602 li91.8145 33.1602 licpfalse sop/0 [/DeviceCMYK] /CSA add_res0 0 0 1 cmykf5.33105 8.34375 mo4.69238 8.97266 3.73047 9.25781 2.56152 9.25781 cv1.67773 9.25781 0.638672 9.18555 0.283203 9.12598 cv0.103516 9.0957 0 9 0 8.78906 cv0 0.613281 li0 0.408203 0.103516 0.306641 0.283203 0.276367 cv0.638672 0.216797 1.67773 0.144531 2.56152 0.144531 cv3.71875 0.144531 4.6748 0.419922 5.3125 1.03711 cv6.07227 1.76953 6.27148 2.77637 6.27148 4.1377 cv6.27148 5.26465 li6.27148 6.61133 6.0791 7.60547 5.33105 8.34375 cvcp4.89453 4.19434 mo4.89453 3.03516 4.74121 2.31836 4.22656 1.84082 cv3.80859 1.4541 3.22461 1.31641 2.56152 1.31641 cv2.05664 1.31641 1.71387 1.33398 1.38965 1.35254 cv1.38965 8.05664 li1.70801 8.07422 2.05664 8.08594 2.56152 8.08594 cv3.25195 8.08594 3.85547 7.93555 4.27734 7.50977 cv4.76172 7.02051 4.89453 6.33203 4.89453 5.20801 cv4.89453 4.19434 licp17.6172 9.25781 mo15.6758 9.25781 14.4248 8.32031 14.4248 5.8916 cv14.4248 0.462891 li14.4248 0.335938 14.5273 0.234375 14.6602 0.234375 cv15.5791 0.234375 li15.7051 0.234375 15.8145 0.330078 15.8145 0.462891 cv15.8145 5.8916 li15.8145 7.35254 16.2227 8.09766 17.6172 8.09766 cv19.0117 8.09766 19.4209 7.3584 19.4209 5.8916 cv19.4209 0.462891 li19.4209 0.335938 19.5234 0.234375 19.6553 0.234375 cv20.5752 0.234375 li20.7012 0.234375 20.8096 0.330078 20.8096 0.462891 cv20.8096 5.8916 li20.8096 8.32031 19.5586 9.25781 17.6172 9.25781 cvcp13.0586 1.40039 mo10.834 1.40039 li10.834 8.92773 li10.834 9.05371 10.7383 9.16797 10.6055 9.16797 cv9.67969 9.16797 li9.55273 9.16797 9.45117 9.06055 9.45117 8.92773 cv9.45117 1.40039 li7.22656 1.40039 li7.09473 1.40039 6.98633 1.32813 6.98633 1.19629 cv6.98633 0.457031 li6.98633 0.330078 7.09473 0.234375 7.22656 0.234375 cv13.0586 0.234375 li13.1904 0.234375 13.293 0.324219 13.293 0.457031 cv13.293 1.19629 li13.293 1.32227 13.1904 1.40039 13.0586 1.40039 cvcp61.9063 8.92188 mo61.9063 9.05469 62.0137 9.16797 62.1465 9.16797 cv62.9873 9.16797 li63.1201 9.16797 63.2285 9.05469 63.2285 8.92188 cv63.2285 2.71094 li63.2285 2.5791 63.1201 2.4707 62.9873 2.4707 cv60.6504 2.4707 li60.5176 2.4707 60.415 2.5791 60.415 2.71191 cv60.415 2.71191 60.415 2.6582 60.415 2.78906 cv60.415 2.9209 60.5039 3.03125 60.6504 3.07324 cv61.9063 3.43945 li61.9063 8.92188 licp63.252 1.25098 mo63.252 0.240234 li63.252 0.108398 63.1445 0 63.0117 0 cv62.1221 0 li61.9902 0 61.876 0.108398 61.876 0.240234 cv61.876 1.25098 li61.876 1.38281 61.9902 1.49121 62.1221 1.49121 cv63.0117 1.49121 li63.1445 1.49121 63.252 1.38281 63.252 1.25098 cvcp78.3379 8.92188 mo78.3379 9.05469 78.4395 9.16797 78.5664 9.16797 cv79.4375 9.16797 li79.5703 9.16797 79.6602 9.04883 79.6602 8.92188 cv79.6602 0.306641 li79.6602 0.173828 79.5645 0.0722656 79.4375 0.0722656 cv77.0996 0.0722656 li76.9678 0.0722656 76.8652 0.180664 76.8652 0.3125 cv76.8652 0.3125 76.8652 0.258789 76.8652 0.390625 cv76.8652 0.521484 76.9541 0.631836 77.0996 0.674805 cv78.3379 1.04102 li78.3379 8.92188 licp69.2676 8.04297 mo68.7656 8.08008 68.4443 8.12207 67.7598 8.12207 cv66.9902 8.12207 66.4297 7.63477 66.4297 6.33594 cv66.4297 5.30859 li66.4297 4.00391 66.9961 3.52344 67.7598 3.52344 cv68.4443 3.52344 68.7656 3.58008 69.2734 3.60449 cv69.3145 3.60645 li69.4297 3.61133 69.5332 3.54688 69.5332 3.42676 cv69.5332 2.82031 li69.5332 2.63965 69.4844 2.57324 69.2861 2.53125 cv68.9492 2.45898 68.4023 2.38672 67.7598 2.38672 cv66.1543 2.38672 65.1074 3.44531 65.1074 5.30859 cv65.1074 6.33594 li65.1074 8.2002 66.1602 9.25781 67.7598 9.25781 cv68.4082 9.25781 68.9492 9.18652 69.2861 9.11426 cv69.4844 9.07227 69.5332 9 69.5332 8.82617 cv69.5332 8.21875 li69.5332 8.09766 69.4238 8.03223 69.3105 8.04102 cv69.2676 8.04297 licp75.8867 8.20898 mo75.8867 4.66504 li75.8867 3.18652 75.0811 2.38672 73.3916 2.38672 cv72.5684 2.38672 71.9434 2.4707 71.4561 2.56055 cv71.293 2.5918 71.2148 2.66992 71.2148 2.80176 cv71.2148 3.39648 li71.2148 3.55859 71.3242 3.60254 71.4385 3.59375 cv71.498 3.58984 li71.9395 3.55859 72.6162 3.49902 73.3916 3.49902 cv74.2148 3.49902 74.5645 3.76953 74.5645 4.66504 cv74.5645 5.16992 li73.7402 5.16992 li71.624 5.16992 70.8242 5.84961 70.8242 7.18457 cv70.8242 7.28125 li70.8242 8.84375 71.834 9.25781 72.8447 9.25781 cv73.4697 9.25781 74.1338 9.00293 74.6748 8.66016 cv74.6836 8.92773 li74.6895 9.06055 74.8008 9.16797 74.9336 9.16797 cv76.9658 9.16797 li77.0977 9.16797 77.207 9.06055 77.207 8.92773 cv77.207 8.92773 77.207 9 77.207 8.86914 cv77.207 8.73047 77.1006 8.60059 76.9658 8.55664 cv75.8867 8.20898 licp74.5645 7.78516 mo74.1016 8.03809 73.6318 8.19434 73.1396 8.19434 cv72.4902 8.19434 72.1533 8.00195 72.1533 7.27441 cv72.1533 7.17871 li72.1533 6.41504 72.4658 6.07813 73.7402 6.07813 cv74.5645 6.07813 li74.5645 7.78516 licp42.4717 7.99121 mo41.9307 8.03516 41.0938 8.11035 40.3066 8.11035 cv39.1758 8.11035 38.749 7.43066 38.749 6.36719 cv38.749 6.26465 li42.7227 6.26465 li42.8789 6.26465 42.958 6.15625 42.958 5.98242 cv42.958 5.60547 li42.958 3.85547 42.3105 2.38672 40.2041 2.38672 cv38.1221 2.38672 37.4268 3.80664 37.4268 5.60547 cv37.4268 6.02246 li37.4268 8.3252 38.5752 9.25879 40.2461 9.25879 cv41.1904 9.25879 41.7539 9.1875 42.4883 9.05469 cv42.6934 9.01758 42.7354 8.93359 42.7354 8.75977 cv42.7354 8.1582 li42.7354 8.03809 42.627 7.97852 42.5195 7.9873 cv42.4717 7.99121 licp41.623 5.29688 mo38.7559 5.29688 li38.7559 5.21777 li38.7559 4.08203 39.3145 3.51758 40.2041 3.51758 cv41.1055 3.51758 41.623 4.05762 41.623 5.21777 cv41.623 5.29688 licp34.2979 8.92188 mo34.2979 9.05469 34.4004 9.16797 34.5273 9.16797 cv35.3984 9.16797 li35.5313 9.16797 35.6211 9.04883 35.6211 8.92188 cv35.6211 0.306641 li35.6211 0.174805 35.5244 0.0722656 35.3984 0.0722656 cv33.0605 0.0722656 li32.9277 0.0722656 32.8262 0.180664 32.8262 0.3125 cv32.8262 0.3125 32.8262 0.258789 32.8262 0.390625 cv32.8262 0.521484 32.9141 0.631836 33.0605 0.674805 cv34.2979 1.04102 li34.2979 8.92188 licp31.8506 8.93359 mo31.8506 8.24219 li31.8506 8.13477 31.7725 8.05078 31.6641 8.05078 cv29.2773 8.05078 li28.291 8.05078 28.0635 7.76172 28.0635 6.9082 cv28.0635 5.12305 li31.5381 5.12305 li31.6699 5.12305 31.7783 5.01367 31.7783 4.88184 cv31.7783 4.2207 li31.7783 4.08789 31.6699 3.98047 31.5381 3.98047 cv28.0635 3.98047 li28.0635 2.49512 li28.0635 1.6416 28.291 1.35352 29.2773 1.35352 cv31.6641 1.35352 li31.7725 1.35352 31.8506 1.26855 31.8506 1.16016 cv31.8506 0.474609 li31.8506 0.355469 31.7969 0.28125 31.6699 0.264648 cv31.2266 0.206055 30.4258 0.144531 29.3555 0.144531 cv28.4277 0.144531 27.6992 0.267578 27.2188 0.753906 cv26.8438 1.13574 26.6865 1.68262 26.6865 2.49512 cv26.6865 6.9082 li26.6865 7.70996 26.8379 8.25195 27.2051 8.63477 cv27.6836 9.13086 28.418 9.25879 29.3555 9.25879 cv30.4258 9.25879 31.25 9.20117 31.6699 9.14453 cv31.7969 9.12695 31.8506 9.05469 31.8506 8.93359 cvcp112.459 8.92188 mo112.459 9.05469 112.566 9.16797 112.693 9.16797 cv113.541 9.16797 li113.673 9.16797 113.781 9.04883 113.781 8.92188 cv113.781 3.96777 li114.311 3.69727 114.815 3.51758 115.272 3.51758 cv116.192 3.51758 116.444 3.85352 116.444 4.98438 cv116.444 8.92188 li116.444 9.05469 116.553 9.16797 116.686 9.16797 cv117.527 9.16797 li117.659 9.16797 117.768 9.05469 117.768 8.92188 cv117.768 4.8418 li117.768 3.50684 117.307 2.38672 115.682 2.38672 cv114.93 2.38672 114.426 2.54102 113.695 2.99219 cv113.685 2.71094 li113.68 2.5791 113.574 2.4707 113.441 2.4707 cv111.209 2.4707 li111.076 2.4707 110.975 2.5791 110.975 2.71191 cv110.975 2.71191 110.975 2.6582 110.975 2.78906 cv110.975 2.9209 111.063 3.03125 111.209 3.07324 cv112.459 3.43945 li112.459 8.92188 licp131.411 7.99121 mo130.87 8.03516 130.033 8.11035 129.246 8.11035 cv128.115 8.11035 127.688 7.43066 127.688 6.36719 cv127.688 6.26465 li131.662 6.26465 li131.818 6.26465 131.896 6.15625 131.896 5.98242 cv131.896 5.60449 li131.896 3.85547 131.25 2.38672 129.144 2.38672 cv127.061 2.38672 126.365 3.80664 126.365 5.60449 cv126.365 6.02246 li126.365 8.3252 127.515 9.25781 129.186 9.25781 cv130.129 9.25781 130.693 9.1875 131.428 9.05469 cv131.633 9.01758 131.674 8.93359 131.674 8.75977 cv131.674 8.1582 li131.674 8.03809 131.566 7.97852 131.459 7.9873 cv131.411 7.99121 licp130.563 5.29688 mo127.695 5.29688 li127.695 5.21777 li127.695 4.08203 128.254 3.51758 129.144 3.51758 cv130.045 3.51758 130.563 4.05762 130.563 5.21777 cv130.563 5.29688 licp132.871 2.4707 mo132.738 2.4707 132.637 2.5791 132.637 2.71191 cv132.637 2.71191 132.637 2.6582 132.637 2.78906 cv132.637 2.9209 132.725 3.03125 132.871 3.07324 cv134.078 3.43945 li134.078 8.92188 li134.078 9.05469 134.186 9.16797 134.313 9.16797 cv135.16 9.16797 li135.292 9.16797 135.4 9.04883 135.4 8.92188 cv135.4 3.98633 li135.953 3.67383 136.459 3.51758 137.06 3.51758 cv137.21 3.51758 137.307 3.42676 137.307 3.29492 cv137.307 2.61523 li137.307 2.47656 137.21 2.38672 137.06 2.38672 cv136.549 2.38672 135.971 2.51172 135.296 3.00391 cv135.285 2.71094 li135.281 2.5791 135.175 2.4707 135.043 2.4707 cv132.871 2.4707 licp124.447 7.99121 mo123.906 8.03516 123.069 8.11035 122.281 8.11035 cv121.151 8.11035 120.725 7.43066 120.725 6.36719 cv120.725 6.26465 li124.698 6.26465 li124.854 6.26465 124.934 6.15625 124.934 5.98242 cv124.934 5.60449 li124.934 3.85547 124.286 2.38672 122.18 2.38672 cv120.098 2.38672 119.402 3.80664 119.402 5.60449 cv119.402 6.02246 li119.402 8.3252 120.551 9.25781 122.221 9.25781 cv123.166 9.25781 123.729 9.1875 124.464 9.05469 cv124.668 9.01758 124.71 8.93359 124.71 8.75977 cv124.71 8.1582 li124.71 8.03809 124.603 7.97852 124.494 7.9873 cv124.447 7.99121 licp123.598 5.29688 mo120.73 5.29688 li120.73 5.21777 li120.73 4.08203 121.289 3.51758 122.18 3.51758 cv123.081 3.51758 123.598 4.05762 123.598 5.21777 cv123.598 5.29688 licp143.375 8.92188 mo143.375 9.05469 143.483 9.16797 143.609 9.16797 cv144.457 9.16797 li144.59 9.16797 144.697 9.04883 144.697 8.92188 cv144.697 3.96777 li145.227 3.69727 145.731 3.51758 146.188 3.51758 cv147.108 3.51758 147.361 3.85352 147.361 4.98438 cv147.361 8.92188 li147.361 9.05469 147.47 9.16797 147.602 9.16797 cv148.443 9.16797 li148.576 9.16797 148.684 9.05469 148.684 8.92188 cv148.684 4.8418 li148.684 3.50684 148.223 2.38672 146.598 2.38672 cv145.846 2.38672 145.342 2.54102 144.611 2.99219 cv144.602 2.71094 li144.597 2.5791 144.49 2.4707 144.358 2.4707 cv142.125 2.4707 li141.993 2.4707 141.891 2.5791 141.891 2.71191 cv141.891 2.71191 141.891 2.6582 141.891 2.78906 cv141.891 2.9209 141.979 3.03125 142.125 3.07324 cv143.375 3.43945 li143.375 8.92188 licp139.454 8.92188 mo139.454 9.05469 139.563 9.16797 139.694 9.16797 cv140.536 9.16797 li140.668 9.16797 140.776 9.05469 140.776 8.92188 cv140.776 2.71094 li140.776 2.5791 140.668 2.4707 140.536 2.4707 cv138.198 2.4707 li138.066 2.4707 137.963 2.5791 137.963 2.71191 cv137.963 2.71191 137.963 2.6582 137.963 2.78906 cv137.963 2.9209 138.053 3.03125 138.198 3.07324 cv139.454 3.43945 li139.454 8.92188 licp140.807 1.25098 mo140.807 0.240234 li140.807 0.108398 140.699 0 140.566 0 cv139.676 0 li139.544 0 139.43 0.108398 139.43 0.240234 cv139.43 1.25098 li139.43 1.38281 139.544 1.49121 139.676 1.49121 cv140.566 1.49121 li140.699 1.49121 140.807 1.38281 140.807 1.25098 cvcp93.2881 8.92188 mo93.2881 9.05469 93.3965 9.16797 93.5225 9.16797 cv94.3711 9.16797 li94.5029 9.16797 94.6113 9.04883 94.6113 8.92188 cv94.6113 3.96777 li95.1406 3.69727 95.6445 3.51758 96.1016 3.51758 cv97.0215 3.51758 97.2744 3.85352 97.2744 4.98438 cv97.2744 8.92188 li97.2744 9.05469 97.3828 9.16797 97.5156 9.16797 cv98.3564 9.16797 li98.4883 9.16797 98.5967 9.05469 98.5967 8.92188 cv98.5967 4.8418 li98.5967 3.50684 98.1357 2.38672 96.5107 2.38672 cv95.7598 2.38672 95.2559 2.54102 94.5244 2.99219 cv94.5146 2.71094 li94.5098 2.5791 94.4043 2.4707 94.2715 2.4707 cv92.0391 2.4707 li91.9063 2.4707 91.8047 2.5791 91.8047 2.71191 cv91.8047 2.71191 91.8047 2.6582 91.8047 2.78906 cv91.8047 2.9209 91.8926 3.03125 92.0391 3.07324 cv93.2881 3.43945 li93.2881 8.92188 licp108.537 8.92188 mo108.537 9.05469 108.646 9.16797 108.777 9.16797 cv109.619 9.16797 li109.752 9.16797 109.86 9.05469 109.86 8.92188 cv109.86 2.71094 li109.86 2.5791 109.752 2.4707 109.619 2.4707 cv107.282 2.4707 li107.149 2.4707 107.047 2.5791 107.047 2.71191 cv107.047 2.71191 107.047 2.6582 107.047 2.78906 cv107.047 2.9209 107.136 3.03125 107.282 3.07324 cv108.537 3.43945 li108.537 8.92188 licp109.891 1.25098 mo109.891 0.240234 li109.891 0.108398 109.782 0 109.65 0 cv108.76 0 li108.627 0 108.514 0.108398 108.514 0.240234 cv108.514 1.25098 li108.514 1.38281 108.627 1.49121 108.76 1.49121 cv109.65 1.49121 li109.782 1.49121 109.891 1.38281 109.891 1.25098 cvcp90.8496 8.93359 mo90.8496 8.24219 li90.8496 8.13477 90.7715 8.05078 90.6641 8.05078 cv88.2773 8.05078 li87.291 8.05078 87.0625 7.76172 87.0625 6.9082 cv87.0625 5.12305 li90.5371 5.12305 li90.6699 5.12305 90.7773 5.01367 90.7773 4.88184 cv90.7773 4.2207 li90.7773 4.08789 90.6699 3.98047 90.5371 3.98047 cv87.0625 3.98047 li87.0625 2.49512 li87.0625 1.6416 87.291 1.35352 88.2773 1.35352 cv90.6641 1.35352 li90.7715 1.35352 90.8496 1.26855 90.8496 1.16016 cv90.8496 0.474609 li90.8496 0.355469 90.7969 0.28125 90.6699 0.264648 cv90.2256 0.206055 89.4258 0.144531 88.3555 0.144531 cv87.4268 0.144531 86.6982 0.267578 86.2188 0.753906 cv85.8418 1.13574 85.6855 1.68262 85.6855 2.49512 cv85.6855 6.9082 li85.6855 7.70996 85.8369 8.25195 86.2041 8.63477 cv86.6826 9.13086 87.418 9.25781 88.3555 9.25781 cv89.4258 9.25781 90.25 9.20117 90.6699 9.14453 cv90.7969 9.12695 90.8496 9.05469 90.8496 8.93359 cvcp154.734 9.71582 mo154.734 10.2617 154.476 10.5811 153.213 10.5811 cv151.98 10.5811 151.632 10.2207 151.632 9.63672 cv151.632 9.5293 li151.632 9 151.813 8.77148 152.076 8.49512 cv153.291 8.79492 li154.463 9.08398 154.734 9.25781 154.734 9.625 cv154.734 9.71582 licp155.46 3.42578 mo156.359 3.1582 li156.506 3.11523 156.595 3.00586 156.595 2.87402 cv156.595 2.74219 156.595 2.71191 156.595 2.71191 cv156.595 2.5791 156.492 2.4707 156.359 2.4707 cv153.165 2.4707 li151.091 2.4707 150.399 3.50586 150.399 4.6416 cv150.399 4.73145 li150.399 5.33887 150.556 5.77148 150.922 6.13281 cv150.592 6.34277 150.436 6.70313 150.436 7.05273 cv150.436 7.06445 li150.436 7.4668 150.623 7.89355 151.024 8.10352 cv150.634 8.42969 150.34 8.94531 150.34 9.5293 cv150.34 9.63672 li150.34 10.8574 151.289 11.5918 153.213 11.5918 cv155.221 11.5918 156.057 10.9063 156.057 9.71582 cv156.057 9.625 li156.057 8.41699 154.963 8.12207 153.556 7.7793 cv151.951 7.38281 li151.674 7.31641 151.56 7.21484 151.56 6.99219 cv151.56 6.84766 151.638 6.72754 151.813 6.63086 cv152.106 6.75195 152.527 6.85352 153.165 6.85352 cv154.998 6.85352 155.924 6.14453 155.924 4.73145 cv155.924 4.6416 li155.924 4.13281 155.77 3.73047 155.46 3.42578 cvcp154.62 4.75 mo154.62 5.41113 154.313 5.83789 153.165 5.83789 cv151.914 5.83789 151.704 5.23633 151.704 4.75 cv151.704 4.65332 li151.704 4.03418 151.98 3.49902 153.165 3.49902 cv154.331 3.49902 154.62 4.00391 154.62 4.65332 cv154.62 4.75 licp104.633 9.71582 mo104.633 10.2617 104.374 10.5811 103.111 10.5811 cv101.879 10.5811 101.53 10.2207 101.53 9.63672 cv101.53 9.5293 li101.53 9 101.711 8.77148 101.976 8.49512 cv103.189 8.79492 li104.361 9.08398 104.633 9.25781 104.633 9.625 cv104.633 9.71582 licp105.358 3.42578 mo106.258 3.1582 li106.404 3.11523 106.493 3.00586 106.493 2.87402 cv106.493 2.74219 106.493 2.71191 106.493 2.71191 cv106.493 2.5791 106.391 2.4707 106.258 2.4707 cv103.063 2.4707 li100.989 2.4707 100.298 3.50586 100.298 4.6416 cv100.298 4.73145 li100.298 5.33887 100.454 5.77148 100.82 6.13281 cv100.49 6.34277 100.334 6.70313 100.334 7.05273 cv100.334 7.06445 li100.334 7.4668 100.521 7.89355 100.923 8.10352 cv100.532 8.42969 100.237 8.94531 100.237 9.5293 cv100.237 9.63672 li100.237 10.8574 101.188 11.5918 103.111 11.5918 cv105.119 11.5918 105.955 10.9063 105.955 9.71582 cv105.955 9.625 li105.955 8.41699 104.861 8.12207 103.454 7.7793 cv101.85 7.38281 li101.572 7.31641 101.459 7.21484 101.459 6.99219 cv101.459 6.84766 101.536 6.72754 101.711 6.63086 cv102.005 6.75195 102.426 6.85352 103.063 6.85352 cv104.896 6.85352 105.822 6.14453 105.822 4.73145 cv105.822 4.6416 li105.822 4.13281 105.668 3.73047 105.358 3.42578 cvcp104.519 4.75 mo104.519 5.41113 104.211 5.83789 103.063 5.83789 cv101.813 5.83789 101.603 5.23633 101.603 4.75 cv101.603 4.65332 li101.603 4.03418 101.879 3.49902 103.063 3.49902 cv104.23 3.49902 104.519 4.00391 104.519 4.65332 cv104.519 4.75 licp48.6543 8.04297 mo48.1523 8.08008 47.8311 8.12207 47.1455 8.12207 cv46.376 8.12207 45.8164 7.63477 45.8164 6.33691 cv45.8164 5.30859 li45.8164 4.00391 46.3828 3.52344 47.1455 3.52344 cv47.8311 3.52344 48.1514 3.58008 48.6602 3.60449 cv48.7012 3.60645 li48.8164 3.61133 48.9199 3.54688 48.9199 3.42676 cv48.9199 2.82031 li48.9199 2.63965 48.8711 2.57324 48.6729 2.53125 cv48.3359 2.45898 47.7891 2.38672 47.1455 2.38672 cv45.541 2.38672 44.4941 3.44531 44.4941 5.30859 cv44.4941 6.33691 li44.4941 8.2002 45.5469 9.25879 47.1455 9.25879 cv47.7949 9.25879 48.3359 9.18652 48.6729 9.11426 cv48.8711 9.07227 48.9199 9 48.9199 8.82617 cv48.9199 8.21875 li48.9199 8.09766 48.8105 8.03223 48.6963 8.04102 cv48.6543 8.04297 licp55.3311 2.4707 mo55.1992 2.4707 55.0957 2.5791 55.0957 2.71191 cv55.0957 2.71191 55.0957 2.6582 55.0957 2.78906 cv55.0957 2.9209 55.1855 3.03125 55.3311 3.07422 cv56.5371 3.43945 li56.5371 8.92188 li56.5371 9.05469 56.6465 9.16797 56.7725 9.16797 cv57.6201 9.16797 li57.752 9.16797 57.8604 9.04883 57.8604 8.92188 cv57.8604 3.98633 li58.4131 3.67383 58.918 3.51758 59.5195 3.51758 cv59.6699 3.51758 59.7656 3.42676 59.7656 3.29492 cv59.7656 2.61523 li59.7656 2.47656 59.6699 2.38672 59.5195 2.38672 cv59.0078 2.38672 58.4307 2.51172 57.7559 3.00391 cv57.7451 2.71191 li57.7402 2.5791 57.6348 2.4707 57.502 2.4707 cv55.3311 2.4707 licp51.3564 3.44922 mo50.0801 3.07422 li49.9482 3.02832 49.8457 2.92773 49.8457 2.7959 cv49.8457 2.69922 li49.8457 2.56738 49.9482 2.4707 50.0801 2.4707 cv51.3564 2.4707 li51.3564 1.38867 li51.3564 1.27148 51.4473 1.17188 51.585 1.14844 cv52.457 1.00391 li52.5723 0.984375 52.6855 1.06152 52.6855 1.19629 cv52.6855 2.4707 li53.875 2.4707 li54.0078 2.4707 54.1152 2.5791 54.1152 2.71191 cv54.1152 3.27051 li54.1152 3.40234 54.0078 3.51172 53.875 3.51172 cv52.6855 3.51172 li52.6855 7.49707 li52.6855 8.12891 52.7871 8.21289 53.2441 8.21289 cv53.8994 8.21289 li54.0615 8.21289 54.1523 8.2666 54.1523 8.38672 cv54.1523 8.97656 li54.1523 9.08984 54.0859 9.16211 53.9297 9.18652 cv53.665 9.22852 53.377 9.25879 53.1299 9.25879 cv51.8975 9.25879 51.3564 8.96387 51.3564 7.49707 cv51.3564 3.44922 licpf75.8848 14.6016 mo75.3076 14.6016 li74.7422 14.6016 74.5742 14.7695 74.5742 15.4316 cv74.5742 16.2969 li75.8369 16.2969 li75.9688 16.2969 76.0654 16.3936 76.0654 16.5137 cv76.0654 16.9824 li76.0654 17.1035 75.9688 17.1875 75.8369 17.1875 cv74.5742 17.1875 li74.5742 22.6709 li74.5742 22.791 74.4668 22.9121 74.3457 22.9121 cv73.7568 22.9121 li73.625 22.9121 73.5156 22.791 73.5156 22.6709 cv73.5156 17.1875 li72.3496 17.0547 li72.2168 17.043 72.1211 16.959 72.1211 16.8379 cv72.1211 16.5137 li72.1211 16.3936 72.2168 16.2969 72.3496 16.2969 cv73.5156 16.2969 li73.5156 15.4316 li73.5156 14.1445 74.1416 13.7598 75.1992 13.7598 cv75.5244 13.7598 75.7168 13.7959 75.873 13.832 cv76.0059 13.8682 76.1016 13.916 76.1016 14.0244 cv76.1016 14.4219 li76.1016 14.5537 76.0176 14.6016 75.8848 14.6016 cvcp70.1611 19.1475 mo70.1611 17.9209 69.668 17.1387 68.5381 17.1387 cv67.4189 17.1387 66.9258 17.9082 66.9258 19.1475 cv66.9258 20.0615 li66.9258 21.2881 67.4072 22.0693 68.5381 22.0693 cv69.6563 22.0693 70.1611 21.2998 70.1611 20.0615 cv70.1611 19.1475 licp68.5381 22.9961 mo66.7695 22.9961 65.8682 21.8291 65.8682 20.0615 cv65.8682 19.1475 li65.8682 17.3799 66.7695 16.2129 68.5381 16.2129 cv70.3057 16.2129 71.2188 17.3799 71.2188 19.1475 cv71.2188 20.0615 li71.2188 21.8291 70.3057 22.9961 68.5381 22.9961 cvcp61.8359 22.9355 mo61.5957 22.9707 61.2832 22.9961 61.0547 22.9961 cv59.9482 22.9961 59.4199 22.707 59.4199 21.3848 cv59.4199 17.1875 li58.252 17.0547 li58.1201 17.043 58.0234 16.9707 58.0234 16.8379 cv58.0234 16.5137 li58.0234 16.3809 58.1201 16.2969 58.252 16.2969 cv59.4199 16.2969 li59.4199 15.1191 li59.4199 14.998 59.5039 14.9023 59.6357 14.8789 cv60.2607 14.7822 li60.2734 14.7822 60.2852 14.7822 60.2969 14.7822 cv60.3926 14.7822 60.4775 14.8662 60.4775 14.9863 cv60.4775 16.2969 li61.7754 16.2969 li61.9082 16.2969 62.0166 16.4063 62.0166 16.5381 cv62.0166 16.9473 li62.0166 17.0791 61.9082 17.1875 61.7754 17.1875 cv60.4775 17.1875 li60.4775 21.3848 li60.4775 22.0459 60.6455 22.1416 61.127 22.1416 cv61.8008 22.1416 li61.9688 22.1416 62.0527 22.1895 62.0527 22.3105 cv62.0527 22.7305 li62.0527 22.8389 61.9922 22.9121 61.8359 22.9355 cvcp56.666 22.9121 mo56.0879 22.9121 li55.9561 22.9121 55.8477 22.8027 55.8477 22.6709 cv55.8477 18.7148 li55.8477 17.5 55.4395 17.127 54.5254 17.127 cv54.0195 17.127 53.4551 17.3193 52.9014 17.5957 cv52.9014 22.6709 li52.9014 22.791 52.793 22.9121 52.6611 22.9121 cv52.0723 22.9121 li51.9512 22.9121 51.8438 22.8027 51.8438 22.6709 cv51.8438 16.5381 li51.8438 16.4063 51.9395 16.2969 52.0723 16.2969 cv52.6729 16.2969 li52.8047 16.2969 52.9014 16.4063 52.9014 16.5381 cv52.9014 16.7666 li53.5625 16.3936 54.1035 16.2129 54.8135 16.2129 cv56.2559 16.2129 56.9063 17.1152 56.9063 18.7148 cv56.9063 22.6709 li56.9063 22.8027 56.7979 22.9121 56.666 22.9121 cvcp49.3301 19.0273 mo49.3301 17.668 48.8125 17.1387 47.7549 17.1387 cv46.7207 17.1387 46.1426 17.7285 46.1426 19.0273 cv46.1426 19.1348 li49.3301 19.1348 li49.3301 19.0273 licp50.1719 19.9414 mo46.1426 19.9414 li46.1426 20.1094 li46.1426 21.541 46.709 22.0693 47.8145 22.0693 cv48.5117 22.0693 49.4023 22.0215 49.9551 21.9375 cv49.9795 21.9375 49.9912 21.9375 50.0156 21.9375 cv50.1113 21.9375 50.208 21.9854 50.208 22.1055 cv50.208 22.5146 li50.208 22.6709 50.1602 22.7549 49.9668 22.791 cv49.2813 22.9238 48.6211 22.9961 47.8145 22.9961 cv46.4316 22.9961 45.085 22.3457 45.085 20.1094 cv45.085 19.0273 li45.085 17.3076 46.0352 16.2129 47.7549 16.2129 cv49.5098 16.2129 50.4004 17.3193 50.4004 19.0273 cv50.4004 19.6768 li50.4004 19.832 50.3164 19.9414 50.1719 19.9414 cvcp43.4258 22.9121 mo42.8477 22.9121 li42.7158 22.9121 42.6074 22.8027 42.6074 22.6709 cv42.6074 18.4141 li42.6074 17.4043 42.1387 17.127 41.5137 17.127 cv41.0801 17.127 40.5762 17.2715 40.1064 17.4521 cv40.1787 17.7168 40.2148 18.0293 40.2148 18.3896 cv40.2148 22.6709 li40.2148 22.791 40.1309 22.9121 39.998 22.9121 cv39.3613 22.9121 li39.2402 22.9121 39.1563 22.8027 39.1563 22.6709 cv39.1563 18.3896 li39.1563 17.3438 38.8555 17.127 38.2305 17.127 cv37.7979 17.127 37.2686 17.3438 36.7637 17.5957 cv36.7637 22.6709 li36.7637 22.791 36.6797 22.9121 36.5469 22.9121 cv35.9102 22.9121 li35.7891 22.9121 35.7051 22.8027 35.7051 22.6709 cv35.7051 16.5381 li35.7051 16.4063 35.8008 16.2969 35.9336 16.2969 cv36.5352 16.2969 li36.668 16.2969 36.7637 16.4063 36.7637 16.5381 cv36.7637 16.7666 li37.2441 16.4658 37.8574 16.2012 38.5195 16.2012 cv39.0361 16.2012 39.4209 16.3457 39.7217 16.6943 cv40.3828 16.3809 41.0928 16.2012 41.7188 16.2012 cv42.8008 16.2012 43.666 16.7422 43.666 18.4141 cv43.666 22.6709 li43.666 22.8027 43.5576 22.9121 43.4258 22.9121 cvcp34.3711 22.9355 mo34.1309 22.9707 33.8174 22.9961 33.5889 22.9961 cv32.4824 22.9961 31.9531 22.707 31.9531 21.3848 cv31.9531 17.1875 li30.7871 17.0547 li30.6543 17.043 30.5586 16.9707 30.5586 16.8379 cv30.5586 16.5137 li30.5586 16.3809 30.6543 16.2969 30.7871 16.2969 cv31.9531 16.2969 li31.9531 15.1191 li31.9531 14.998 32.0371 14.9023 32.1699 14.8789 cv32.7949 14.7822 li32.8066 14.7822 32.8193 14.7822 32.8311 14.7822 cv32.9277 14.7822 33.0117 14.8662 33.0117 14.9863 cv33.0117 16.2969 li34.3105 16.2969 li34.4434 16.2969 34.5508 16.4063 34.5508 16.5381 cv34.5508 16.9473 li34.5508 17.0791 34.4434 17.1875 34.3105 17.1875 cv33.0117 17.1875 li33.0117 21.3848 li33.0117 22.0459 33.1797 22.1416 33.6611 22.1416 cv34.334 22.1416 li34.5029 22.1416 34.5869 22.1895 34.5869 22.3105 cv34.5869 22.7305 li34.5869 22.8389 34.5273 22.9121 34.3711 22.9355 cvcp29.6807 17.127 mo29.1279 17.127 28.623 17.2715 28.0215 17.6328 cv28.0215 22.6709 li28.0215 22.791 27.9131 22.9121 27.7813 22.9121 cv27.1914 22.9121 li27.0713 22.9121 26.9629 22.8027 26.9629 22.6709 cv26.9629 16.5381 li26.9629 16.4063 27.0586 16.2969 27.1914 16.2969 cv27.7568 16.2969 li27.8887 16.2969 27.9854 16.4063 27.9854 16.5381 cv27.9854 16.79 li28.5859 16.3691 29.1396 16.2129 29.6807 16.2129 cv29.8496 16.2129 29.9336 16.2852 29.9336 16.4297 cv29.9336 16.9229 li29.9336 17.0547 29.8496 17.127 29.6807 17.127 cvcp24.2695 19.7129 mo23.3789 19.7129 li21.9238 19.7129 21.5391 20.0371 21.5391 20.8906 cv21.5391 21.0352 li21.5391 21.9014 21.9482 22.1299 22.6455 22.1299 cv23.1992 22.1299 23.6914 21.9609 24.2695 21.6484 cv24.2695 19.7129 licp25.0869 22.9121 mo24.5332 22.9121 li24.4023 22.9121 24.293 22.8027 24.293 22.6709 cv24.293 22.4063 li23.7168 22.7432 23.1152 22.9961 22.4414 22.9961 cv21.4199 22.9961 20.4814 22.5508 20.4814 21.0469 cv20.4814 20.9033 li20.4814 19.6045 21.2393 18.9551 23.3789 18.9551 cv24.2695 18.9551 li24.2695 18.4746 li24.2695 17.4639 23.9209 17.1152 22.9824 17.1152 cv22.2012 17.1152 21.623 17.1631 21.1426 17.2109 cv21.1191 17.2109 21.1064 17.2109 21.082 17.2109 cv20.9746 17.2109 20.8662 17.1748 20.8662 17.0195 cv20.8662 16.5977 li20.8662 16.4658 20.9502 16.3936 21.1191 16.3691 cv21.6113 16.2852 22.1641 16.2129 22.9824 16.2129 cv24.6543 16.2129 25.3281 17.0547 25.3281 18.4746 cv25.3281 22.6709 li25.3281 22.8027 25.2188 22.9121 25.0869 22.9121 cvcp18.2441 19.1836 mo18.2441 17.9209 17.8721 17.1035 16.6816 17.1035 cv16.1758 17.1035 15.6113 17.1631 15.2744 17.2227 cv15.2744 21.9854 li15.6719 22.0576 16.2969 22.1055 16.6816 22.1055 cv17.8594 22.1055 18.2441 21.3359 18.2441 20.0488 cv18.2441 19.1836 licp16.6816 22.9961 mo16.3086 22.9961 15.7441 22.9473 15.2744 22.8633 cv15.2744 25.04 li15.2744 25.1602 15.1777 25.2686 15.0459 25.2686 cv14.4326 25.2686 li14.3125 25.2686 14.2158 25.1719 14.2158 25.04 cv14.2158 16.7666 li14.2158 16.6094 14.252 16.5381 14.4688 16.4902 cv15.1055 16.334 15.9482 16.2129 16.6816 16.2129 cv18.4727 16.2129 19.3027 17.3799 19.3027 19.1836 cv19.3027 20.0488 li19.3027 21.9375 18.4375 22.9961 16.6816 22.9961 cvcp11.7031 19.0273 mo11.7031 17.668 11.1855 17.1387 10.127 17.1387 cv9.09375 17.1387 8.51563 17.7285 8.51563 19.0273 cv8.51563 19.1348 li11.7031 19.1348 li11.7031 19.0273 licp12.5449 19.9414 mo8.51563 19.9414 li8.51563 20.1094 li8.51563 21.541 9.08105 22.0693 10.1875 22.0693 cv10.8848 22.0693 11.7754 22.0215 12.3281 21.9375 cv12.3516 21.9375 12.3643 21.9375 12.3887 21.9375 cv12.4844 21.9375 12.5811 21.9854 12.5811 22.1055 cv12.5811 22.5146 li12.5811 22.6709 12.5332 22.7549 12.3398 22.791 cv11.6543 22.9238 10.9941 22.9961 10.1875 22.9961 cv8.80469 22.9961 7.45801 22.3457 7.45801 20.1094 cv7.45801 19.0273 li7.45801 17.3076 8.4082 16.2129 10.127 16.2129 cv11.8828 16.2129 12.7734 17.3193 12.7734 19.0273 cv12.7734 19.6768 li12.7734 19.832 12.6895 19.9414 12.5449 19.9414 cvcp5.07715 17.6328 mo5.07715 15.4551 3.9707 14.8301 2.52734 14.8301 cv1.96289 14.8301 1.58984 14.8418 1.19336 14.8662 cv1.19336 22.0332 li1.57813 22.0576 1.96289 22.0576 2.52734 22.0576 cv3.9707 22.0576 5.07715 21.4199 5.07715 19.2559 cv5.07715 17.6328 licp2.52734 22.9961 mo1.61328 22.9961 0.6875 22.9355 0.338867 22.875 cv0.182617 22.8516 0.0859375 22.7549 0.0859375 22.5742 cv0.0859375 14.3125 li0.0859375 14.1445 0.182617 14.0371 0.338867 14.0127 cv0.6875 13.9521 1.61328 13.8926 2.52734 13.8926 cv4.75195 13.8926 6.17188 15.0352 6.17188 17.6328 cv6.17188 19.2559 li6.17188 21.8291 4.75195 22.9961 2.52734 22.9961 cvcp191.908 18.4258 mo191.908 17.7051 191.584 17.1387 190.285 17.1387 cv188.938 17.1387 188.662 17.752 188.662 18.4258 cv188.662 18.5225 li188.662 19.0508 188.902 19.749 190.285 19.749 cv191.584 19.749 191.908 19.2441 191.908 18.5225 cv191.908 18.4258 licp192.005 23.3564 mo192.005 22.8867 191.62 22.6953 190.537 22.418 cv189.18 22.0703 li188.83 22.3701 188.59 22.6709 188.59 23.2969 cv188.59 23.4043 li188.59 24.0781 188.986 24.499 190.321 24.499 cv191.692 24.499 192.005 24.1143 192.005 23.4531 cv192.005 23.3564 licp192.979 17.1035 mo192.546 17.1875 li192.762 17.416 192.955 17.7764 192.955 18.4258 cv192.955 18.5225 li192.955 19.8447 192.137 20.5781 190.285 20.5781 cv189.648 20.5781 189.239 20.4824 188.891 20.3379 cv188.686 20.4346 188.59 20.5664 188.59 20.7471 cv188.59 20.9512 188.686 21.0596 188.963 21.1318 cv190.754 21.5889 li191.933 21.8887 193.063 22.2266 193.063 23.3564 cv193.063 23.4531 li193.063 24.6074 192.293 25.3164 190.321 25.3164 cv188.422 25.3164 187.557 24.583 187.557 23.4043 cv187.557 23.2969 li187.557 22.623 187.916 22.0703 188.313 21.7695 cv188.229 21.7334 li187.844 21.5645 187.676 21.168 187.676 20.7949 cv187.676 20.7832 li187.676 20.459 187.832 20.1094 188.169 19.917 cv187.796 19.5684 187.615 19.1348 187.615 18.5225 cv187.615 18.4258 li187.615 17.3555 188.217 16.2979 190.285 16.2979 cv192.919 16.2979 li193.063 16.2979 193.195 16.418 193.195 16.5625 cv193.195 16.875 li193.195 17.0313 193.111 17.0791 192.979 17.1035 cvcp185.849 22.9121 mo185.271 22.9121 li185.139 22.9121 185.031 22.8027 185.031 22.6709 cv185.031 18.7148 li185.031 17.5 184.622 17.127 183.708 17.127 cv183.203 17.127 182.638 17.3203 182.085 17.5967 cv182.085 22.6709 li182.085 22.791 181.977 22.9121 181.844 22.9121 cv181.256 22.9121 li181.135 22.9121 181.027 22.8027 181.027 22.6709 cv181.027 16.5381 li181.027 16.4063 181.123 16.2979 181.256 16.2979 cv181.856 16.2979 li181.988 16.2979 182.085 16.4063 182.085 16.5381 cv182.085 16.7666 li182.746 16.3936 183.287 16.2129 183.997 16.2129 cv185.439 16.2129 186.089 17.1152 186.089 18.7148 cv186.089 22.6709 li186.089 22.8027 185.98 22.9121 185.849 22.9121 cvcp179.006 22.9121 mo178.43 22.9121 li178.297 22.9121 178.188 22.8027 178.188 22.6709 cv178.188 16.5381 li178.188 16.4063 178.297 16.2979 178.43 16.2979 cv179.006 16.2979 li179.139 16.2979 179.247 16.4063 179.247 16.5381 cv179.247 22.6709 li179.247 22.8027 179.139 22.9121 179.006 22.9121 cvcp179.03 15.2393 mo178.417 15.2393 li178.285 15.2393 178.177 15.1309 178.177 14.998 cv178.177 14.0371 li178.177 13.9043 178.285 13.7969 178.417 13.7969 cv179.03 13.7969 li179.162 13.7969 179.271 13.9043 179.271 14.0371 cv179.271 14.998 li179.271 15.1309 179.162 15.2393 179.03 15.2393 cvcp176.661 17.127 mo176.108 17.127 175.604 17.2715 175.002 17.6328 cv175.002 22.6709 li175.002 22.791 174.894 22.9121 174.762 22.9121 cv174.172 22.9121 li174.052 22.9121 173.943 22.8027 173.943 22.6709 cv173.943 16.5381 li173.943 16.4063 174.04 16.2979 174.172 16.2979 cv174.737 16.2979 li174.869 16.2979 174.966 16.4063 174.966 16.5381 cv174.966 16.791 li175.566 16.3691 176.12 16.2129 176.661 16.2129 cv176.83 16.2129 176.914 16.2852 176.914 16.4297 cv176.914 16.9229 li176.914 17.0547 176.83 17.127 176.661 17.127 cvcp171.431 19.0273 mo171.431 17.668 170.914 17.1387 169.855 17.1387 cv168.821 17.1387 168.244 17.7285 168.244 19.0273 cv168.244 19.1348 li171.431 19.1348 li171.431 19.0273 licp172.271 19.9414 mo168.244 19.9414 li168.244 20.1094 li168.244 21.541 168.809 22.0703 169.916 22.0703 cv170.613 22.0703 171.503 22.0215 172.056 21.9375 cv172.08 21.9375 172.092 21.9375 172.115 21.9375 cv172.213 21.9375 172.309 21.9854 172.309 22.1055 cv172.309 22.5146 li172.309 22.6709 172.261 22.7549 172.068 22.791 cv171.383 22.9238 170.721 22.9961 169.916 22.9961 cv168.532 22.9961 167.186 22.3467 167.186 20.1094 cv167.186 19.0273 li167.186 17.3076 168.136 16.2129 169.855 16.2129 cv171.611 16.2129 172.501 17.3203 172.501 19.0273 cv172.501 19.6768 li172.501 19.833 172.416 19.9414 172.271 19.9414 cvcp164.889 19.0273 mo164.889 17.668 164.372 17.1387 163.313 17.1387 cv162.279 17.1387 161.702 17.7285 161.702 19.0273 cv161.702 19.1348 li164.889 19.1348 li164.889 19.0273 licp165.73 19.9414 mo161.702 19.9414 li161.702 20.1094 li161.702 21.541 162.268 22.0703 163.373 22.0703 cv164.071 22.0703 164.961 22.0215 165.514 21.9375 cv165.538 21.9375 165.551 21.9375 165.574 21.9375 cv165.67 21.9375 165.767 21.9854 165.767 22.1055 cv165.767 22.5146 li165.767 22.6709 165.719 22.7549 165.525 22.791 cv164.841 22.9238 164.18 22.9961 163.373 22.9961 cv161.99 22.9961 160.644 22.3467 160.644 20.1094 cv160.644 19.0273 li160.644 17.3076 161.594 16.2129 163.313 16.2129 cv165.069 16.2129 165.959 17.3203 165.959 19.0273 cv165.959 19.6768 li165.959 19.833 165.875 19.9414 165.73 19.9414 cvcp158.984 22.9121 mo158.407 22.9121 li158.275 22.9121 158.167 22.8027 158.167 22.6709 cv158.167 18.7148 li158.167 17.5 157.758 17.127 156.844 17.127 cv156.339 17.127 155.773 17.3203 155.221 17.5967 cv155.221 22.6709 li155.221 22.791 155.112 22.9121 154.98 22.9121 cv154.391 22.9121 li154.271 22.9121 154.162 22.8027 154.162 22.6709 cv154.162 16.5381 li154.162 16.4063 154.258 16.2979 154.391 16.2979 cv154.992 16.2979 li155.124 16.2979 155.221 16.4063 155.221 16.5381 cv155.221 16.7666 li155.882 16.3936 156.424 16.2129 157.133 16.2129 cv158.576 16.2129 159.225 17.1152 159.225 18.7148 cv159.225 22.6709 li159.225 22.8027 159.117 22.9121 158.984 22.9121 cvcp152.143 22.9121 mo151.564 22.9121 li151.433 22.9121 151.324 22.8027 151.324 22.6709 cv151.324 16.5381 li151.324 16.4063 151.433 16.2979 151.564 16.2979 cv152.143 16.2979 li152.274 16.2979 152.383 16.4063 152.383 16.5381 cv152.383 22.6709 li152.383 22.8027 152.274 22.9121 152.143 22.9121 cvcp152.166 15.2393 mo151.553 15.2393 li151.421 15.2393 151.313 15.1309 151.313 14.998 cv151.313 14.0371 li151.313 13.9043 151.421 13.7969 151.553 13.7969 cv152.166 13.7969 li152.299 13.7969 152.406 13.9043 152.406 14.0371 cv152.406 14.998 li152.406 15.1309 152.299 15.2393 152.166 15.2393 cvcp148.654 18.4258 mo148.654 17.7051 148.33 17.1387 147.031 17.1387 cv145.685 17.1387 145.408 17.752 145.408 18.4258 cv145.408 18.5225 li145.408 19.0508 145.648 19.749 147.031 19.749 cv148.33 19.749 148.654 19.2441 148.654 18.5225 cv148.654 18.4258 licp148.751 23.3564 mo148.751 22.8867 148.366 22.6953 147.284 22.418 cv145.925 22.0703 li145.576 22.3701 145.336 22.6709 145.336 23.2969 cv145.336 23.4043 li145.336 24.0781 145.732 24.499 147.067 24.499 cv148.438 24.499 148.751 24.1143 148.751 23.4531 cv148.751 23.3564 licp149.725 17.1035 mo149.292 17.1875 li149.509 17.416 149.701 17.7764 149.701 18.4258 cv149.701 18.5225 li149.701 19.8447 148.883 20.5781 147.031 20.5781 cv146.395 20.5781 145.985 20.4824 145.637 20.3379 cv145.432 20.4346 145.336 20.5664 145.336 20.7471 cv145.336 20.9512 145.432 21.0596 145.709 21.1318 cv147.5 21.5889 li148.679 21.8887 149.81 22.2266 149.81 23.3564 cv149.81 23.4531 li149.81 24.6074 149.04 25.3164 147.067 25.3164 cv145.168 25.3164 144.302 24.583 144.302 23.4043 cv144.302 23.2969 li144.302 22.623 144.662 22.0703 145.059 21.7695 cv144.975 21.7334 li144.59 21.5645 144.422 21.168 144.422 20.7949 cv144.422 20.7832 li144.422 20.459 144.578 20.1094 144.915 19.917 cv144.542 19.5684 144.361 19.1348 144.361 18.5225 cv144.361 18.4258 li144.361 17.3555 144.963 16.2979 147.031 16.2979 cv149.664 16.2979 li149.81 16.2979 149.941 16.418 149.941 16.5625 cv149.941 16.875 li149.941 17.0313 149.857 17.0791 149.725 17.1035 cvcp142.594 22.9121 mo142.018 22.9121 li141.885 22.9121 141.776 22.8027 141.776 22.6709 cv141.776 18.7148 li141.776 17.5 141.367 17.127 140.453 17.127 cv139.948 17.127 139.383 17.3203 138.83 17.5967 cv138.83 22.6709 li138.83 22.791 138.723 22.9121 138.59 22.9121 cv138 22.9121 li137.881 22.9121 137.771 22.8027 137.771 22.6709 cv137.771 16.5381 li137.771 16.4063 137.868 16.2979 138 16.2979 cv138.602 16.2979 li138.734 16.2979 138.83 16.4063 138.83 16.5381 cv138.83 16.7666 li139.492 16.3936 140.032 16.2129 140.742 16.2129 cv142.186 16.2129 142.835 17.1152 142.835 18.7148 cv142.835 22.6709 li142.835 22.8027 142.727 22.9121 142.594 22.9121 cvcp136.172 22.9355 mo135.716 22.9834 134.537 22.9961 133.828 22.9961 cv132.145 22.9961 131.267 22.3584 131.267 20.7588 cv131.267 16.1289 li131.267 14.5293 132.145 13.8926 133.828 13.8926 cv134.537 13.8926 135.668 13.916 136.172 13.9648 cv136.244 13.9766 136.293 14.0605 136.293 14.1328 cv136.293 14.7344 li136.293 14.8184 136.244 14.8789 136.16 14.8789 cv133.84 14.8789 li132.564 14.8789 132.36 15.2148 132.36 16.1289 cv132.36 17.8008 li136.053 17.8008 li136.185 17.8008 136.293 17.9092 136.293 18.041 cv136.293 18.498 li136.293 18.6309 136.185 18.7383 136.053 18.7383 cv132.36 18.7383 li132.36 20.7588 li132.36 21.6729 132.564 22.0098 133.84 22.0098 cv136.16 22.0098 li136.244 22.0098 136.293 22.0703 136.293 22.1543 cv136.293 22.7676 li136.293 22.8398 136.244 22.9238 136.172 22.9355 cvcp125.834 22.9121 mo125.209 22.9121 li125.089 22.9121 124.992 22.8027 124.992 22.6709 cv124.992 14.0967 li124.992 13.9766 125.076 13.8682 125.209 13.8682 cv125.834 13.8682 li125.954 13.8682 126.051 13.9648 126.051 14.0967 cv126.051 22.6709 li126.051 22.791 125.967 22.9121 125.834 22.9121 cvcp122.178 19.7129 mo121.288 19.7129 li119.833 19.7129 119.448 20.0371 119.448 20.8906 cv119.448 21.0352 li119.448 21.9014 119.857 22.1299 120.555 22.1299 cv121.107 22.1299 121.601 21.9609 122.178 21.6484 cv122.178 19.7129 licp122.996 22.9121 mo122.443 22.9121 li122.311 22.9121 122.202 22.8027 122.202 22.6709 cv122.202 22.4063 li121.625 22.7432 121.023 22.9961 120.351 22.9961 cv119.328 22.9961 118.391 22.5508 118.391 21.0469 cv118.391 20.9033 li118.391 19.6045 119.147 18.9551 121.288 18.9551 cv122.178 18.9551 li122.178 18.4746 li122.178 17.4639 121.83 17.1152 120.892 17.1152 cv120.109 17.1152 119.532 17.1631 119.052 17.2109 cv119.027 17.2109 119.016 17.2109 118.991 17.2109 cv118.883 17.2109 118.775 17.1758 118.775 17.0195 cv118.775 16.5977 li118.775 16.4658 118.859 16.3936 119.027 16.3691 cv119.521 16.2852 120.074 16.2129 120.892 16.2129 cv122.563 16.2129 123.236 17.0547 123.236 18.4746 cv123.236 22.6709 li123.236 22.8027 123.128 22.9121 122.996 22.9121 cvcp117.186 22.8633 mo116.789 22.9355 116.248 22.9961 115.682 22.9961 cv114.047 22.9961 113.121 21.8418 113.121 20.0732 cv113.121 19.1348 li113.121 17.3672 114.035 16.2129 115.682 16.2129 cv116.235 16.2129 116.789 16.2734 117.186 16.3457 cv117.378 16.3809 117.426 16.4414 117.426 16.6104 cv117.426 17.043 li117.426 17.1631 117.33 17.2236 117.222 17.2236 cv117.197 17.2236 117.186 17.2236 117.174 17.2236 cv116.645 17.1631 116.271 17.1387 115.682 17.1387 cv114.721 17.1387 114.18 17.7764 114.18 19.1348 cv114.18 20.0732 li114.18 21.4199 114.708 22.0693 115.682 22.0693 cv116.271 22.0693 116.645 22.0449 117.174 21.9854 cv117.186 21.9854 117.197 21.9854 117.222 21.9854 cv117.33 21.9854 117.426 22.0449 117.426 22.166 cv117.426 22.5986 li117.426 22.7549 117.378 22.8271 117.186 22.8633 cvcp111.317 22.9121 mo110.74 22.9121 li110.607 22.9121 110.5 22.8027 110.5 22.6709 cv110.5 16.5381 li110.5 16.4063 110.607 16.2969 110.74 16.2969 cv111.317 16.2969 li111.449 16.2969 111.558 16.4063 111.558 16.5381 cv111.558 22.6709 li111.558 22.8027 111.449 22.9121 111.317 22.9121 cvcp111.342 15.2393 mo110.729 15.2393 li110.596 15.2393 110.487 15.1309 110.487 14.998 cv110.487 14.0371 li110.487 13.9043 110.596 13.7959 110.729 13.7959 cv111.342 13.7959 li111.474 13.7959 111.582 13.9043 111.582 14.0371 cv111.582 14.998 li111.582 15.1309 111.474 15.2393 111.342 15.2393 cvcp108.973 17.127 mo108.419 17.127 107.914 17.2715 107.313 17.6328 cv107.313 22.6709 li107.313 22.791 107.205 22.9121 107.072 22.9121 cv106.482 22.9121 li106.363 22.9121 106.254 22.8027 106.254 22.6709 cv106.254 16.5381 li106.254 16.4063 106.351 16.2969 106.482 16.2969 cv107.049 16.2969 li107.181 16.2969 107.277 16.4063 107.277 16.5381 cv107.277 16.791 li107.878 16.3691 108.432 16.2129 108.973 16.2129 cv109.141 16.2129 109.225 16.2852 109.225 16.4297 cv109.225 16.9229 li109.225 17.0547 109.141 17.127 108.973 17.127 cvcp104.834 22.9355 mo104.594 22.9717 104.281 22.9961 104.053 22.9961 cv102.946 22.9961 102.418 22.707 102.418 21.3848 cv102.418 17.1875 li101.251 17.0547 li101.118 17.043 101.022 16.9707 101.022 16.8379 cv101.022 16.5137 li101.022 16.3809 101.118 16.2969 101.251 16.2969 cv102.418 16.2969 li102.418 15.1191 li102.418 14.998 102.501 14.9023 102.634 14.8789 cv103.259 14.7822 li103.271 14.7822 103.283 14.7822 103.295 14.7822 cv103.392 14.7822 103.476 14.8662 103.476 14.9863 cv103.476 16.2969 li104.774 16.2969 li104.906 16.2969 105.015 16.4063 105.015 16.5381 cv105.015 16.9473 li105.015 17.0791 104.906 17.1875 104.774 17.1875 cv103.476 17.1875 li103.476 21.3848 li103.476 22.0449 103.645 22.1416 104.125 22.1416 cv104.799 22.1416 li104.967 22.1416 105.051 22.1895 105.051 22.3105 cv105.051 22.7305 li105.051 22.8398 104.99 22.9121 104.834 22.9355 cvcp100.037 22.8633 mo99.6406 22.9355 99.0996 22.9961 98.5342 22.9961 cv96.8984 22.9961 95.9727 21.8418 95.9727 20.0732 cv95.9727 19.1348 li95.9727 17.3672 96.8867 16.2129 98.5342 16.2129 cv99.0879 16.2129 99.6406 16.2734 100.037 16.3457 cv100.23 16.3809 100.278 16.4414 100.278 16.6104 cv100.278 17.043 li100.278 17.1631 100.182 17.2236 100.074 17.2236 cv100.05 17.2236 100.037 17.2236 100.025 17.2236 cv99.4961 17.1631 99.123 17.1387 98.5342 17.1387 cv97.5723 17.1387 97.0313 17.7764 97.0313 19.1348 cv97.0313 20.0732 li97.0313 21.4199 97.5605 22.0693 98.5342 22.0693 cv99.123 22.0693 99.4961 22.0449 100.025 21.9854 cv100.037 21.9854 100.05 21.9854 100.074 21.9854 cv100.182 21.9854 100.278 22.0449 100.278 22.166 cv100.278 22.5986 li100.278 22.7549 100.23 22.8271 100.037 22.8633 cvcp93.6758 19.0273 mo93.6758 17.668 93.1592 17.1387 92.1006 17.1387 cv91.0664 17.1387 90.4893 17.7285 90.4893 19.0273 cv90.4893 19.1348 li93.6758 19.1348 li93.6758 19.0273 licp94.5176 19.9414 mo90.4893 19.9414 li90.4893 20.1094 li90.4893 21.541 91.0547 22.0693 92.1611 22.0693 cv92.8584 22.0693 93.748 22.0215 94.3008 21.9375 cv94.3252 21.9375 94.3379 21.9375 94.3613 21.9375 cv94.458 21.9375 94.5537 21.9854 94.5537 22.1055 cv94.5537 22.5146 li94.5537 22.6709 94.5059 22.7549 94.3135 22.791 cv93.6279 22.9238 92.9668 22.9961 92.1611 22.9961 cv90.7783 22.9961 89.4316 22.3457 89.4316 20.1094 cv89.4316 19.0273 li89.4316 17.3076 90.3809 16.2129 92.1006 16.2129 cv93.8564 16.2129 94.7461 17.3193 94.7461 19.0273 cv94.7461 19.6768 li94.7461 19.833 94.6621 19.9414 94.5176 19.9414 cvcp87.6758 22.9121 mo87.0508 22.9121 li86.9297 22.9121 86.834 22.8027 86.834 22.6709 cv86.834 14.0967 li86.834 13.9766 86.918 13.8682 87.0508 13.8682 cv87.6758 13.8682 li87.7959 13.8682 87.8926 13.9648 87.8926 14.0967 cv87.8926 22.6709 li87.8926 22.791 87.8076 22.9121 87.6758 22.9121 cvcp85.1143 22.9355 mo84.6572 22.9834 83.4785 22.9961 82.7695 22.9961 cv81.0859 22.9961 80.208 22.3584 80.208 20.7588 cv80.208 16.1289 li80.208 14.5293 81.0859 13.8926 82.7695 13.8926 cv83.4785 13.8926 84.6094 13.916 85.1143 13.9648 cv85.1865 13.9766 85.2344 14.0605 85.2344 14.1328 cv85.2344 14.7344 li85.2344 14.8184 85.1865 14.8789 85.1025 14.8789 cv82.7813 14.8789 li81.5059 14.8789 81.3027 15.2148 81.3027 16.1289 cv81.3027 17.8008 li84.9941 17.8008 li85.126 17.8008 85.2344 17.9082 85.2344 18.041 cv85.2344 18.498 li85.2344 18.6309 85.126 18.7383 84.9941 18.7383 cv81.3027 18.7383 li81.3027 20.7588 li81.3027 21.6729 81.5059 22.0098 82.7813 22.0098 cv85.1025 22.0098 li85.1865 22.0098 85.2344 22.0693 85.2344 22.1543 cv85.2344 22.7676 li85.2344 22.8398 85.1865 22.9238 85.1143 22.9355 cvcp0 0 0 0.56 cmykf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.1%%For: (PeopleGroup) (PeopleGroup)%%Title: (DTU Elektro A UK SH.eps)%%CreationDate: 27/02/08 18:09%AI9_DataStream%Gb",KCNCFTP2J!ls1g9.0b^hS'FI)+eU;ELI#)ilVg_%GB6Psd2B6Ig[^E5m:R7lUkLUgH"e^`AZ7+H?WMV-rd7F<A,SGr]+n=)a%e(]YIMp%T6e(]A$4jp/J<PBH@`fILt`E-FFYKNQ(+1l+(hNnZc*#hu2TsPc*Y-()+2m1:M<1Dd:5?oj[mXMm]4^W[934ll8^&.Tt%BR4fErbM&SjBMLnEI"rsgtl>/h2hKD"IQ4G9HPmj0"uhFragBLor'>lJFsk_rO7i#n!7=An2#X1]fEiR\6/_Ig0@s3HQBj"#[b)#%q"aURr]YEa]MsUabeEths(D&pnc&5#)[J]Xrq)gI/`0i_]Y?P?^V%8UY<Pt75;03)>b0\(EPSG&_k9Zub9]LLnQXP&mANo-?WQ-<%p&'5)_"&S6bMU#TI<Tj`H#nK4nN@?Ea3/P@_rU7bp#Ws*aHV5li,AJSVh_>7h;<*&mqE2oD]>_Qh<i2P.\J0??X0/<3(nWuqFq-B%5.c0N]FV>nHh@AKr&Sqb^C$>l4o9YQQX91!LZQe,\,VIOIb"3IU:O=_[i0TV;K\An-N$d`?fFOMo@jtn;,O[H#W*]A].a7ML+2rW%mdf2qc.?8`20Pjs7^$oFI@,H=.%7]]hHaGu',S`iFNqniTAYF`WhDA3CC;5_mf<mlpWFKs9;&08GH%^M*.R^O?Lm^b5[ZN`QN;lA%ntX?dJC(3F$uY3?pLdpO]f)Yc[J]3$qYNG&<#L.lL>R+_^RGFVcXm7/)ZFI\heEVXC/*S<(/UK8eMWQu.'2AdPcALI<S*._[+R94%VJ2\s'7QTtdm0n0JPttDIRC*f$qecV:ieOIDe:dRZWP#PMa^o=mDT.@?S&,copGSKrLl0u[np#;f=L_aIR>P$'E!S_0I@YdI0V!K%hbXMH"M\C#JdJFb@tNV-58Y"1L6`*@e1usgI`&\S00ir>n4phI]cTk_\DT<1=Y'P"o)h-'*"s(o9CSEcd`AE^e9C0s]cDDOF!N'q%#>2i-i&A#21J":<mqB`!09h(YaUAh`W%O#>I`)1nF>X$eRsGPUp^O'-I.3V;Of3s&9(.No$4T8HKmmRXW.0JC-q/@o][4a!pX"!H%(VQ/=QMI6fncNH2F@)BL3iGcJVJfmjn/Ft3IDbgc-WCn26Q$_HnWcqZX<#.t]n*+dBNSq:W""&JPX;`"lU'`un4pYAXODM&DpWQn%&K)P\*D4H.WHG4:hpW,/S5pt61X.r=L0@^;&(,<!m8U"Y8lf_2=b<P>qaB7,pPJmBG+p-_l"QFeb@r#j7tO=2SZj8cQ2\pQWElO'%</Ej/QaidLT;nW(dU2j%bm]'L?hu4cZBcWt0E!k#s%e./-V,6Pj1W+[o?Ur6hk\$Z1S)todpMr#^7*@SP5`nUaU.o1rM?,ArX_;L%\V&crYOm>?+8lZ/X3Af?b/*-#'/,uZG4WZsr81FEr8_]P$3+hLR$SJb4n7K0^cb"&pktcg@R9C7cVpbM:_dTbbsSQ'WX92]QreN>%BO_']jP$;$W/!V5-hmm<6THP$4ic,9oGYH!s'_P)*Iq"$W0OgnOQ%c=9CHA8kV]^Mm=]s:<"I]Vn$.?\5!a%#T3C.cNNKi"UVtPF%X#)T7=f%_*\7ob7?MFu+/*@AT+ib#h5C?ok+jLl(Ja`4+$+(T?k7*[;[_06jY_K9#>L\"G1Q6b@V8r4rg5tb>iS?3!Kr<>7Lh)J8%hMIT(9tYiu,6aSN*jEAQGndp4GQH!rP1C9e^pkcF8>p/tP&MR]5tuYI]p\]u[:udXFASR5,:-m_Li-,JjPB=&6q-(*MgXYtX:q4<%^@F,30].h-RRb3&Zq$aAcD64LRfJ(b95fMVE./Si:T;D1fQb-nMUuIYE@$*[`S1*TegQTKaq68T4OYdDRA7/T[0*!=>5pje6G(_g%E=SZTC5GDS1FW#.^#X/Hroe]T)rXNTd8$X4E<^']<oMk:@S4&FG7.S3JdlHFn=l,c6>09R_gDn:`7H?M<<B]Q[\Qe=i_],^.Od5Q%:&MVZn)j)u2kK/9C/#O0Gq4FBa[34pC<?4[9)&jdpU3]C\'bf_5'sd-)o:gsr*QHUo1$DeJ*#L>7JP-?D%7JkbclK`jrWamGVNVo%kf#H3%=[1@m3V0'lUD4VPf*Mc&`/q%8X(_'Q<r!G67&>U7&fQNGsf5uqO9rD4b0+9<5+P[9.@`H^_4qo:2`^#R5=bJ"#UAIZEKPu%hfP#b:Z[:B"A4n.]ui&?=RR2El8P!)g9U%Ic?4kqpg33A2tHCd"8iAD!-h/DR:A]70C=AIQLSgMK^C\R'23B%f67-pg.u:6,Br%7%kXeB<)52)E+;oAul1o_7.A]*.M-A?^R32<r8&1!S\/"iT\OGXKGT]RAH%!JXRMG+=]Xs/kp>8go]g:LLlTD:+ia^%A'<dt9G]#&S%GtW(4ZoYP^-\<"n4Lfb@hcLhC!Ug/CLBZlUr4Bn9YUe*bp=OkUYJ$;Be9r)TYJC^`o3[_E*`Wjpk]uqBH6H7"S)Jj"_VUtUr\mZR%5X6*WcVSd8^A@-UjoT@+oP&Jq%Aq=0@MSe1me5r>*IS_gj#=0.pCA@ek_K1foDNMSI<boa\)Mc4`kV?>l61QJf=Tdm&)Z6V]e04?%\[_TL3Vr:4rr$MV[Cj'Fpu`7,keA@B&YQ%gs&]nMI!5>EcPtX9q$nsWmm]P>o&%X^qbW[]l-nsRbPUDpL0gL)*V"#(]mKPLIe<7!%m8`L[qlA@D"sXi)n&IM=`!SFfg^p>aho#]0DjoJ;n(h27l1Js#?g`"$Za6^5bBJ/C+5U@rpV!6_qtMN7DMOQ1Y0QI$WBU;_rXL'o%hlhO?]t4,dSZ"8qr-3C/IsHLNI/Wr_qrRMEf&k/b[s-FAg(8RNo8i"`m>%d,&TW&91&?s;]+:C"L1ts\H#jQu#d3?D`nTeii27L,%IXh'"M;>jp^VH#9#E\K+g!/4+#iW$[?pB3k"$^S-,_F!)m@1m.F4U*NeHVUIWR:>bqu3dCB,?nch0qN`;u$-7Gj3HcHU?XT(]@b6%^J$;<s"+.>;,58J3=F0G4=M'Rb]8usasa=Un2TN0UF'`UAnnJDe=nEC<E5<e9[Fbp1b&7#W@$0&RT2Xr/#n:U[F1>kg1[O&mBkK)%T'3/Fl+'"*$W@sT.\htXf$q\WD]1Dd;_p4NF(,onZmt:9g)=aD?!(`l$>V#4C1h^-:[Ff.6eA>Af;?!!?+\hB9g,JRorRq\0I0`r%n2+Qeq;>q21-cbPjWW%pAXGI(37OtddF*8&O&ndj`f*9N6-HKDi%fBq4:K!?nI#O(#D*,q"(Qq;</3bV*u<++5'Qh<AnbWVPf7?A%5I;:;NT[WdE&+V*GXWI?9Q&N>4IK`MAfB*1rn5eoHH]=S<;:qYC@p&Gl!5-/5^*kQn%odk0H$,WU\>s+e3$FX[%-(D!Q\[F!l#(<%K<soRThpF-c<E_f*9pA!9^`G#emU%n/^5J9cTKS%1a'F;W3=)qQnT[`R$ocAiCTE<=dZZiQpDhVZ4=3U_X(<3T$&hN-XlFU73I4S%+:'Ydf7?=`+I4L=9c7X.,gasj:_aFogQL,cHe`(H1UN%!9!csM1sM!rZ2H*r;pYgVeO\r30]G('ml"D-?,o8$Yi+@.jr(p:-F3'P%3CEZ^8uq_QekkA3-nRV?5-gbg7E_.><F+Nfj2-gL47TDZ\;<'VF7/-o\@0<?/m<W`Eba`@m=jBY=c$Fn(j<0UA+qQleUnUQMdT"n%P@H!"VeDc[=Pk[M;@?9R.D]#EXba/)nj>ZF6<Xb6g&BQ6M^sak?j,1!B1+"o.Rr]G(n#J",5>j#9u=ttHltmB"Wo+o4V5+%@bjeQ%kFL]j_:]!P<eoWP=KoRYALhsaHA`W6YMto@Km]/8RC/)cPm&.oE5ksl3EHt;6NpJJFVFXh&pNcPgYq`ZWk:Rr=d3Dp.IZW%*,AQD%ZGr8rRNQ1@RfH;1mm`9T>Gn1Klf+s(]2kDM$u\J:L'!VJWu"!RH1;_qA(=[cV+7C##>g[lZr8Q(:I)Og)Du_55!Y*JV"IiX>,>:/%XamP>b,Yl($,(<M+jcmF_TIi?A\6IgcjJ-G%"5/#(tJn#e&Jgs^E/![HE:B3Z)PkU7BBJJ(\l!KOWaR:Cl9I=ZDm5"j[7eOGuQmo%,Nr2X3blQ'"ashp()j;CR92!U-YTWO/gcKgi>6B/0C6OYWOE3sV*%nNS=If!Agc&ka[pR5:Y\Ni@Y:V[!s_\3i@O+=oD*blT?\hU%B'tSfS(D^C2aOsT!coi(MqQ3g5+BfoZcT;:q3d`&1HRBY]WM;</#S<ia`K_;9rHI^[$gciS(:LWA8490_Cet,PJuTn17uc;e&_a[%okmZ'Clh;4i+FMjfgTu1baV`kD'i!+pr516@iH*T`%!IadP(NTTDP%KqFSK+0>-na[m>=1$4H0j*"4V^FVE@dn!pGL%0EaDXA]:?%Yc(@_Gs)Phas:XP5%lTlcsf],PZ?WgARQB@`L-s2B,Xa@-E',Rej0gM0AF%^dTs+Q]Gi'N[00WEECCt1lYu8IEk=RXYi<e\?W%:=%`2MmLn_<j=>mU,DLV"'ubL')dE-@L^^MCOh.mcc)\)^gso:@Iq=jjX>QDL=!Cc\SkLgWMjm7Lb%--`Uf236`udZs\4Y^*JtK:*I>%EL$o?8U3eu)74#g6"H@KLIm,gY#51(GA(jT^W6U*''1L?rl(o*^PhA!(=gMf`H%IE<c*/?Q>j;#0j>]gSg+218'5'1\G"BKr&d1Q%4qi=@LbqBO*)RN6LZegC!X\sbJ4;f"`@+/?-D7[o!_*KoJCT2%n1=(B+A>e.A-I]'-7?%+)?R"WdfahQ#u!!kAF`b)7^r`0.]e`3%!!t?@X+_@CddY_Y^M4Zhkq"O<'C]oC3=mIa.aWYfM_Gk/9\?g.Ec;XnEa\]o3JX0#BGP$!K'6AAc4+q#)nHG`n:@W9!dC7@*^:1J%ra`;?!jW1"^C$H\!N^r+_1f!7ZknTo_e'LhRj.2<M]h#1(gMdN_uT)>pg*))]QOp2S6=Ki_VR.S+IOBR&2P2A'S]]jG&mL?`(q=>%-\*A)jqYtd?5Ki91CQ-sTdaFVn8m$oO%&sHG'jNV$e,Sa_76b/)oBfE@V-3,6[5RT?6WDo;@k,X@RP0u0EN:Z:`ZROX\9kG)WCn:%p,r^6bTJf]^'G-HKe5KmJ?[_]J2J,Ie.c>;V?*I`+;HFmB`XbS8.-20$M4=(%+7PB^K;b0+?b28BfaS9oh;])7_8:EdjF0:adtqI%>!+&.<8"#S<^(5Y0N%(tViHgrO,m'MT8>Z6o%tm;iE9./k##8C&XA?IaL>'VdSJfG"WRF$Z2E,AEVos>*+l/hDC<UElDA25ZgG!O%@PbddI5\Cc/tHjS](P^9:XMOglNhR#Cl/1[kpNnZ]10D0\Z2-pY=N#0V8n+8kVI>`MRp'1K)2A3\?VH:Z9oX[#:`iK/-S0H<NQmK%2P_IM))Nq-Dd`*@AA4'tLW[^g/A0o>S/dfX29O#fj^Xe>17V1-(Hm5X5%nWE(1Q*9REr)n&3%Qhj-8I+3W5]@k@D@amsg3)@+Kb[%Dr&oT]Ag3j9X6%IOTL"%j'.S>#N*Z@'FM0P+2h1r6o#5r;@@$ld=2g(P8\X%U:_nZ8"48JKA*`WM_6=0'^J]E;L&120gKpbBjoP+%M_E:9ZrU^@fpsl+I/_@E:XKcL<eRFnO_Rn'b!`>*-"eMSJ,:r`O6q2o1Fk4`CfMg'^%.T[Q.>XYg4EPlRBCgICS%c('UbUQmhP\"%T>d\*fHtfb;;D%Z5=N!I7rN^pK?$aWbV7C%%8;,.)n'<"a=IH_AgGIB"NaJjVLkbR-$;,FC7qFu785:q*m70WD(2aU<&EF3_?Mm"%+<=MT1fVqE7?(9SL/kWdNQi3k9P#_VCRa6*V5Uq9$8&6a-7Wt+XX,h7'KK.S:migAeE0#g"-&=_\f,)Y4DK&4gQ?Y<UXN#3j.Vc?%+rOEYf)okCk^*K5I%^+W(cdO&LfpDJbu"G0j'enjC4XGB:_uMA)et$1[6i4J;;D^5I)-tgbiaiYdrlk'KPVZC98Pmo^KJGj2k%'2%(po0\7B8A;V2o.CUK5R><Nob%aAlf[Kt<%=]6'K8$#F9(aO5ZfIasI?X=WsV7n=tmA4FX6/4Ib%U0=AWU,@Mg$*tAHe8/e1UI(Wq%U.(4mCgBU*"gTi7(,Z^V:30T4PZT%W7RC@R6_VAU#+5gP#!3N$&-4QbXeWV<['rW%hGK@%ROB8Y9D@Z#I2_boX6/QB(nu0aZ[K+_%FJF`-9hk)%MX=UF%Sp1f`<Lbj1!d5j&]Aj;>2nD:>@:W1Z*QT@bL:)KhsFQ$l$PD;)bPWBP%$/IfPi#[jXSqF\e^@0c(f(IB\P]&%nkjr%""bTHgIK<\dC+Pc(6Gs6U]KFCbTP:EJp*72&sD!9Ebe4OLL_0_+u>,;As$U@Bu6H4QB>\s8_0#7+(5OKOVpa/9Tff1@O_t"%M3pr_?iiCo>>2tIdT@#'X^X75dtno;aF$;Y'JcAD&V\FWA4Y*][oF:;Z9X$Lq7SuBT%,]2'g;8l*A(H3K3!Q/__@S2#-/M7*LaBn%20Q*EQE<@*<bC.hh;JLMAR516f>?(HETL6(gs1$Dc<E#G-#68]kGTtPOa2$m=X=iSfVq[-ZE%5SB[K?=$_R26AqO=\md:#:chQis%K;=*A_[8:P@d>3GU+02S_$-ke$bFJ_42RYmNj1oOAA3&h+&%%J#NG)ENo"JjK=@)N^pAbu&&\M:=>cST<AR\$!fi-Z#C,Y<cX"5[%T]L(\g_$-i_GNrVU[91JLpNtu0&W%q(6u:nnXt^3K=:G\\G`(q\.os!#[Ill[j0s[>\6XMXU.0pNg!$p2`5erf)r+XX+t:F=;m&K%ES-c%HdQJA.(U!ISJW9W,B6M:8DPYU\uT/$_djTu(L>aTB!JAV/2l0j((13r,%[sH+&4"g-NccW"L2\W.l,6_g,@=id:X<N6J;Ul%G2"F-bS#cBPAt&s]JBUB<bPa:4AgDon'MTmMG#Qpk7rZJ"sFALA]Gct$sqFu%)gNdl40qH*oj9#+lnu1mpQ@*VJ+aSO/jDIV.R3&%UmPXt4!hH8Oup2oe^[b,P0\`>\!?$1hQV)UWYtr@_$(l\FP2``>W6.pN[&D\?E7*tmgcbh4WBJplEO?h%S.Pjc;_\8h5s(`&P'H2%ROSH*fPq2(G*$o'F;`GghD)O_0(.'#h;"N+0/#f`E^tNgnEBd43^8\Nc_L+'kkmP(5EF+9U\"*@r&d#)O3Z(HoCM2D4?>]fcHi9W%oB?*73^8\NcU2O<l!95Ehr)oXH$"KVSY&F8kL'*NFFG:%T78!HVp`9HcN)7O.\g[i5k4UpMT@RfP=\RT;7VN94;Y=A>0`unU2rc_%F!9cWnKIAXSF[_XQZ!N.*KmlbV+m/4BEl.D'fi'(-*ZGmC>oMha$aW?c;c=Hh8h858kJ28r]u[C=c1)i34iBfG?^uYXjc0R:1G(Z%1q7Zhgkllf.NBpX7?84nk$[m$4jLL^Af$jV8*T5$T0>p#-m!jt^&MnpnbC#drFaT;r,B6Cj@a$N';H,74Lq(:rFC(]U=:A3fTV81%'Cj5/)\A2Z1:K$H9NT?qPoJ+kX'ECLR4AKo;+WlSnlj+X.F%qG<7VX+ZnBEp.I3I<SS'$LT$FscNNAA00?@3LF^4YLr2*Aaa;[i<%D_s'&\Df,3fZU\J4u7VZBf!(Xp.#/Uq>L1g`C.1aZ,W9jkIg8)e?=,XMiJaj-VI.::OR)KR%fcnAo4[fITDZOjQU-*5[WS4A,'ct%1PsF75-t%.Zfa`JK(hK%Z<FCX0\[n%fp^.H`TKp$"r^%;`n<@+H!/>6M)n-=SXd6K1MIf=HZL8$N%-mG?'ZB9Q&?itgeB:J<(mVK%8I3jA#LuEN7J^uNRgNn$,,d%%<1X8nBW$Db2t>Y"IcKK*<DVKJQ0I1$!0IDA27`%^'>YSB.+W^V<s`:S.3L>ZIFQW#^K=8A4TnW(%-mGFCa(5K+g2sUb.GcXth\thA/rn]f:9e9/Rqo-YZp3!?hoiPKE7P\Ees!]s4N4niZaBgIrBY+:!ui#5efTk%)j"+-2na@UYPRis%8]iQGF''V(2^PAib/>9t`_@<)Wc0ejdO.XF[U6>Fm8TlKJe,?>7=9tf<$ElmR"KA7b!28:PVscNmOIUP-1I(l`Cq[-rrAq(e*bb8%8(I,2[I:n5^"fB2$V!aQJ&28KWmX<Q\2gqFS2X;aR7.^!&X/cD?!cMiA`I_a>cK54&c=KB!]!:?Qpgq=VW>-^nZ<[tZb00m+RM!C%hkK'Pq`^j*V<!#bg<]Y?FQD=J`kZX2T(_iq`"O)&7NV<u'R%FBDk8oa8Mo_/R($t7O]_!O_i2qN?&0eq`]qsJ3lD%Q,6u"r4)$d(%E#QV!:O3GG!FNe]>A:C/7XHRg9M6/TX6:23VdShikmBpt\Mt7`=oqSS*K,`<KI"2J-J]&nbk3/0X\&9EPO5!G]nn\c`4KI+m4]m8%[u:'@Rs7^;Kb;Ta-=G,/%cgKkXhUVLa5lMW5IDEY^oqFjgP_44OY)+D)GG`$5G0`rc'p>-(QotsdH9$&?##LAR'Y=5o;6H!5FC[W%djB\>\!s1CQV*mYH0Kdc>d(*fT3XMtXIH&OTNLn\8Zj.^CJn*4\QNM:hB\F89'o6JD0&*LZu!pGD<W`HK5Gn;AT#Qm[Z3^bYiq<f%pQCuOFV@-ck:rXrVpS\sIlaNBT+Bph?&g>"SC#Z-ekQQXpP+pqacCS,D3+#S+0R.RrE=,Iou.]c[o`7YPQ88P%*59$4c`?M]#J2a%ZqSL*&t5t*NE>Jdd;iK6@bR"@=:E7`%41O@BLQMp10Kd^Q42@*-6N-J\lhdMoA]9URXPjXGeAa-h`t+&hEo\0TICq#U$3rRU6VZ=%:0$-M@p;_CE:M;4jo@^T,(ta<kU72^(_AFb340V.Y"U+H&0oaG[OK%H'XtM'][2irh&!d`n%U"4ZRipWG!=lV"M>c6V?=eC$MG<P%a$JA*,Ho-r*G3UO^+];"&S"=+#D#[_]_)\*HQ^#,RhWID`ff9JE'`+`4=H"Nj+*!1T[<GpkIT\aAQ,],G06g2P@[egcgj2.KC`MI%d0i,UpafI<,'QEH55k2Yean7f;of2\3fhOW](NT"naU>W.6(:!SnWRar642BOt7-3oq@>q3OD$c*@!u,%,mq\elLB\.;Wft-$s!Q%)mG>]e6(Q3*,`gm*@CRk-E[/<MR=7fUpH'oco%$a9<te)p'i$;*%gu3ZH`V#RAITF4%K&='"5:dSaaVd\[%2qpV'A98@pu)i',A]%4`D;5Xl*[_`Og-OWa`cLD?"ETYJnY)?!48B/%)uaj!lWab>bT$'<\Lb264'>b;1crCi.>;1p*%2YKN22=_'g`q3kR!;J:29p8g`*%H+(VHB<@G$XkY/NN[!oJO;!pf&Qdm+)7q,&pBfJ#?5HJQ:=?Pkek$/nZ'pA](9'lu#'$)bBbI7"7/;?Q%8o#d&Y:*ls4H87_*`$X%&!(`>D",R84?k`KD"-p4<:(7<ch;b.#!3usNoLK+LJfSks*-E0g=qaq@i+oC(5oCi/[Ro*Z,JZ91j(UsioK-Bd(OXCm99&/X;#6L%RA+L&5&:O7l,KoCLfS6/W:\-*oL2r$\W3j1'PFt>LhM3]A[)kPfo<'!##obu.C2:^c*:1F;,Nh"@q01N2i+FPQ*S4^'douE_^_:;%p,(jOc_F_!ps(Ra8$V3tc1.7_e?u#3RMHqNLM4c)B>S;\)natUTjb8sK7Q>[VAt@m)"0'>X7J^K:$i=q8>LmhRSDLO:<$qTCRq$+%:04GiMsOKPr*Hf)c"^ObFajTY4DeB*]jGXD%;Y;$kd:M6%b*i8R2UISTqg5.3RiMgeJ(miY`$T/-EaOh,Uq<u9)<Cp?+\49Xg@5Y%453f#[O%be:!"uZaeggDH4?O8&Mu:rG&8ePcB?ja$9#>o`+=(MU1/?jdu0S_gW!*IB5&5S'lO8e@uSM=V-R"KR:Y#);acOXZC*$A%9er3H%B$b9L5\"[!pF+TT&V;4NajU)+WD^l@D-P78o@mnI7peHZhDuH'=O;UMq/6ikXcV'S1HSp&?7<ZN,I0.=nHqL2OPrc7e:.m%$0'9<GO'PCS`cINPXT2XbjRWcY+,Z&%EeEN7feu*$^<of5lb-,!7jX@:_L]a&3q9<0O8IiS@"6>RcEkiko\jMn0`EE3;^P@+"u^3%6R1!:C%.$.ZJ"qno%/;uS7K7o,MSYtXIYF=1SbX62P/EC7!O1.qJZDeNBY=*mGX&!f.=2heAddV)p#UK%Au&2iJaNDo@W!+_4;P#%HR%\,,4-M"8W$B*K92ig$&A0b+B>g9m'd\);d2VJT!]H&`\]cG8u3:,D:KpQk_a#b[b41VfD$WOBQ#L7%AD'"3tmp3f"46?"2a96%a'=Nu5N^`2U+LOKk"PZmp5&Y?$*O4(<]:kfD5es"ht)(?fnlhQ<^j23n!0TmdNOl"4/%i.Z$/"01F?d+T5r:ddQW<d""S\Y)751=%#:!E=-+!n)o/b,+iNT?5*M,q[:@j\<nm@t+k37@WB$D'c-=n46bTZ5&$at9!)_PSCc6Y6,-;cLT]!?2m6p#*>o-Bd8/N:0"DS-4N%a=]gD\)C's%>NW#el$kMig*9.VL(BqZ1WF)9$tM3j6453CjgLJ#K=T4G8D:cZqP#dH#nF"[%GeCNp#JL9)D_N#lF-km7BEAf04>G%(3b5EY*X('';mj_:1p0h;bq7B]umK^%(fWfZ29iqlG6*#U4_/7lpUac/JLo8'rQIV8OXtnE0Xo`ii@n5E%^RcGk*=qb&!^!c.V(`%A!A2_m<]6QM4]ZfH6#I%*K29:0#pK!aEi4V7Qptt4m+\\FZY;KGF":8nB.n,.M_.1b49hGpf75idN;&lU\&-KI[4WjUa;Q$eQL1_%Ku\9g+\E`c8_gl2mMb7g2\R=Da&/qfM@R+T/'^)?6pU319oq2;k/#rW)J@mdF/W[31o;BDX"Z2uA7[XL<p>b2T)@BC(<P6kh+hV'%ofD:0ZlU_rkEund<l!:o*(>Qf3;PmQ;Ya:b)[FN/WV)r"-n?#S=:>6oX:<+F>s6LN^E/![3iEMtM=d&RMHHjr0CTDsNC`=86X"&"%gV_0`Ouh!;:=lit/^bNiFC'@f`42`aX(TG#CI]TkHtu)bVg.T$i@7bhqY%7@Z*L3o'a[";>UJ\Z.I$.jcCiu',]CaAoGJ<3'cV&2%)0d-@SXdDg)BKHq\BS\Mcu?YCGeBfb[j+CiI_+rCM+V.<pK?PP.G3T>Mq8E/Zojn"6WVh9P605qLII)c..o\KE;R:=40_EP.O%(0%>]aj.17_qle*%WPc.S=jfX#YD7<B0=Z_GQAPb/aTR?=*HZ-r:HYF_R^[tqFHFOJ;i;gDZM3DZt6Bl^e`a`ju,VnTd"5k6`SrMODA%LM&]hB8\;qng!^.`?a=1&8a/oY]k,jD7`>MF'bg\?UW<-Iot`FB^q%1GChG*L=c*o1@,OT96gr(ScHC1BacqUfTH!*=HgP)mL-B@%B)!3\Fr2&q^>2;he\/HPI6d14o4:+HE1n"0`44B8[P$OjfJVCUVll,b8Gm!9&lMqD=K=u2:t1JI';XUT_;63ti&a&t<6=];`'i=-%f&L2X5>B_pbpX@#a*VohpZN[ed66?]Hb;lCG`V:_*o5j>]#T/>O8%iJZND6:dG7[sl$8<`kWYSQNq_ad##[S?UO0XDpNVbenK-NH%4h<;L_6&%XG.6=@I.j>Oj#suoHZY>Ck]SNea*VohpZN[ed66?]qf;/Q[Cu;;=M,t'VE\DIq,mZ5nV@mi)l+^7o_UO)?(i+&B@2q-%V_?4hSt[?>'O\1",mVf8pq%=SV'Gu'(uq*'+_ooWU.p(eMka*hccI`VM3<Ob17lXTn2h59g;6Z5%M]udFWSnq>H#.op=EUr<NIJ,%S`eVEme6:bme@F?+o]+Hm^e[*;8p>$Q8U&^7BnQB'^KcYXeD;M=<aT'BG!uoJ9'(T4rqdK+WQMf9U);]\lfW>f@*LH(WYN)Z0I@5%K/pRCD":V=EDGi5`4ZDQ4#@ZYVq>sBCR\(&"L=UUMF$L0g&r#:PI)/5P<uOk7/@3u*<W:IF(IlF7HVm!AKPb%&BEA%[$_LkO_+CO%l2SUJf60,m[`R(*:=J$8'A25-l*k^E2+I<WLPo/&`.hBS9edWiCFHY^(O"dGf7t.XX)"eb;V;6e6r?QC]l]@a9T$Gh^"d:?%?_^+%HkQVYdh)ns>U$q>HW^)>PDXZ^!!MMG;UL#^O@6Lq)X1m7p?C>>HGlCaNRW$T:?or!*qf*)@\_/RH4sT<\L)0b`N$0m2XXhV<N2lB%oXGXMF].kS4mh!X<j0m*E5>AUig!$qGdq:k:(HP$JVpiJd'-0b<s5.)X5qaciE!ph(@`(hEmJ.IkpN$r8+,Wu@[P8#D<g@!R>Vg%%VnMW^'I9QANp+q=Tq^G33*\LJ,74%"62cXM2CDSnP"U^0MN7>8k`L>*\N[WYOiRT,b+rAYhEVXQjH's@YuV"q@j;(4Vh.nr^IeW+%r9[\B<eA`)p`?!`_Ws8dn0g#)K6U=rPB7!73.h@&bsKX#cZYOTMSA*^)br`$asimH;7)WVQhn=95Ci#,eP.=%T'Fqj\BUCMYr:!H%-7.1dPo)4^`=JJEAQ;LZU!<X0#qU42#>$A1s"m<Hl'7L%^+2q,V5A[-lR'Mt?XB%/^-A=4g%OO=I::lghIHR7B`#tX[G'e6f\ofi%HFEC#5dYu'Bo(YgeJJ2:92R4R(qB-QRME_PhlWgZ$@`\rf"FZ)CJ:I?#$o$VSh=%mK5%)_U!WL!hV=6^W2/`Q9sfM/F-FYDkmH#]%m"o#3!6[jNb3@4F7:=B_7:=rP^cI<gMsLkIm$i*W;$(:WH-[-bo?!mK9BP^YHa0sQBoO*57Agn][cg:I9me:iB=dpRn\\+\?nEnm%4651>/$@&_P1[WfA\+9i'PjR-Q\DnCp.6S:X.j`uGMQ5:S`hoV`L:M4a(\;4gmqolB38BE>I5`d40:9#Zg=*hSs/S@`"/tCY,fY5%CttLb'S*K:2/CXj0Nf)eC?`o'15Rc39.]<5,V:1PLsG6Zk/U3QN*I4_9I76,-:s0Nac$%Z(9b:AY_]p/qJ>'Ra2TL=V`(FM7YS%%%RD2\gmqrX)oLq2+S0P\&+#`!BY[-I!)dB\cR(3#BdUHFFl[[pDhW1`,O#QNhR!!c&oBKJcNDIq(>aNo^ckGk5aTJVS^&SXmLkdSs%hZffb+G?6sEkI[=hN0pV49?lMQ;Y_$)00Uc66th5-6Y*/&d:[C5TDID+VP$7"'*#'9FM9NK-r'p6@sh<49u4>c$e6*:4lh7p,;8[%-i&ZjhhDTXj5A3F]X&X:WFG5]]TX_&U-/$@BbfE)=X(%CTq6@V[kC`c9UN8/"I5#>iZZg':SDfHUeU+AZ@f)rbVu<RmRgSe?E5T`%kKruR='4Q/X6aJa:%cGu%Z.&Vk)=*_i\@r'L*tFp58/Ja^@\!<\Nbi;:S:>u,(C+Z>[UMe4ehohL*T[`KYuC*_'gLQf7\SkIScae%-7l^sg800FZJ3a?.,b<9Vj!%':-!ATIgZ"sK>-r]n&L1TA,,f`/`qH^i11GKU*lJG5F=Y>JJ2=tP8f?@e/!qnl,Nl^s*R`4T46i;%^>@X01pF@9l^%$QZi/Lb7)2C&\#n`O.l)J&C.c4K0\BpuWjUhoOi`6t1pneAY-USd4^@;-Ljjb%HMS!AFE#p,Zd&XK9Io?G`>tWV%DX4P`Wm6!?]@GZt_R1_plB/Oe[$AU:4f0u?Hsc[R1U'_Y<S/_%DO]@i<ng*Q9<D!q:&)<G2A)UmcZ,jrP[oM-*MG\)r'a98:U5G6%nh]gMI2g:sMiruU\!XAS6UJG,9r<eB8LcV]75&o^po!?#C=2Y"E$VO6[N<nDFQ[@FACGQ/([_,/SMVGUT6]aj[@X?["oapsSu2+P%KIlPn*K6WF:MUc=Orh5rY88.@]&b<HD;/)5o1DIfd\r>qNQ/P-X#6$D44YXG4U'&aU5eZEg2I*\1<,MhZO0r*jk!W&<c8Z7$%Otl%hqn9UGBn7ZH1UISX,J4`?PMCIJ8[8moAeO&rUTA'E2qUgjnZ*2-SZlcW@e=*?=C94Q9md"$Ca[k\WMNKj3iVn4lGItGl.=6n+bf?%*BsIH!<+l3U[L\Pq-W7I!o\Y/.K&G;H(BMrg!OMaFl1^REokd#p&K2eDu0PbN8B9GHLtG:?!/YU<-klO/!UoR;7g"0C.lsYF)eM2%R)+rBVB#PlrV1*brq:iG^X,p2N9e&hi:XmZnbpr+YBFEY@O\#NFTtfrOR#AEa.+$bAcRZSK5Q>bDoT5"l5Tqp<eG^K24\W9i!j@n%5OEeL!.X7*9'E-L@o[8[KVfRbYNXNp\:X!(+Mp$RO:1A,N&i$d^ack)+FeOj^3#&W_q-Cu;p(.=o/n;n-M1qeP]+#]^q9cLoDps)%7iSn8CV9db]d:]27-NrKN+,_?Up::9"![$a,92hT'u<4H&M*Oq(o3K$ndt8m!p`D@FJI!<;1(Bh(PE*%JRpL":=drTkhcl1'3)F1%Z'3um\R%(5X)IIk,ES#i9Ooh#<2eM!Z]9;-BY9C2?n>"]mT,<W$/8Au98D6)qptt&S836QC5.]R4)QR>d7P3E["<G&?DSaM6=ud"%Q[ocH_j^bupo7';5_7A,lgEM-ri31@Eh#WBdT#85IVPYe(V)-1-EsjW@,7E[Lj(7`a%]_$(>](=n@#RP'&p$/22j6V7s,-Y3)mbB%@.uAT:"AZ[$V$]-Wb-B9VHt:Qd]PI<d_44pJ1fQ\D]7)2&nsM3?+'_@RfIQ0EZ)i:cTNp%>SNmX#g9c&^a'Dfb[>R?IUkb+o@Ur5%+r@Nh2cE_#(3o&+F(5bKBK/02PTf2,&S?X!\k91\M9oR?>GIKc8=+:Z"$#c</UDtr5ErWN7m1r:,a=LN+=Tfc++aZN?#!&keE"%)%242K/m6rGPUf=c.gHB4IXD`,eV-8;']1Ce8Q1qWs\AB2r**#C[0'DUHSj"@a>H3*eVN4=B1"/=HO/'NAKa_fBJV'TQ@5BKtP@DR*%>/d`3)f@0^>!_AHKidgl*Z2$MV?O$E\8i%><@8W".G2#4Z#7p9W"6J*GI72mr>d*0rRs4-f/[dj"a4=TUsl$8\&Aj:iAsO<?nI56%=7U^-m:!+uouTuh!+5K;HA/Pf=*6FcI,EdM=2Vsa6!_2knl<$5?@<o/S##YaLiSZ7:=mHG_%"BF5$3lqQ%RrU)g$h=hG(Uh?l10W%-5+C1M\]aa(s:N#(Y1+(FR^]*7!R($#4("h[r%Ykp0(FWm1n5As'F+,dQ4VHIAXVQ])k>P7',3Q40TH.UEb:7;TK!Nl_;"`Pe!73%h7!TGKPuQeQD&7dD"fuCJLC]AN1?I4_5-L5:ODZ(^D/,,bW*/D?o,csX<F1LRGL)SHnXkT/$8Al0$;Qer;6A0`C"lR(63k@#$Nrl%l+dW-]`n+@lL;p5jVZSMlkSSBDK>5\#99t@<JBADOYu(La:3=]#;Cg`^^7ZbQ>?M83g*bM(BbNDlfp!Wr!6Q,n=oV,!?@u+_2t4c%YMV`hDt+2hP6C`t0C#ESgj/seTbN)!Cmtj7jHZFVe8E`;`LsH7cM27r#<@Fnjsh0/iF8-rBcOSnZp.8M[*819l9'5kH#*3`Ydm;K%+aT!]A_>-3BPPR>4!!Ag!a8DH#jB/MST+bO(`l0V1+U,`<73XsmbT#/W,#D#lq.JAYIbQ(=I0lkZ&o$fS[SY/,@t8QUX8HI<tF&i%i4Q?QQV<3WdUMD,gb#YKGdJQ,0Mi0f%,=Ut3!+_nJu2(?A&GMAA"F)L:^5Fj7;Ki$7SaF/XQY'@p9eKdaDe%>$4V#!2c3G=lQFST%QJWEJ++^rb0X.omUF%hem?[sYNKpeML/p43JOW;5^o#D^!?K*B/S1KI*pBl4BnAMJ+&PO^8f8=n9.++a.Oj\jP9)/e:[(JX;Pj6R%iZk7$gL/]bku-`ZZ.qSJQ83_!C`ClSJpfu$@$P2/l(nKYZ3')qL/q$f$aL,`U6P?0)d4:k-D2-jlB7Gm(^1g$9[Gn9Gm&(8.j<!]%'pmIbQElLcN%0,3L1Oi)^'S]X2&EfdFjpF$f-G'5F1!R&g?Ml*h:-Fmg8:#:DJJ,C?J.r$Wf@NF_>rn"(3mW2m=ck:'s>%H$q4`0%Q@V(n<TH;.5ghpWF;B[_GT+f.i[0VnZ&)XcfcUQV$7*#`n^IcA22u!u#oacl!i`hjL_]1o=lC-T"+j^hg58a3e%8;H%Dau,f)TL)%ef!FOYgH8L2U#h`m=Gq%k;KW[RN&@23bflCAT\-[CBOaj)52]&e\3iu/hCJ0;PR4+#oN/`=@^;t/VK'uRS_07Yc;t`.iX;faQbIJ%(.-Y^j@(s^aN0.-ZB;m_>m\u^bK*A"jKHS,A$>rNZL&cnO>qNLOaE`-b8etZ)`Kff,KKH5#Tka[0]Jbn_Y%7u=V^K9%>7[&1(I+\%Jq-uB)$(:'1;"aBHX#cY!sZ16=WB_c`mKD$]U$5a0Q/!MJE&s')hSialiG-l5TeUT0*?9gqI.3"=inCTD8QQ9Cjfs8=TcSd*<9RL%2#uPo2'1jn!/I.)OVo&M9klYp&G[*N)e@Ng#KD-1gT<%Y5M6B9@`Pke05IShC]M%3KrUHp&6KB"!8u9u"0b:(a+EGO#K;WpHWp*f%`Jk6rJU!DpZ:,k&$M+=+_3QSg#Nl?m_`Si@Fb*umQL%lk=(%Lu]FoSoh<E!Y6$#u?n$&m5"uhU?!h,2TXPl0XCu!O-70##<54?so%[iTN.\4[Oj@&)oHe<E7G1NAn$E%s9tb%1E*M]HKXEaEdi<2`=[JU;ag71J[!J[^Ts!#<6j===0sqCJ1XbY/RaPRrU-NWjDA(p\9%%Kb;[c4dIhgEA99W>\$^/&=S0U%84&/XM!P9C[f(E_KFnLM7T]i!\nY<2Z[1tjX&kk!;8lYUD;Lj!$"sc-Xr<8m0:^iP+843KT]O&%<WNBM\:I6cs(1i*D)F#ie1,.FdK"rB14CbB7\n@0V9FrHrmT5=KRj0#buj]h9r&]]DujX;m&e"/d]/1o'q/s8J]+Tk,Y*hDdUEd%%,;<k>JPW5sJFc)6RU-`6(]+le6:`5t9<kAeZG7u2AeWfN8)r$&[M4S/!\VG<V-Ms-#pZJ0Q^P'T1&:uTn>jpW6,4U,0V3(Cd\K24%XalP1'@?>;6@D7P+p?N*c6cQ5:2.PMb#At%3^!cG2n4[CJP'M7=psYta_/W3?&Kus%BXpf+fqoc5b\<:/4BU)I9Ks=<EArmBj'Fb%UhR2M'/QkX;cu\,5Xu")P6M-).PN(ZkNc$r$uDHX=-.bYgb,k5Op(s(Ag?;)9jMeKC?"HuU>gbjYr-R)7Mo=b36c#?.D-HgRt4%p%Ti4s#I8rii7UE7?;MJ^sc"tieV:5r9(=r^?Ch\U@U8lt4%8B"1MK=N'g-lYD/4Cab$/`\*('7P,AMl7U/1IoWW[fq,F"H^aZ42b"%a%\E^7FZ'HF2>dmH>^M"`Q?;Z!lAgfQ8kYN#oY&k9dTH7l1=0iK4JE'oEu4%5ii1LBMnk=OSUJ=V52VE1(k!4i\_8D>\)20ErrSi%<%k-d0bBW6KNtRf,=7?`&=+t@]PSQ"$`O.B<s$_Qh,k5`=n`82Z%^,__4Fn49l'eqJ`R9=!rZ$YYdgg>X<;#HMVNk&0X>n,8(op&%9-a54/PG8$^c'AJE>=*siM5qY<\0Fke.rSE\1!QjV/1Ohoq!p@X"n#b!!FH=aOiIj)-BC#6,Vh[m38)Z_Ml/b:`H)pc&/[uRJMq/%BqT2Dh9=,0YR1LK7?n,mV:^ud6k+Yh)HjNeXTbC6b/c2XXK7q2?1c#:0^qqD7q*\L1'!L=a#Xf!!?CnPar?"8S&qp9"<[h;]1i!T%i[k._kTk3\qiE5'DR>8+BuYDML>b8:@l0"!'I@CE9I,?)2#`WaCr[[nElYO(S3Ub"9,KT"_/\EPAGlLL9!EpW1Jhh50q(+naiqD=%JCL/+/W#bn/#-h%(hU_mN[k^NI$XVE.oZM7<A&!]A=?f%`]@uAR`Ni%;^ns=g+]b6A#H\F5p!g];`C#./HD%A.u6IqqFIip$'UAO%*+(aW!s>1uUM_&'=_r[JUqEe(7,521Ae\'RE9@QhD:IDB04Yisb@msW_+IBj!;;#I.Oaqj]qOL93Z3cc*j1F(Km-V&X-*6+ecN(E%akR".;Urn+8="h"CK`+?=&g_I<g,+52(n.$8Lq^`W+3W@UE3a*>%mua_H"Rb@_fDq,THM@&(ik_mgq(N2%S?h)6[#*<:0_pZG+R/%6ipCdjsh=t_bF70E>rPW2X0s1l,6'=(t.jRB7^B52E_.OORPIL%9`cP[!Da70g#Rm)N4qqX?FA9aq<afMqK8S%Mh'>21RL%P)O\e%[*^3.]-.3E.*Z5N!&[T-Z7`En,!=\3YUJ3L9nW/m2NEc[4U'oh\F`C]#443\$5HmQVj)#.!4jDPVX$o3NLCc9PO)OCCIA/t%3eYU%"@l+*AmVs>'[(Ad.i9j$-@apR5-)AA)-0GTf+DhGbhJD!4Y:&XTGD#FJ8J8U>ncVY=uM1MGO@2+^LcfL7M-ObY\O9[%1mXd"uan:%4K#JfmAWKY&]kO-MR(DnEI4Mei&:F9d>\(skL&2eU\+qAMC1>!/W\mL7jC>Dgj2r-4H>'mN@nU^%+@9FC6Aq*h1F8TQ)d4G1P,'B%n7`i#!e\JZ0lLS33&P`_Mmj:f:r$p7b5m=B)XJMq/\sOPI/jE0BTrO*6W(hiIYErVA9.ff)?hr9,Wl.F7BH]oJZna\*f2DsJW8)t%l,G.><tN\TI)]JPOPBi7M,.#PXg-u\2M>YDW2*;S[j/,2(^C,s8kE0&/<?p7(l%!g#ZE$dZnRdgl]teJW&jt]`IcnWJXR/d'IO0H%'&4>M%6t^=G8;f<TrA1N$OF7rSH-$^fA&"ng_&b8P0O8$aR'%2$c5_a66L$:"GDC:$k-?%pOIBYC;@D?_%s9U?K]=DBtt*1N)=md%*!N$:QVnMCD$D=4TF2Tf\0FoW!8l3)`[Odf@>tq45YhS[1LV931BKI7aV<<*(,6<e*F89$UYh'b%:C#6bp5ii"@RSr!?o7;JW3O_%JSFUk1L`lb%7!;S".Je8HY%a/1Q[Tt#^(+e`\7lSKtU;iJag4!,VGCa#R[.\-<We1K1+*XI8\/uBE7Q*"TD+)J:UT:+HmNAS#0U:%C7bJ7$G<>Yj#YBg2ZPRZE=,[?G\4a@U\T%,'q7J^bbJ`cK:4+=7S>\Jb<$@0f9ao<9;'dP6gG?GAa(l$+q[p]R2YDV.^iP#=jM4r%<j>p@YnFu;+HE%DBLe^B:d>K*J:=V3Puf`'!SW"W.>-$PP)r-ucRc:Df$$B5Al/ehgCZEH6LM!V?5bM[C=.&k^tPTP1d'Ve"n!KH%;(Gh]<?QWu)^.Zh/\/i3#e&lPW!nN)eD&+h&g.8)Q@a*amL8_CKW<<90Nt=^"W`9T5!q#_,=!AV.)g+>AF0IY0NeU,U)H#Q"#<K\%JY9bW_PT.,_5IB-?)4=WM>[T#U^%Gl+D+t`i].>"dJt8/iu[\:!^Iu`Y9EBbQK0+&2$^Ae%*bLN+=7GGTNsW,LlFZ0A;Srp!qs16%fL,]DC^Rae<reW8JefY3'Ym9)e8"$?XRJenM#`3Z66UWLNF2a^A)j@9&U+4Y'6fq'pf%4t_6mmf@O)0[CK1]4"(S[EC?8HM[S$Td%cn#XA79JR*EDrkkHpLf=-5KO2U(Goao=b256@Y3lM&PmEV<+O>@LE/d=YG$(j8WRkQqem,^>sHg!LQE^fDuG:XCYAPC%,E>,gi0P%V>?XTNSD(+c?IX8<\?:\0d8`7MI%&dUoK<(%#I+)7<ZOS]Ohc^74Tr1^rStH#%auj6B-^2SZtLq^dAfT@e<X..c]6;j"=<:.9lZc%2#o7'R>''G/?$GO^aqi^5i\\NOQJtW//?o^;.<D.31sR=75j*&?<:!+:?%B?:M8]U4Gp)>ke%/n([]`RW$+h]ncqXdVLT=H9jHNU%N4qHHgtH^M=.<Ai6\6C::hc>&Lh34`!p;C[=+g0ob$a]W1UuS0R4'Qfo-_(#!);N9c;mYU(K.Rn.G1rgZF1OS-Qaf>K<4HO?`g?\%!,?&D@fWm0[tpKM6rAbJ\eKl?p2hGr$]A+@j(bQc[eAG%V?i1H\:LNfZ+pNSh'aLZ+d7O8:^YRgh5=j0"G%eSUJ'p;_2VAGM.6Mn%bd12.6QuP2,u]hd]$tOjEE;J+$"]Z`#2p;K)7Yi,KIQ"m!uOHl87^BT$k!V_K##0`Ug"Zna?U>J!k8FF!&m/**IsETV-Bc)_0TNg%.*"s_NPX-FmBW+[+]'/&[/d:=#S?f@\HeQJ\Hm!`#6>gkV7A-HB2Q,pZO'.11O>=HlNYR^Q7'MDM&q5\=+mk';Std<<f,f7TMi`5%d,306a;h^`:j)%T97m4DL.c8-o"/L"Kn]t9('Xu:Lg,Rh%0D9pP9+E#@KT)Xe0XZ6R&EQSL9b4_,bSq3&^6,OU1*+THE1Nd+9`iG%^]GRag*ct?&\p9Ff/5L;K*afIS.W(3,W<TSN"V6X9"KbF%tI6]B[D.M7@eF'Zq`lnk7Oq=YrZfj:q\$M%YE)DbhZ1H!o/i9EEUkH%%A*6'=B3=P.o@18\G5_6^.tX#`;#98UH[4gqP"";Do6K`C7lp$i^QYn7.:2XKSZ\M3MBNmA_Z$rZjYXh$fbVm[?_+dZ`abQ[BI+A%S]2RY"4;ugM)X'P,e#0A)''L)9T)^j(huFagC+-URQ?U9@q,V0A8E*7f=\'_=Ng9>-&I$S2E$n3JUfY]R4*sp'Y$k@8H:Sh`rhG.%CDigVdg-OcVH0sQ-Ao<mR(&^pguo(2R#VVMC3pkXn7h(e47NSmi_$3g2mA!*iasD;!1etAQ-BZOTWKFU=Y9`G8`X#H")6"',uFbF%Zm$c6@Km$G.YSR*f.qa#QC"<OC#BB'ZG[3A<"'V;Kc/go9gDZ]&sngeK#fE)d+mAZ9L[X7K.G>[-"7R3XP_*rJgZH^kd5:]4K)%@%h[%270.\-ZFX`NIG`=_&"6SC.J7rHQXXYqcNo_Fi7t2N[_;NU4P%b\*`)>%Yb/=M$\s!>3B/a.UN\IftcmBl)Z_W#$lEa!A7pAVh%4C$2@RIL?@4]]!PULO25;:-^ZP.pIN$\@3S]`L?&fSPJD+To;@,VJ"1V[UQq>Bm33(7`rBZ'pWN#53mWOC]@ERmiZ*D[Ah%i9@7p%FeCih^sWT\_fOYdJ1W5<-1??nm+2N4FDRt/aA=1@2Jn]ZDW5US@Xb`e2-C3FeO9l6e]9h;CfD0P[?-LSlR')E4!(MEZr:BD6pejX%aj^D-M4RBQcmlOd#qrB7"#+bA"854K!Mn?[UA*)?D'D>X^&p`APq_l7A1hgrH8-=Gg'.Uf9I)>gN3j!Y/[c')X;6@,^nm(7Ng9nM%NKtWi.DfiJQ'i&fN=DQPSmDW6ifq8RPW[?r5sXUmn34;2"0dn:00-Ip)K8"`-#]s;cpY4!9!Xrj1Qh;Pks-#cmnog^`/e>$[U%"t%$c"goacb0]Ml-`,7S;*HVl[8Ke;WalOfjE*;oZh#DJR)V0+EGT-g`86;`4jD6`i`rnQIun-:]=C0th%G"Z_s'KmOC*/&TLIp)ktY%PNkO7Tsj<&/Y.-)$,>&K;+Y:1C;@]/#;Qn*Oa#@0`3#$^geoOQ!Nk]H#aRWhYiZBT,cn(1bK_6O`)%>\6B#>kXF7fX\^e\,$<Ri>%+@ugT5[snrCcW7;%J[F81pL8M0^E8;ZSe9hih[m`8g8Q*AslK".\l@.)\q\>\;=%L&cq#FN-cea8W34D7@k8(G!NFonH!;;o8q9d%E8#BDZS`cKDPOEO_h!oC]F;F)AtWSQ[T0Kc&Wgj^.*ol[]!-d>+c,8%JB8d=J0G;Ua68r$74&1WS]JEWG[Sp^Qr>3!c"NhX@N!`r%U9i"Y(C&(VMBkR6H?$7lR%srPEuBrp,O<<Bd83l[)-=!liQHsY/]?S'/J=Hr!F6GJN@58@YV7]75hSU8G"kkPD3LqA2'4D8Y]7NQ%,$l3CdPiIB0fiBgYUHiC,U!.Xq8@:a!*IA>VVkJX-CGo<N7<B0Y\V'u6fpZCr"3F(_e.Z7&jI4t/4H9C@+bY$3XI*J0C+]3#XB3n%!uqZ,i*)Ie$R<b0:ND9!Y$mYu%3`@3e$umf>+1Hega[%X&r18L2P^926l<$LQ()_*bbbA*SVbf50Ib4;AqJAY/IN0`5qZB`BH>?5%J>)Fiju%J$TP3+2%4dCFTa6[c[Kotmd23O"FDXR[O7,,@BLWlDgC)Zf,TDj*&qRo-=<7u,9Tm3^[&e-FHRUG'1B;h@\Z)=:)Lt[d%_d/!8!6_#dH,k8HD)53:c=8iD'+p/*@;3M)jjpYN)5)tO*@3<@i7tX#SRLN^RFNKs[a&FPRa$NeR&Eq7noZNb?]i[5!Cr:91^9@<%04).XOZ=>19g2`_.F\>W2FT.d'ddW<0F#6II1c(RfhFs'3p%"`*K-_:SN,f*JQfD^cfV.:T`\S72/iZ/((!j>!B$>a=gT<&es1@6%L/?'b-+M_91p8_;C]M81Mb"rmY:IR>J:uEO$q.(T)3="*!+nea@5.b!<+-d2.Mt]J"&R*lmn,?:1VOg-NjIL]5Vfk#;6=hL[W3B1%Et2S(%a&UM_I0.@8?nuZ0OUNTTZMBGGR4s!:in1jX.t<-GoF%??6Jqh;`(J`-c,F>>@/D2fSf:6;)/;HO[o#lN/**.*?"rM)`Z?g%cWH#4^`[pEnkqO!:O=QE,R7uJKf"M=i'gY1/]$U"ohA\a8gm%u4AM(KHObW?V5J$+`"';Ug_0L>ZDAC`4DRqL[pV*kKYc;Jfi3>:%)iuts=+ge_K`KK/[\8!Nieb=*II+*L%i!B+RXp@%CEQ`4D?p'*#gs@EK*fG+AQ4%>"2X?t7#I$7,WhD2n=Y=@Kdns1B<ZWpH$'92%e<Q/Y8:<UO:)uk^TVE'o-oVhBe*:Ob&$M!.U"`"o[=crf+p?G4:NBX/6LZb0NfbQC0Vs(9j6K<o!!uKT^L[_%VCNV!Gg@M(4>RVm%OGlS1+I";TG$08%3s>XqKX'#>`=nn&2+W7.>cZNd#N>&IcGk-nb(d%"MBZ!i=!r'U99OhJX>3q$b.pNOg0qc"'P3a@oSK]Q.e=\]%fGH%fT`NG,3F,&aLkG1*;N"LRjT-4UPoMR[<YE,KZ"4;nCo(0pq,hX\,?L5i!'"Fa)J8\(m[!s5=at,Ta?$T5;tJe.ALmiON&U3l%hSs_5/]K["Lu]8c(i6uij:0")YX(qQJTdekVN/ZB#7&jlq(sB8OW6>0j*5A-(aj4_Obnl,^_MRp_8nmJ,+qhJbHhTj$\?Iu(!nM4%!5NI2_!4TP&Z\%.96]GZ=4?E,ZtE%D8PkV\K)kOM-CrE:=A\TWWk?'HAR#rhjW,=4oN!4W''Q"9B]O"uLN+pZ>o=Z)ctLnL]*sPX%GW]3_6:Tn,JOhP*Tl_n#TI$ZR1]KntW9Vlb9P^iN\aLXV3i]Ysd1A!efqI+j_Afij_.0k<V>aqg(>BJ^"p65`NHh_]/EG`fF0n#L%87DQW0eb+&E<eBoiVGEMa)E;,,StI24$N6IVig9ABGJ[%b_qS3:p)qa2OS,.,FR=hmb*BR+M^_hJqBqM.Ojd>a@@M54-VV>UX:R5%0-b*c/.gM.+HfK>"3FAk%7Et1i?s_ndE2%#29oV`5,oCHJC\0F6MZdK9m0hQ#)$l^BR5J@>ppZ2">LTU=XBf>=O?#,dB5,m>7f$@%<7$G4PAVX6)Lt;'jckk48Q5[Ee5:\DbcJY8>t9MSl/%G1,C'B4Z$rHWrPf,O31@*D%Pj(g!?sNlIt_Y`":4Z(/ar7"2DG\)6!,]Y%,'rjR=nW^^1<Z:F\?%3K>!BBR?k/5dNacJDfSciP#OT^u?fS)2Go$_Kil75:FJWdsU0BpQCu#d[`IhbJ=E-'9dt<2+hS\=F<Kg!,%r,+.l*OK%j/k,64"R8@8U@HF5UAu3LU9`gK1aX"J$Gs=CAM+m9a9V/K\M._,`2N8-:.?7\;Y@\8[FP<Xj(_-d.KSn1`[L_i=4'F^%q`OqqgEK0gd=MR1Q1c9i:AKd-`oh\EJEa$!\0rg'MGh$o\@bn2"/TG,(5t+'%*WK:,I!.U_MZT&*jPe"BLGS1a9n,0">F?/k[a0@%U.^*<=O[NlGeuJfW_2rDO.kJOAH]^;&reC+8c\EGmJ6C-1r,hn('*Js*lbuB5QD]/@n;!g/&E9WFXcq$d:,h-=b1(Z;22s'"ITD:%Vb?o_-`.'_W*G/diB`BZ\mZ#3$=M)<b*,(GT@[V9C_O+OZY?d<aaP"uBqn-L#_482gH4+`]ZKl<A-EDO,]=r><C!3UEKg",5'8]?%J^,BM0kc)(a8jG%.4?,[[7"X2?k^dFALTbrdA*aU$fTt=VSgVd>gX1ECch@+MZ$00/%7K1=9&>dKX@Jc=#sa<cGbMKDmJ<KaC2jn%(f0\?a9Y=b;qact[.X6j42aBPDmL9$<&1C9)"o5Je?bLZf<eR_@T<D;Ji.Eg;LqJ)kn3k9cNU4c6NU:X@M#YXV0EV8`[%n4!UA:B%#Xo,VP-e>aQVf[8;1c`r6GjsIE1B$/NkAipL8Qe:9JS8=3)pj0d:0_?U-TJ7V23u,#.'VLK90,4pp.E.!EdOTd*a&]V>sUH*1G4(%;n#jSK9A^@dP7GG1gli49<jDlj!f4-Ep;4A'B<:OKNoFWo1n(F)H\63B.,H4\06T`2\K3:)`!LW'VQ0nCqrOnDZbn1S[9o$$9b#c%Lg]?)i(2pH8kQLYK"D=+n1@!`O^s$RbGd'8"7%Z+=3f!R*/=RD)Ip3U/L(X,:ctKrLWlFE)!*4j\VS]okA5j+C//4W0nNOH?p9S/%h7OGC1s1(P>T#lRG[a)[8.dVRnA@`n65]5ekX*`E71+CiMPU=[](BI5_(]35VnUNjbeRE$Jo]3KlLTiF:[SUf%Z?'L!(+%2!SR&S%^pG[PPWak0AfFktNKWmjB`/JL'uZs_GlY9nKJC3ba)b`S*_Cq%^rN3R4b.TMiWYOe$Lcsl1J^LfR&BG9_K]8+4%eDno9ak8B?+T6%-k>b@S>_5Gf#u"[jIBUF3\:GL=go6ia\7RSCKOK2*gfPdV;qO_\o0\<?kT6AEd#gKPAeNl9pJF)XcAh[:/VbB'6@QWm[C5T"ABGl%Pq<i:NA.9:0g7f()VQ;?QinK"NQJFr<4,M5#E2.q7K(/A[?B"!XJ?#-*R?O7F&'1%$kK4mJh%0-_I*\+(HG=6;C>>ECm<6!"^i4o%[:%RWW,"I<6kauFTP7Ri9C$?;;$j2$b%d/a*E.mBceZ/L`JqoES##AIPpbEGk;2Jq/d.IDg4OBF#Wi#B6n)b<`=W>e&G"Df^f\;X%5`n#g8Suknj(4A:Ye$Us$P+Y43*G'6(^ZSDS1k'U_#TZ?"U>AE`MD\Vb9SnICkAK>ZGsQp$B<TA8E8)$1l]X?8u-;(igiI?j>DPR%#&>)X%"/2@03`jP10s-h((E0E2GIkBVVkLoD$aML(-ERNR/dZ\T!>[G0m_()R%^;%f'"19_[g(VJTum?:Q@F9:;fa*pdhM\@k#e0%OG$[+U%`5m#uJg.$YLGCAM>X/0FEiG"IH>O>*-O;>"GH_UtKEC"0]!V4A+TD":EPd.-Z;\\tgY3kjZ3/^c?QE`aEL*"sBPCFlJ>_%^O0<C^(OYj0S51u^*3.d!Y1H:^o&lBVBS$g07&]ajD9f#cfHU.ETfMkp>Q2$1Y%:^!:B>;@@qh9+DQL^3joq>0Wc9?DXf1t<--1#%;(GP[WBTX1FX^p-'RVp&!Fk+0dtWnn!DG**H,cSV)jFgsJ>3d<"B9d$dD\41(cbN]dXX:`/W3G!?84j(eH2AKrXu^TN7Y0%V9ki0%"/Uk(-%$2tN.gKD$*^+'X^r8&mYr-(nR/qdgtpV%@nG1$EH0h_P,%kCS@@?Dq7p#V!\k02W"q2:&53kGN<_nbPC*6.bT9:>Q,L%q%@P7r6O=4e(X(uSq`\Bef1+BNM$u"IdPhs3L-:KVY%=3L2RW%3JlmRG&.uN>0:7)?40F1c!*GJ(>/:\[B*&Y@?N0h=Dc_o>3ka[i:%)c+i!89>tlG/,%E(>Oj,+mbd24/SP#'R"D+c(O6\JBeK/`$l*[-]GWq!H?Dg(!3FQI"%iVF%jp_3@n'`75#U/N.QRAVFhr(*2-^Q%"(3mE*KVMD&83_E#>tslg"PJ#'hnoS#[JEZ"".k^YMrl"<4;._G[*]J,==f%7SY,3#L7B7)Q>B&iZTlbD6*`=.N&91\`jqFDX2F[%5`omu#K@q`ANV<\.>A+qjrg45`G@uNYW+Y8<5s"^4rr9).9RfM;eKSB*7s;c\2WAg=&]kZhHMon;$j'a_Wn_+/9ONh3+Xd*%<)iU%R!%dP%7k#Xm3Io[?hJAAe&gmj5kJ-"m^Ee^7,dMJ*f"><TQf'l/3&#P-_UOaScD;>5Z*1WaKl,T;Aj?10b8"!bYtfAaK`kp&'2gi%XGeDoO9<3LAjA_f.jKtQ,`RFLA8#Fa#$8qQP2r\_0c<?nBQZYYLIOg-<!!'jnQqP&]ti]"ZIt.SQ?')71M9oSVB"/LJ.sIC\V3]8%-$$p(J8FdN65297,;Y=+(ZYmB,(f$WPQ9@#4LaPS&?mZr*b(]N)d&'k\)OV^A]8j9abT)&'a;,OE#ln78Fp((fp=]M]B"Y+oW!/_%U3,B0'3,ctFYle&BS\5lq'[,iZDj'LRL!/Wh'a!DhoqlGMUH19<C.`-%05$Nfi^0(e]^D\:+;%8=IL*<Wes_$EDW7QF6nFfLX+^b%1)t&>.5URB$C*nmWtI:^U[c`+,9iSXkg^_n[NlBW+>GdcU0Cn/Cu^oqN_r=4D[]G(XoU3\Lth-(Ka(F'[MYj9osRGc>QCiOSC#7e%%3NotU[,:Q##+&&DS-RfH=m@9ZmlGh[h[a.b$ZUBR+M]cj!34"76n:JTXe;el"[i.r'D,qTu]!7c/>UbOG_2<O//N+)rk*?nW=Yo%eH3,"dD^,H#.o+/.l$rO7_5^F?l"+/8t!Vo8C,`S";a-s`dhCa]\!7R(p93#j,mP<S.+Do<0HDJ6UeqAe9O9&%"\n8,@dKA(`BE>%6u/&#Uu72h;'A\b*61VL;Gl)cO.!stGWP1W^0.lUYJ+?>Q,6N8G6n[E:0bSGeFt[P1qR(/#sV!f\KjIkD'4S5P\a"4Z8%S/'`N4"%+2XeIdm*:7P8p/6'H[S;N_DcX)$>B9`@$EDb8AN_eq)<L7_!SH94BRL!Z9EEK9Jr1:2rTAJf'!';C8WiZH3Wo6F4)L[k(;>r5blt%nl@ifo:nr=<JNJ[a)n*PN&cGL""&T4Up%R0Vu;UF@M6IP9_bMM+lT'GfS*O4QY3d9B%$fs:VfGs=UTY^<1WFlql(EUF1DW`L0N59%3JrJWIL)(&YQD#_@*_>8Y#q=X;pZp)kc,#6S7qf"GTGWrq7u5"nQo$L_I.i\S\rfn\90qWOKG($)B9.u&4UWp!P=`%bT"ZOjiVfp%#CLk672l9!Ze_.tmpp"!ZJ?Z%TAP!%#fQQR`XnUGR^PWHV,n#n]P)F@0,k.Z\%4?YoAURV9>DS1kQlEc#=>^NaQhADdF:I`"3!OW%MWC%<2J7*'C.s[*?$q#h&"p=N#u%7A^p52UC?Y\<(/Y"&OHUgHG`r+(G)[>lSb5Tbbj25:JPPpSq34Le)XPWqI0ZL2)ru$YX[pJn%mDf;[q(5!)odnc#i/AGiQZ_e1Rk3D0I7u$tf5qiR69QBEW6:P?&Y24BB0bPUeHtI!-(h<2+g"7"!ZUhVTD">,n5<tBr"2dTLITTs%qe)Zs;#/W&;]KM.ieh/Q2<*LJV"EaVeb1ZGTQZK$.kb]%kTp;l!$_V*ck0#,66#Gq,Wp<ES(&d"lD$Kf)rd"lLPSfgFKQnY66R9m%7pY&'C!9#'Ej0%S+M#a)84pK(,I%,?,G)9dbHb+e%(NYRp6"?N'A`@Y_0VQl^a3Q747+-]Be-SDZ2-ahAr#hQ]L/fEM8Y"5=%g?4%clSnEW/"*pL'cMl@0m@9goSb2ft*Q(HKj^b%:C/FR?]Y""L-Ek!k*E:^fbSSX4b!`EH#5Xdl((T-q=Gl"K\lFib4gcNfD8VY,:5S%QuZ;_.BQF>LAV%UmK*r)TaG@D9U!Ct""Qp0D[D6f9sW/3VD6+)&FDKD13k$>ZADP.1E6I5@#'>`Ng0i*>03b:U:P26EPUg2%.7ND%Z]'<L,UicT*MTbFD(,qpnp9jI>\N0WBLtak"">Fn^6cbJVM^8Bp2[Z*i%!lNj1L6T7-!/bg[6U1:a)*adja5e/jdWh,Iq;LkH#Pg%)5/YDE"?=u'5na9l!:EJLP6?PS3:8A4"jcF3/f-9CTM&OK`GpV%P8M,gX]AJO:F')OY]GFYWu.8,s;NuN#)d*TO3<48W\bKf+9J?%'O[5iKL+s<;g)cho=:IaU,?El-#9WY[c=?@5[UdH7OiqMj=6<Y,T)=\B.&$M/at3q&tGoIH*TLD)+KL+5-j!4gSeR^m:?9koef6r%AP354bqt@3io2ZOC_^E(,Td)m6%EK-+e/V,Tj!86,\s_B&i*u:0+HEkSAa%[7]W;\`AS?.BYf-b;@-kk+e)(7+..JUo]Yu^[3ba'%W`&6Dfbo=2[UJC)d4LW^#K/LKe]Z]+T3qIVK=SW53A=s<qTZVX7UF/MlUIs>&:?)K?3[QTQLlm6Zf*>$IL@Jg;4SK\fT<qr#<:-5%\S%_FKJR/0CSM&$T";f..u5,,h1K8ZlkufNN7[ARe8heaBcHDRMTk@9F'MfQ8n3'i5<*R,"6Zl3_"kXHoU860Ct``&aZ'>rE(NY`%Qm$5!_0e_2q)i4/>6iFml,Q4%f64d36X)EQ\&Ja&HBpsNJ\55Z<0Gc!)4am#g;JEQNf:`6bD:uYZj:&;.-:[;W[oC#EH7.7C1"II%h]?S8F)LHSUKp5JX7,)BXU\k>EfRB:(HK"5SfqYfq>^;XH/=\>33<ABS*t96I_<;*\\Ge&pZ`KEOTFWP']4CjDcB;8^&Ic@/hX=o%1W<_\a3iMX?iL&\l1_Y'9DCK]4MSYD]fE_%IFB"iN;iIql`6NEeZ7'!]?=P&m[#$q4SlPH09a#[ZVHAKpQnqtGKUs#^)Ht3gRJ*4%*W3MKrPK8^qpXW\2j:9Qn'Bjh5EGg7\!tS4nE&u_qTZWqKn#Uu4]%-]Mbp^_#jaTK,'3q0r7b-\V>P)l&H95N?oF*r5/T?tJ,/Qp%q>KsZiT;>+D0igj[qSr_Ogma*qi?@7fW+Q(6WN7;8c.oGir8o7EH15+-GnXFO6-+!T:,GsbBNFD#7j=^s4`(,mgGVtJ%5C;iG*XZ%^)W"EW]C\;nt)a+eo>DZNoub8O3>Muo)CiU,Rc'V:9>lciQ^cUqoem./USe&nfsJ"q=88\S;"E:4S]8`TgQG;\GkIbrp1^gN%D1'%j9(#\2frk[bE!08_`<em+2WT[FBrbIHG=]hmF07NF*=k"ZQ&E5`"V_<p>PFeq:E6b&+;0t#>9t6K4j<:jr(+6>Q<,BDEf]@cL,W>%#*1-3f^#qdH*`3Y[&0dJ``4h,^&E!Jna_.MUA5EB5Z)gm]DjWn^)_X.kLuLfC3r)G3GNnfUJi/?]mZH>5Cg3:p?jJf]iX+K?@I91%qVGU1hbi4a:N^UF`dLh\Np>Iuh)hW`7s482XmSoMs&`U@IXcN\qqDKtn\(r/MV=uP9@JT<R@?@kL3ArR5CbXK=QKC)Ikb=0j73U>%["C?/=*jGJ-7K1Z@P:0iq;pmMMpudWP4W,-*^5%c4M.$0(_9'$*k[.YL3(@mk?s:e#;U](]m,S9GF(b(mgK-gmG!]FqrnJpp-7I@%%qrci%]fC"E;0(mI/3X:ltX'+Y[-MXjeKYEqli24\2q6kh;3Ol5J%e.E2s_G_'Hb\-r9j<iV$mZLf(%,:HloO&4[n4p&+OKp?q8(%hNPN6:u(qr(Rh2K7n3Lb@f_2WiF*+F4UIJ4(Hre&cL<V(+o`I>MgmmF!c<,ub'mPR?E%5-AOgOO1W^b(hHo'oT<bp**;7J8CYg^>%R;!b)4L??rg36$a1>N4sZA%Z3:"XC,4#G2q(FR>=0S@1\_lm:g%G=-7dJ['uIN?-pIXR5F142R"$ooDcg?TX(_Zup.N>K>`n,(eo%jo,)Bjo+Z\*RaYlZ])6Z>NaPurJtTXgC,!Mn@eF4FQM?'`&mRSB:?p1Q?Ve`JB7m+Jp(F)06&VY>R-946]WM9agZ2#\$oGf]B/Tj%K.Xq:)_Ya:H5Qpp5LLtmp#70jG).M,7ReD[7&@nU:LE"M?!KQ%?\22R0Pl::X`[rT?C_Q"C*&PX3I$E&XdSSBJ5G5B895Tn.1P1k%I<^6gFo1V$"&_j"+Bpo_Zb:!`?iK]L^(0AJbeC%FrDI*CG<"Tih`U7l_-WR_=mEU>XZD!?IW,n.0D3Qg%]$MqbJ"rK<Z\RXX;g3k%Afhj0ep_;c#C[PnnJo];1jDEDZ6^N%(58@bq]BG=cYdWd=0IrlbO]"=[ag72:2='CBek^XgG,%-3o;\1Coi-QS?5gSaq[^gl1R=%%k*NnWl!X4Y_';"*I;"**n\`o1q=8iWF8t(LLBH7hY0TF5K3cNQTH0:BGt';+<U8\l;<+S5;QCMhkB43$r-PZ%mU1:rDWt.3JEP28%Gj'@g4q<;(%6pe=J=0&R+L6E.!/&N'#K$NGO6?s*J:1RKDg.'^I!^-][7c2,eMBnbh%Bn+TgLlQ\@B2dr5Wb".TL_>bMF"s-ZbJg%M]^:DA.R",&7[CQcfRi+s#p()k_-?Z4agGMeSf*8&"^>I%e%a3G%.(CIXdDu]tM%k*mQXIn1u&Z\QPL55'(^mG'3f?mDX#_9GO/8%iGgZD)4mHb>X*$8?HH8M<b6bd*V[%\Q/p]_:lu"SLL8uR_Vs?0.fE$jak=r#p"?[JL-=$KFKbTs(hV*YTCWj8$o<9!LLU3A#/fea%\T\;,g@Jm*]R"SJ#'Xb.0Z-fl*a1PIq25W9)*Xc^fp%NU0YMP5#N7@hL$W;/b\1A#@:"t)YlgoYqf%qo(DdQ;Hpiaq%irPrH=g\p%_I:q9,ogNPFg^]9qo+9,$m3ljn@W6j9V3s:XPkip&D=cRJ/9"31OMTG_>lcds6"?qH$5Rm?.[[ac/BgX%GW,2lo5A[C_j`i2N\*/%KJ1r.B6sB38D6&D]J+8IZS&npJCEJsU'&M@oHKKL5@FbkkMiANjN0E&[*9SmrZcKk_1OsmZm/(&EjS!mBIA!)E"p][$uOl>g(F\a%aNonEC^<6e$>;qYG3!:+IWkMa/9gBlg!+1._V!T#_1*4rnR;4^Nlu%UZ>kBTAM\T#a(=iI?T,>4ftfCf1u=jJ#fFi#4FOa7[r6`.%r9*Y9a/cQ(hs>M#E"G*Uio*#_c!,t@q<jR#\(_Od**03Y2,`=2j[e(o],ZNShh9>7ml03`d7]ChIDLbWeF<A@qk)PRi(e5bCU5;q%nsRq[I/EuT@"s^-QjI@h1;SA."=d20T$*U]jkItJbMb(sYWXP`mcQ[9a/m;;-]$Fl)<tqDa(MY-^SlK*J(`d-og=SchdoK2Zrm9T%Sr,[<.bjgoRCk2.i@E[[6eAg!+)X:In_f1X/KF(4n@*&i#r<IZ!AT8Dp;11G\8S[0J>,iCOq/VTn>5^AF0(Vb1U:T5q*<G9ccDCP%Y'_Ag5^:npDk:TcQhTsPQhSDlR)@ZHG>nt\Baan1q&Kuk%m:mKa.qehGQ;]L%NO<H7sAutBJ"H!DFsbdmc:-)H!f@K\3e$*>a=45%Zs&MCjO)A/HupP#X>IUe(\7)OOjVR1HupMR?-'_NEc`IKe:9\@m2]KR7i1`_<&t5iK87(J6$Rmm><_UYV'i1Ihj7DG\%`@miRR&%%p\3YD=6G[VF7:$Yeb7TN6gK00)/RjVhk==\^4#nJEB1YE#u^NBE#,r]DngSVT'o[<c'PkEm5V0`Hsc?c1V1sLn]e\XjmqQ'YSNS_%"NBKnh<d0$\@fLYhLBUU]_LX_md0)li)(SuEMI0U`kA1KMK]Y*N[D<38a^8T4.>5j-FlK!aXKI,eT^_jbNjr\/JfbrlUT)^3O.+e%a0`Jds4PN:R+6F>HdDU&29&SISY%DVAkn6*.8'r%7.N"bmPOjmc]906k@&_LgY$PN>4EK+ls3,,o$7h4>^418;oNBGPI@F]LMoG*%8L>jZR/K"3Z7kS<jk4M'8jdb@2WCD*k%M6g8;p'Nc-^EM[+cSf2FkC(lH#!/S"ng%BX_[blH/BNc`nM*[%O1B0LEHbNU$SH:leEg%pKdfIa_<S<fEpL710&]6hJg]40m^PR)T)fck;bARVk2Q4*#c_-AC#=1]Z;Tg??Qs@?%X!gIf$dh]`7NgEgnlL\9I?gKA6"2o9b#B%htG>3PCI=K^3/3hT6&b7P_n<p[a&C>WDCG1^21DCcf[%Ge1MbdVO&BRcDeppDdL1C]=@h,Gfe:hrYSe+#%ugSAf')-iU'4B$Tuo#%EM+]M#@FQXnb_e]W8F4u[Y><'$STa0o$9I+,l>=6Dr8;-\@dSCEOWU5M3T+8o)A_\qSuD4*^?\Y;%qTK=a:o=aT5)V;)R*<ea2c=%k.XaeX.b._/o!M(V"'sIk#:%+9f[IHI_38F+a0#Amkksm(Yt]NE`[S^gq7!3&$4!0,K128W)4Xr)P8@Nm'49JBNiZ3)E%Fc0kq+=%aO-r+!:'$H/cVSCj,^3-n&qdPN>b<^`]b>!ma$'47+tk/`mNO'kb=6PZh+(#X7's[LBf_9jaie]2a-]@cG*U,cVoUkNX$p<qW7)(%EcJSdIh0_loAN;,Vq.%BnE0H;rT4"R(@+q;,(S*+?XE,]C8=kml&@u]6\oY%Y($`CnK0h$/[+a;bA=EIqbT%J%j01R8bE*14*n^l%IpQ$mT,i*ZA&=iir:?<hrp1c2]Y1qj*mQaLn1t4D+7g9h@/cnji(LZLDhmX6\'HamA*Td90H0ofE;.Pn<S2C'ac<l`W4M.QmP3hG%it&jePFZoao3k-fCEIgq^3u3tcC6CUD@aP@3]u?^(dYS`&S0urM]`s&Sir,VgL4^n!:aRn\U=*[S.t(p4PKLI&)4NW31B*Y9`)'T%?>9nq6)o:D9ZU)i4">WMH-I<D^<`kL%GpoA$K"_>4">VJL$oPKn@d>]ZuS8gVo)BlgJ<fIn,sdi^8&\leG,%B?[&6))W)W-j84nl%gP^9"B>_i@Dq2O&lDX1mT#,,IR_lNA)=G&X\&7#!!E?eLEqSDRLj3@[I6:)eLclg.U"jX3TG]DCBfn<`jI#Js'8=6"cZnt2,CF4L%m*kQM4LHX8.]@l>L&'?8>b.GcqTXg][i`o@0CODjH3]r/a8=btL>05Ko[BG+guZ-@6Wm,F%I-b*dfKgFJC`.dPHa43d*"8&IS.nZ%ID>I<ji\&S0r+.&-1\W7]FAh!OO2%']=2G9bLboi]>t5Z8l&2t^V/O`:u`;JNW*\.(6B!1>OC[7I(OBSh'T@+B7G]V(T5PrDa*$M%D7d50f5\FqNXG5&N+L&qCCb!sg@\M'Q^bBOl+u,nftT/C+*MVs`:?\f^%L==8^"1(T:L?2=cFdN(N)pmR;;#EaB8%,jOC*oXEoo*%J^=X4#cG?,+/Q[LOS/lO$Z]V@cJl]U`Fk"dh0"r0s86h_Z[B\>;oPNiIMD`Eq\@=^0Yha:f^2OB3])-H-n]rI5.kLaE.IN-UMcCT%Dbg6dI0*1X-GBH/GA*m$%aefNGlRY`Mq:+]#UoQA8&YZCAGAdmof3f1@*S/l/LC">W4edb/_Rf-J`pb,a"Jt^p$D,;rr)M1LV#&H%Ba`bIbe<c*kLJ\mO(Xg6$m3O'F$CPtT'r5f\"#V=4,;/'T'r5fB4T?_c<^7sESGldD=^UOK&bGX!k-ClYsTUOC"u3]k_o'.".5!"%f7=#JKU8-bkQP9sIa"_E)<Kgg=*hE$jo)i5%dQKGgC?!\de-aVC2aB=6X]7q<:\N4.7/b!)*\R;@oE4)f%7WSB7C@j5AlPP4'[Mk%kD[-="aDF8it%6Mj@)Xo:O6@9R9%aeVYGBn=C0nZ*$;@j9TkGa0gn1pR!s;VK=fIJ#S&IM`m-or^=1fZ%,lR2$JKuZ$MYQJA3[ie%"NZ?8NhD,6-%1TDp1)0]hjIh8VST/L%rEm=W3H6[G$6#s^V=(2/M?Mc_*kR^o6c&]bO@MU"G:;D)XJ0RZ2a]=(<]aLk=`eeE-)$-%!HF;>7qH0h.S"ss3rA6*cCU0De/sC89qNrS"I0ue*<5Wdg!.RH")a7R+*rEq:p]VBg<2=04Rs32+]q*FBR:q)+71461Di,2\[pLI%3S>454H<O)Z'r:Hi0doce+HLD9tjWhS!0>"GRY@;/3r'>Is^csBEGN^]HZieq<mf#s.];f"1Nhg^&J!,QeSS#:XcY^58WEp')qk.%\)JS/q4U?q1k5Ngr9&Qb&-!Y8^Q$J$]?u--=#mjBdQ\JMS?&ZpYB2Ym`\h8&Poj:U^i!DhWYkh6O.3H+!3F5<.4YPTEFi+7!GA),%Dr'&KmkaG^Jt$c5(tWN>fB$,Fg:(CS"1_poD?S]lO+$E+h$e,?\oMPM^W`#:fTqL=jW08p=[Bs([EHab,1qisWI1b'KH+3bEMH1Y%!U?q0b&P$DpcU4+^BCk>e),%n6nUstm`mF;K-3/Eoq+aXb&OCId4.iCX!Z'N\?%19n9i[Ql+7"S_+toF0#r)JhY'PZ2:bg_&V!kl%YKGLuHJDVt7Xr0jeII#0FhP2k%^T`a/5OU`g&X:C%9VNamV:O%Y=I'^]\>D1eljMIpY.sBdj\'dB`_bVn`<mM8@K0Ncs8]/R7(%X%)euB(4\]B&On(C4'&A:Vp*L$:1-,4YoJLR(>9?],D!PXM:c_)5$5ek%X'4(A!f+`pGrNlQL@j"q\4C)L,*;"]L(V8"76]e6M1hDc%AN>i62XAEP>.QR,kuO:rBbfl5qo5%HF;qfd?!.,$=R&K`*2kRHf'HJd.qJd3#o,5,L"ad2&4a.9[LH`H_HR*/KT><%W_9b5QI9:!%KNSWR$H!aJ2@O2EXYTOjBs&3MV^oHg;Q0`X$8^(9)G5_*"t$dhG$q!'0Lk;?27Ac'\"XS8[AnYG^N2A,JT3c=OL-"FV@u4[$EKm0%$b\B>K6<^q9*.<@Y\f>J"aW+Y#rW:%O@BK;bfeRmBkiUO_5A;m4n_@\=X.^tZ&uNjKcM,]!%[S6+B-N<:#uPk[[C/@CVZp3\"2+;%fJ\%eU]TtCFA6,nJR]pCMn^"OkYH[LrV\stVm"q[Z1#CQh1#$o*;sGpH[@XH;ii3qO$QBChVF^WJ1]oe&!n(X/Um@^,bhBe:I3q6%G^kKTaIcTpqW^e_=qEIgh;+tQ60`_/H^+^V&mb?fRF-5f%j..5q<`)ZX)cJ;GbZ9q'Y;k\=7AL#!asomF_(ZC*MoCAQ@@\>`pLD&%h7iOlgUHY+^4$%TmJFA25C!(VCUW]o3O`r*B379)4n7)D=L`?/CgH@<cHn^Ys*sb!"$Eli4;ddpbHC6_\u^nWg7pFOW6EKQ7=D34%WqSQC)+h.Qc&AO$mGnY)JH&85#_]$6Kb0"maThiu8]XC7-]m6$*trli^kDW_POOYN]JS[$i.Cu-DP):E>a;^?NFjbfFRFM$qk!Pp%kA@,%@,3,-_,qU75QsaL#+q(\ga6./@Vt$F&jWP'm3Wet6agrhi*HVt\'tn6,hF4gk^6C/"oK>^bDMffMr[upY?VHS)%<)$:On3e%j]]Imif1+L6^C)J@7?=-fQNoj3!QBG!m73Ii]3Zd);#&sT,h,/Mf79%=*n7'(:/<K?33_IOH[mK7=k4GC)Ud-,sg:J!U$/+:I2rP%![.cA'Xf6$Z%+#1,j+SHd/?eu;a-cuOB%(d#YnS@LZ:Y85:Au+.fccC#'3&]WhrUi!&^D`6bP$9[+\P`n/.N:<_%^=#THU>e\Wg7%d^3c+"$Cr#^J2WWg;btM=N2\a(gn"FOce9AO9@=s2"1ic_8%Cs:hCA0d%h-e<!I>*EdlM=22-?7ai1JOPXrBmNP^L/ANA&O-)j`'%&ggWeX)q!Oe:[pc8YfD8%f'YO-f?u*dM1IjocZkhD,cPc)>j\:!2Pg;$QE[A&"-=sN?q96An`G]JeV@T:B2+8m,?,O^ICYRd_H0^%".YnE;?m[HP<=#V=:h7%J`FNWE'+WEAZll:9p*GP(bjbK6CNTP&,^d3P)>qnJ;a_?=]+bd=D1F*6J+)Z!^-%X(`!Io[q@BEfI!>X%6ub#Z`t&Ph4bROGUuCA;&h>`FZ_1<]VHp&=#Q\h3g("'YXK\\5+FTZ!aa>h2^hR1)%]*+7>RK>tX"+[X$IHpdcnc^#<s_"pMB2[l%1TB0Q.%;5OV3A%P+36j/`<n!s^'or,(r[QcD-e)Za>ftBC"K'e-qkmM1E4n!YR&/*hh"<))=W];\D7F13*)!G\nG9KRd%HPMHtXF%KjaAbi8?k=:oIAe?0r$qfDXk-GJ)sQDgHh?^9(QgXr0dFnY$Knr?i\6lr,#'n3at)g#k]@GD&l/q7f/f044V%GJF$GYPlYbrq)2l%^`BYlIe:A3rN"7nrPCA:5QAr]YCG[f+"WG^@<p\M\_m5+J,7mnT)%'cSpBV%O$3E$_O3GeIX?%ofAH2/TDA&eT7$4a?iJ8>hu/;[%Xue>oT&d)foDO19kWf(,UOW5TDgu.P//*+9e!'^k2nntPDh#s6SQgs!pLlVMBoDZq%ebU1qV<mg$HQf:&O7C)alo"F*0_lSI`>VB%8_':B?.%(RrR(d#.&S!(_n?I!+iXC^SnSDD!.;MZGWN?g_,P#FQHhD<i3K%*m!^oq0fE>DJk/j\9'uk;:]dQf?jJ>L#phA-Lt]F`%MAR^s4?[e<:I:<JIP&,JdDZ`CE`bTB+q00T$SIg4,mE\kd*<%s+R%WW%J.od5PY6H3;M6'SGVhr9)#17Vu<:eT_`[`BRclTnk.8X%1&Gu&o^?EW%[-hikf6!<^=RfR1sLC7a$J1cf7"\rNI1'56.<7arA\K%p=b:SVJ/9kER=@E[1<L:bC9*DT]nH&_rXVmX/->^5DMIY%5DMIY5DMIY5DMH>qr`"oR9hJZpL,-Rro\<_WF'LfNQ\RKB(WiAqJa";_iF`>Tc[%n^QeW#'DaB$IdDgg9;s"[U&S$Sa*uBbOT!g-%qHrL$>V+T9M8$W#ZsSd+*#.d@T1ak",Ke%Eo[,1m]F'(i]^faT8c\_QCQ;bGr<_u(rjlm+?%(7#].+BipkbJX^#Q9-:S5AuXufs2%o?$<Y>n-:*K3rurQFksZ7VHXSCD@[nKBnPeX,^C`3HFcWj&NSFe&4bs(06XblYEPZ'E+J$_s(Aj'pBP+Y.Won;l?,'J]6tkJ+NS"%++3RKDgTt!c`L";$;IEo?%:+a`Yq@M4Eg;hHG4m>p`"_PJ\V3ZUS%>"UEBN*L]@,iDqJC_kNd%NH-B+FaHaea]\=BqbQ#RLJ,.44%J,(&@qN([OpMYH@MkBh?_s`'7p2&*&pPm492'Dg2Z7l$bGQ#LYrq0JkIfIGas5YP's7h@FIHTpWJ+>8Lot"ZUH!48Ocu\5]C2ic=%n,7_Ws46pnr80_erWVe:rb'P?o>C$GoC7<Tn!c3?WREf+<#muFc,mT>_6)VocspF2njh%*m)><?N]o,0pqk@KrR$g9II'>9]er@;%II\;E=%BI.rcW5;k&5bEZerFb$j;&_qS5-VHfi1(5PsEshX'jjIf38:j:7][%jp3+U!J2R#LC,WK&\mF^$tA!^@g.i]dXi#5:(I4%kg`\2q75+jpT\Z9i&N#EWq"jT^A6E.Is$LZqo%#T0S3MtqR>AT%q!$>ljH:%<98gH07;mA^R'd8gjBP(ilKXtmcG=8rPN";Y@h0d%aTVV)QX>'tRK*,M5C`VgFiSX/(IsPBjGmj0ondVdk\"K!aAi-1LL9r244ZK!-NQqlU0G<@YPl9"TDWV+JhU'JI-3;8I'2?/BEApO%]7X8]c&Y'YrL]Ml"=q.[h"SPXnEVJ#YIXAL,=eoJr[o@CraXj\nafce5VIT[_ls!_RhhDRY(IHagtfR8c:>YBZmA-@`Uc=n`lHsP%([_?7#:c6]?[qPYs7$c7$84O?muP2(XmPNi;MC+fq.,0d5P^@94Lj6sH7'Fkq)]OBW)1#83g/oK"'k\H>;#/$%EIFE+1E6q*F%Jn%0>?[h^@HoK=cP<U\0%XOGNH69nP-[a6XTcJZS,M)dYlG#mu&96h1Q;r#*@E*)u<4rq=M.G@S,%pTE!$B5Q.0O5F`:(5+K9p,C09N%07X!^$PYl"^Am:bc6k^AL#NQ\olagB=5NhBDa435l%Jj-9@#j$mE`H>=2p*OYCi&8#ado#JbAVarMAu^\*9-(l%T0:m[*qLr-G%(%-8\/p!0"UD(qK+/8&'5@9PInBET(\o5'5ZfEJL?&J0)>Me[kO1pO2n-h`"OkhuDi:htMlE<nE>:-9H7u[C:CtCN''rB>/p3R9W6[%ADd1+LYfBRp=s\jUr]2X3H9hXJ+G7AN`G0KP-.b`je';!ZeouI$.Z+"j[qdLr""j<o=I57k..*IDcF`07^Z^uID]b#WV]ITrq5_B%og>D@Fm>PXID[e7J[b^tPhGF_^AHlMJ*)Yrq8U2L]AB49E4jBt@?\+/rJ#Oon\]hYCmMcV;N.?s42$+2ol#024"D1;am@l)\q0/5%T3,>mXsGTc?-*VU](lh;K+D/ZMM>E:EpUB$2noRl%X1ut*Di"G8$BN#fX8d^ET!AF.Z48d`;NO_=Z]aN&IitM6[q5YN95BIiSh:p%3ZQ12(H]HCUkFe@iR*&r?QqqS;q.>YQCXH8E<M10HOE"=*];DoOWU:b0SIM?f07QUTK,;NEFehg+8spT=YFm9"SfCg@VHWoIb%/G%JOLCcs/pUtM\8!m^JD5L6D'7H]^)9cJBpUOHLk9p2;\'+03rhrq%m@bnV-.u^$r3II-Z*t.VJe>M\f^Lg8c$^HK'Qq\&GiUY(-Ci%\J]hc#@I6.CNTBmIUMRR]_mCXQ7V;8552]YSX3]4iUc3>$D4eND1JVcm/:O=rn4FaYfU6#a(:;:j19/aGYkNg(\E+PQcaFN2uZ[t%q=T5b_*OWY?bZ"^9r1(])B\#&hm,kFNA!8moC=^+<[tfMqbAZTr.UqOklWS>L6b$\H](SRQQ4V&q7/_V._Xqqo1C\9IhLAjp$</<%4nWDll&Vp"]DV9en)I%/EAk,toDCtcdf4@54<R8bfgV_RG?*mW]jd8`ZO?3CN-K"`j!:sY7hQsUm[JDEHP[q^5PqWGW:[U$-9g@X%'0lFOGnRjaH]BU>H![Y<E),<*U_G-Fd*iKj>kgH^Kl&i@n=SI`.)+Scb#+]W[EA&t`2B0)je$uWV6+jYI5V:(rk/"D]`EY\VG`tO%5'QE%j6(uC[`A'hkKF?Jd8m$WoJr[<PAksD3QjH:I+HHQDa3q?M`TbqIu>(bY..s4?!mA53O\+bqp4`>olZF9rQl3Bd-?Q+^A%Ff%4.igZJj-/XI,KoY55jhDJ,7W,J,J@D54B>CNn>)ghtm:9r1cLQUHe\Thl;Xq')Yuu8,8k=:H:D4:[$-hdk9H66\[u)ARR9<(^BF`%%)t6N_'kZN:!p$M>nfpdN6V=@,k%L1J3j1LHD_Xl1PJ3?"dDsT<^SbB]mT93+_gaI'8D,=RE!+Np>-GkL]=Cl$^3]n^LFIP_c=Dq%8!N\[$;5MC?%'ufj2\@:pA"/ff>,n(2;I_;YHL!4_[SPp4F,r_CQD]8*kCk,j4Bj3iMN)?h>3RED`r77N@.M,HgGL2FQ1]KY.=8E%%6*0jgDtLpH.Q>GhJrF0\))5EM/0<*l=_'nZ0SE-](PbYmll0g]e7pMpRJtp:&nL@h(]#qOfM=@nBSZ7ERiRiJPU-Bl^k_.$LoTo%Ie=TZGhZNu\8(?p)a*'-:g[;a3dp1.!*#<]4F6\.<=lCGY27X_iq7V%>+.SHFk-6AFW4"a*nB14Ic@6Vgj)\T]:ldSkD/ZNmqZWP%!2+PMk,&e1r(!s)mY4s73*kqF2#I1r7=u+>qRt,Ro^j05hJfUF-uAJ:g[9782)P19MMBi;AS?tj!DqD([t."[8rm5*m1$N+h"=BJ%Jmp^4Fp+CL)2doAe^rSta/P7p^AI+OfA?_#oX+B:+OGS3..A3DqHH4[GJ3.Yl`N5tZ09hsRr:M#Re2_!bDWKA@CB1s=W0-^Y.jdV%"[+""jJb6/WGQ='9u7(hp@bpQ;#lUPRM#Crj&[[k\))CKD$*$5Rfn6A'K!s/roSr=8>lRr4/@SslpQpd"UM6Dk=uJ^o/6W?G<2P+%lK1/ZqgSD8S!C\i/t)8DOQf(/]NuXS3:*gLKNa>^XXC<c=rpCgrm^?3EG*gA^\PffAbG'*A(TUoKFZ'9Tu`D#g#GQ-Ulf5U]*Eq8%0*Lsjnd0up>m!Lj-IAP4b&DCV!:\lM;qKBLADZ(hltNE!\JN=LTMdR/Na?l+H2n;L8$0D>df_k+#'VYd*4MQOiHj=EK51]>D?QW1%n#`apF+[7oD=tSM_?%I4qItmRD`IEY3rl@_)LPfaSqcP2#gg*HEV8kf:Yl4S#[AskqlW#!^[9NFE42+4-ID$4TPeWK>3WKMDnk\J%>6,^?9P-<oWOhCjS@mh#Rr5t9VAjHP3ao#S!!QG0I8&<2EW"J>=.*__$1u;9!.<$GXCpq.ZFiE^apMN3Yg[G2HiI>7*piAkDk#1e%>LX_M/`\\O0<jFR8%u6SbI]/.pd/k\'As>U-C=Ap,4K@O$9N&BcWM^ZH$nX*F@KCTaeNWMJ[]?6=XU>^,Yo,%!\H)e=Fjk-1s`G<%<],Rd"k`KKM]l9G9ikL5"FMGeNWQa&]?Ubk)H]^XeQ0k=&APl]l/U0^_n["`5nHMQ?dkpg^`j2BIog_n\c'1!m,iZN5k03VY+*TU%h<=EQp5`"qc;'GoGICK.Uj[F7`UunNEqd?B=+BnNpZE/f4m]j^C;lLSeAcq:oDJ'/;#f@dqptfE^5^8&B"@aE:M;BX](:FHrkJ6o%7iqKi?i8Thci7`l2WQlLTAJ*Z[IsB?r5i;nlr3rV\^16'VuH\5J+E<bV'j6od)51<H=HW`q4S=Kr6o$J[jRdBdcV_LfY\6uf);kF%-H(h3ahdZ%^AWQ]T25IX^O>bo?iTDX550oKqU;pgG(#H?4hI+!9`E2hrq*BXn[U<$jm-:Nb.iE!d?"4IgO:Ft4h],S=XsC4++3R?%:OV[$07E*Tc[G(s5Obi5-nRkMR*0^E,O>Bi/V!PHO8d%p*dd6Ps6tNprs-=3bNgD.SPkO6>"@35J)c1MH2iXanrXHts,Z%4lfSm*%XgKP;%c>J'05gaZYJ'&6htt(lhth+!CsMc1pSc<IihecAIla/Qh>]_h)kZEWlZA'iPZP>9p5_m@N:aQd<0rZo'j$p:\$!HZm[d>l%7b[+iZEb%eFmVqA.hm,@?aNRb5_>-XYfMA4*pb3]!h7hP*X"@*Vb@B]a.@;pmcBC]7[IK$#1R@[cP7iCZS!eAWF+)d_b?AK7!:Gu%%&IBW[?/V)9.#r0Oq0*R+R*ob^Cc+gDm.71+pE998@Ns+pPieV>HQgV,.lqd,W2kt;&8QeYT9/hD[1L/V,Z$Y4AA:^"!Y3h"%%#C%5q56`7&,2BqD*b6//(f36VXi@(C'Ie[m,h7l.p,:qp\;Bc_:,&mSChqYZ3h.2#<%3i0eBchPtAc!h.qN+)h*I(aVNWjs[E5>SXE#%-f@H,FPT/MJZ6>Z0,>rXHH?Rp"2GKaGu<!YU3(B4HoVk`BF<l!/^;bG%Mi@Q:Qcp$CK4:];]oEbO,NO4->;84D3ZCr+3uF'<FZB#%6L9EKe7rEWIVDtCiIR1$/k+]H9^pVNoRG0*n3B'5n9#?f:NL+%QtQa.04Y8X#YOp-=+5\s,4G_j8RXSQ%ejqDp+fYsp`h3N,nP$f%)99Q0#&s'kK(+I_L6:I]X92hU6OH#7kBQ+g?MT0%'7si#WFI?mE+/WMY;A^r@q"5`KE%?EBrjRmX>d'V=6W=eJ_C(!pEajEVW-cZ%42uBQ*?i$7O70ap2"*BjY9_Bi7JfBt]N<etP31TKIaI`TLA$7sF#UHJ1k!!0rLiE//aWd;dr+A5BR4hpqa&]:)nHQKNaEL3A_IZ`%L-rN_Ih$r<Ih$r<IkLDdb>j$6dX=Zq;n=V@g+W2FkAm<oeIp28%^]HfHo]Z(WR>+0k"Ch[V_haQ[-s7A97cfmdX7.`n!3$:ReH]S%pQ_QS@aTS.k^OoBh(SUX!\$X"*/,J)-TR2nH2Qa&>Ah"5eB-a9Negqcm,Y/#)`e1X7tq70)K%cNEljXTHi0,?@rOJMrd>;Ar:'U/%B;Pnqgo$*tLe456a%k0?;s3'4O\\+0T2.WCe:0[PM3#=<Hn&BNlBq*P*r&ucU*c+NnF)tDY7!RDm_tN!HKiE3IXL+hT(oo&;k]Wn%=-`r8k0?3^jU9B`2m^>iet0MCj[[VBH&UZ_SnMATkjbR0pXfBA`TNh=r1TrV4ZERncbDV[EnB-n?[V_-hP1=r^d#*6-h8X2n=q?n%f"_p.kCgdA,KFQ]*jPu>i"+)_*5d0=nl4iNj%nE9XRl)Ek<l-Y/OtiQV]L-+rd'S@T6_dE7ZCc#.e;MaT<l8H&:T*-g_8j4Dh+/X%*cn5#\PVPQNu+Gdi:q/>PTqP;c9G1"BgDKT*o1QjIcQB]VZu#PT+s!oJY[CX"OOW:4T&1?.j/0rch@m=3dSc1G>/%e"UB8O4S>D1%>E0abhN7QOO"6>%Tc]$9N]JUV46r[DIEV,8^?=FGMqtbR1V.eM'?KX'39E.:q*?B]94R4FE*5p9iEMBBW"LO4?BD&%Q+)a&n@pGX%c1:Jh^AM@A9sp`TFM.DW2KMu<])F\#eaci8r1AB8Vfn<*9ga'_c2=."1kq222\"s?/R_iuThu@9eIU/_Wq'"dS!h\-%K@,W=[fUK%-tM!":VQi&AK"fRp)81Sm[nh':GV%_5r'_,3(TYXTDR$":HWZHhKqo+jhXCn(`m@bd-!WcGkB>.,I:lhe^0;pd&9)YIGT0sCV8,5%C=6X;2`.Z#"7>Dk2cuPNaV`nZIB`+IKLPC_-*ZkHln=PZ\OT#u:=<ZcmFESfZhE=$(K]JJ.pXMoM(CdB$./9-OWe$"?jo]?]U6t%%IjE'kU5rkF&U^EgcH!.GM6>G1BF,:=^SV=0^bLH;7<nr\7fYSa%NfoR#a3YB0<(N^1>V6an^9Ua+^'rYS>uo""7^VMCFi\K6!2qD%-\0G;a=0='@j3W'#J1TdI,8L36A(=_m7D-TUJH4J*6Vh^cGr7qI)P,2P:_e@j4Se]80<4a8[SD*a]Nj;"u+hnNk0oGI6Eb?:;A)%%plWZ)'0u/6nUYe&=iE$+[-oB>%-LW8kt#k%D.+MeVV\1I?h%NiYmeV2gK"KL`^^UtV$rqJYYau>,_HH?k]"sQ1Uqk)e/%&]b@%+L%c3VV1UCb!pPp2/,f9OO(J585!X>VI$(g^SZW22h^.9/-'=A=S#<m1=L%kV-`=3Q7fk`\g6\JAK?!/0T>AHNo%7^2Z3jm.&f$Km[=%$84O=q2[`I^]+lB)*`f3,qnRQpg(HOo-jg'Y$(`&hr<@N>kl,[G,G-,3R>:[41eg-M;*e!ns><rSRqpd]g;?Kr(bN!IeeJ0cdVB1%lc'mh^[6NBD1ga1V:WHWc2ZB&"2EaJ]s>>bguZD\S(cVdI\A&`-O_n'UJ8scZ$[@B!]@5u;h8`Q_-#V:m)<5BJnLee(1,Y>'</[u%Xeb@rWqI:0&,9]MoZ7D*'VIAm]HSDg3A5G$.\'<MIIPf#m+d_BJ@;7H7Kf;QkO/OuVN5j/lAD:):'eW[_o6#B8<U>/L?AXB!>hLs%VkcdqMPa4T!9B)L.9](F/gc!',Q#8g`PCm&5X2'QBqIppS4ta$,@TXg-oiRn:Pq'Lg-u2X0V'GjMmW\V0Qn$&0iEZSqgFP_`lBk:%\dsPi0bc4t!<?s!=[pmT&*f&R(F]DR@Y=MH/;htIf&Vse8^<,k@.56BUh[0;FgVg>@P-#c6/54J7pcIHq)Ftm:QhT50i%d".03b$%aFI*PA4/m*-;_q7dWiQSb9X1oi[GKV$A>3:JZYaP&t`iKH-hfB(UFgeY6'Rf.o7kB6@l#06MX(V:^Am%.V(eC+<ZS85liB&mBX5N%>Y'Fc?m4^n=H59RnihV&-r>hQg_1AP+[`_DJiQGTWCr/4"VJO'>fa]%ilD,lN'YiE!J=*=de4@u8nFZ(f`FuPH%:^6''(!s(`u=*%!nIu(-X^&u_B>QU?;q7<FRp(mUhH&k)N]j\osP;6kQ`ZFJ8ZDn8VOtEi@kKrRcfs_L*fHJ0dL^u,f:sd"GKu,MCeIj!&mJ8>DO6V%iJTR,"0;J2*j%l.08*iZWjbUZ@]0o29"K$WoF#=aCk?@jC&lDB-u'+N0d'Vff#,?j,^@Fc'-rDB3M7$V$BKd0F.-=0,kDGn#WO76%-9b.5.j/:OTJ,BBXHMnMV1>&0P`]@%KZH_GO=*Us+oj'?j$Wlj*,'IWBc'/L=hl9p?'YXT#VQCHF%$d@c`l$6_?)-L'N38OO-eZ1%L*7C=6uor6$j['VWg0DY+9DPV$n>Nc_gsflaT^ed.BHIE6:D/g:.l+u-k4NQc*FFE&1DT<GUt"Z"d?s;)GY'-G3Ct*OTi(/b>8Uh%";j47MBOPV$=S!<.8c&B:G%gC9]O6fJV@$m@O^(^6V2<o('4gk>#81b>YOp+J`ZPeK=?oH;A'?!\ThtbbVOi:`_6c@p'^(!P2]cE%4Fg"SVFc0!OFscSVq,EA)9^&Z%#.3mg[(j0"l(DOCE(*PZL\5&P88C7lCjr<h%BjCB8CA'BSrT3'24U1/lcEcC!n+_=WVJshALtn%""afLE7#XmbHjL&?OSO2"Y`Ls/>*'k9I(uW!=oj\ZMR"H*:8nAR3Ug_k@B&M+J:,d.\oI-`5tHp.r"#75khOX,]Wkc^?PttHnb/s%E$?[HP[,H5qs4UQ"r]J,Y'>+?QRub]Y/3XZQZR(U'1n2X?I:PPS[VT7X-M1Z%8%-./c0uVO_Z-Apjjjr9NbB8er\=giPD2XTR:iT%a0C$9V7+QY6u(IUTM-Z89M3j4%1`Z.#N`g?1+CAD:WSFHY[n1Ko"Z3j=>6p/jfs"P*lcueE][_1r<@#V1`9i,6r8lJ$=[PC9&ou!%f?-K&khW9Q9S/*fOY9,WK1_9(cQ8=.AHH9FC;i0`Srm,p@kEs;,kJ2/;Q?+#PQlDFA09=HIMjHrb!&_6IMIQ8Uao[rRrKEqK#-@Z%5=?&c<cVL9ofWBG+Xp;!+&JI[XZ2/jjSMi*e]NTE/B>!IF!N^ZJ&#Rp(bQ_b*RE)se1*suOTUV-:XY-p%K()V]3[=9(U5?@Y!L#:%SNoaVSKu6jn,l(1&u=G+3H04\!'-^VLW`&_bbXiMZoff/KnMBYTo"EM+'VXk6"&eI?'Vo&3._P^d3V]=?*c6)6#1Hgot[SGBj_3M%RZIrs#SLbURO<(l-kZUD%#I,,6nuS-%Mf=&_,QP1k,""WVlV]VI`aTZ8NnD[93@W__?s.*1D*)GE*65i'.b_(V]7/.:8WRIP)$Jq%k#i9b_DPpUmK6H;=9.XL4r<B#3Y^C*d4H>qY.a$7p/c>`X!CtdmNFJs2_hC[M*?KVU`(RP#^"fALqn9SP[W1k7&2)t^MBO+4bd7#%Q(7a/_lU^\gXEgP/ffMqBe#h)<fXl8W8.(fUf;>XG;#lb>0S+#.qY-5\0%LcXIBteoSC[*rhUg/#<Y@0]")7DrqAjW?8^1^@l$%r%;Dd=MS$2#URJH_@Y=S!PPBsE^hq)V_2mRZYKJB)gmf,<WQr#W.SKREs=A!aM?nmsF##'23FJ2).;RTPXCWBbGMC1AY/emCu'hX"_%g1!YIJPh_;AHeoliFN@@6"p<N"eebX-3tKTTF!'qAO-\Z"["$K`CR"??]cTO>#R!H9*p,;7Wb'h_",/L*d"kD$)2?.>:7*4d8)KM%'Nt%C+]4O8j^Okt-0i9IM@l[i3F\Tsjo=kVL/KG_s*7eD%Bon1VFWLV>?)%W$=nWg/uF0Q+QPC5\Q+o/)@Eh[ekiDu<VrV,[>Y?P%_90&nV9+R6Tg^E+2&SA&d=u2)d0*K\1rY+<-=9pfYn@^XJjj"4V$M[iRZO=Qkr>&.rEsB1Q!+iHH)X+APZ;%?RmsG6E\XY.qEPp%%QjppUplGY749O2bU^&0_bNWee6ae*hqhkNp+F%VS8ul5Aag5)P,KhDeGuGt7l8h-^YH<n<">A1+Y6HG#aiOODX=YTt'6:<IEa#$"%egl8.&SOXcL\?L5(s*bRn?QK5he7.(/V`bL[hor@mTb^iLl'ca6$&4Clc9s!\e2Fd^f6N]D$N10(#I@TMf@:-Lo!`r7LOp3?*KF,%0>0YuJ4Ra<=@i5n\3!bD6jj2=9HDQWVAMlV$\hdq8R2ulbMa1E/Ma_1+UkcZ(<bMN2"06Cgu!#GH:X076nEt/.C+CE,\Re"5I??(%gF.TlQQFMPc[lb`ba,];kbK[1Q_jpf0FihnL)qPc'[DdD[m1ZDn/'@kq^V)hPn]U&W!Ze8,?_<M'knO*<M;YmSuGZmXp"o-KPH$G%jZ"@n'l$!;J/e]9bW!&%/OKIt(g##hf^G67OFG(L<W;Y%Fu9A`qe7qnd"B$V!o/IN4L"&6+S''nI;5jJ:rBFPn6Y$RJ)D#^1k+$a%J.R;.LTg>Z@>(siL&"O'ND?-LoR';5%+RL8Mh3c+eRBGd'hfK2Mpd&?Boubqi!)P7>DT2f#Y[084&YUA2#B_%@!#+n+9r;^/aAF3%$RNZ/]5k1)NC!0miOr-E>#X"@p`4:+#iDmU\@a#3LQBN<Zs^"&]bGM"!F=e#)NKJE4tu(`mHA\k(FTBC6<cZk/(7nI8UpoB;8Ob3%UoAMAm0/We^`h$P8!QUF.TWL$[PWhm>)<m>SgF7p^gU0CJX8bXH"/=)Ju>e39!<FZneuDqi-Bo3B\l*f>HVee2^%S\/!Rsm^\LEB%r3i;)^QsY]o6gpf"$T;;`/;NE4ql&R'+mC(<$GHn9.%eHA&'<A'_<^sSTl8)-!.$c^rZJbCqcj"m+C&fV3>N[rddoe(h>>=/hCW`%^10tDO?hQa8C8pY6GZ'`@-X!*+Sam!gp90SMV(sT0u5YJ>q<ljg-AI[RM=4I*3mnA]@p*(^fW.APNKgk-%k=_%\iV@kW)HB%VgDK%JTcJ#SLku\O:3]e9jZaF_HcBW%aeDM!Ea+S!,C4/1e.k33'?:(,'&N@C#_'k-V9g@!mrN7GtV5?CY8dJ%Yk?K6Lo^4je+U[QthjP%JDA+=(sp>4g?l+Y5);,P2.__G/8`in/VXB?,f<d.c'g[D+Jfd-V?$_()h;[[<(>SG>/k84DX:KD9kCjDV7QOFYQ_64k%*Q;/FUQe%-F@T:/1!`%`1g@(d4R3XkcE8(R;?I<B_<QGls?mXeOS<u<G-@AM1D4WUeBY?nES\;]N?I_M."%sfPh;=19pL_hDLg!,kI#hcWp6R%.$dW+J9RC88Aumr$)$#N0$9G0qHUr$@c2SnBVW`YRaApX[dZ=S)M+V0U?Pdb,!9bs";E_%ec$CZjB$.:28PV\!5ggeJba^7FD)nb%O(Zuq+t1r/)<aUH'2PH1?J!+b.V%@N0SZ%;AAI\rPs>oqj_o8:YXea3dL!iU$^LtVJ,lPM!r`0c5Q&QQR,:?<n3>$Jg<mG]['V"c%#V?MbM;Y"bPdlN?Oani^8V02lRXb3pQdp;GFg5u,9>&nJQ%=W[8VGFu1`q]IQFmKJGls7Un8F(UhG;6PRt-#ABa0`6#5DJEJ;mt;%\;U$ljF>7[j;A^N<F0'pQc2fY>g;eK'oHU[r3Q:JZmV0F,aR!p9<j-uTU34,^m0F1(*6.a8PNMr>%QN)8LpXc$;'a!O;sEIl=*Vd%;rIqd8AUf7B=.#-:.>(K^@n9tjWDQSn&q@gJ?tq@$2VsJqEW9c%fg8'>Z-=GLSUd6BIXGm/6E-24I'np!*kEQl$`r7`N7L40c&ZR%Y7up1;K6Q5I!.;[>D5E$e&-G;(,TKEYD=9Q8R6Bth\M,J*<'ntc.1sVEd9Ld^aQP6Ks8/BWa,Oc=MAIsQV]T(.&De:h9]3X'tXq-%+A_>SfPsIhdO,FEaLPhn3.Xs;Lsmj>L<X46lWqKG<A7Z>>`D$0-C+$,"V/'a9IDWQh(up/lDn36]%EkmX>XHPZ2*"0g^e&8[\I/.%q3;p3H@Y9akSikcf,X(E"49!Of.\g/`H)V<lt%UKNn,\(-n;hNjK^U(WU$jY]_BBC3M>uJ0*e]ROgL`NS"cNG("3n_MSc?e>Z47A%UWg:>'JC5p>>;K$agEsE,A3i>G_6n_K\O/&b@=q7`,I6r[GCE&69LQ/p+AjFnR=Cpf%:D2;-%*NR?)t,LEEh5LJuo^N0M-(!V\XE%_IXk:OXk6ZcU%?#9UE"1*F3EF?Fbs+75Ilr$>":XUn15XOhk!d.FrJaS6XAfnY8I`/RMn0BX]W$]7$*7?odfkgb?.Up6U^*bog(e%gYmN<k8N66-*m91.;nnh5I/eo]'>;u2c_UOg&*KHKdJT>(JEktl=r2I8SJ-a(\2RI!>PbDn!p_gOZ^P?oaQpO)_p<Z.Qgrq,(+>g%.PR08Y`XWa)O'G"A5]_D=Bt,$/m(i7nlYK6>u&?/Rg0_8?%ekf-YcR><1CYTC(pWZLlQ1<AZ*6,d%K^OUWD.-nDu3d>r3ELDF!nT%;fqM<B:b9a54gC!<c6E`5V<67dB^A.pXSB_M2-uR&lDVp;b0Xp^r`6X,"3&^81noaN6r/'nNDZed"g@Y-sd+]%CV+a"l`jO1_%B3%)Z3Ki__2/q_E"nBQg+G)n">^eE=s%)7fuV\8@*!g#K2+N\Bdb!=/f(?GFG$Hm#lEOe-UeRC@4n?BH9_);K*sk,%1HLa[7)'FI8<(%679n6D$'5+1O([F,#I8fA1rfi4+NidRW7&0f'3mn=],'[ZT>HMLR.'f/Bu!M)Z!oR/M9[H"3^d,Ig3b7TZkcO[(K$0b(mj,\sXb"%ABlLMfj)r/e:MHsQHr]+,(/TR%$<!'71j%$MPWt%@ZtH<fmN(O[*p'4/"KWj%(_#n'd7U$>lf1#Z[/&lS1<UJYm9cj\f!%2+W6eW%>R_202mkFf?3[T1e'nk/nk$i#LVqrbLMC'=$-^5dE>U>7gn?(08FZc9-p_+d4']mcCWg(ebAW`2BYucR_Gf_F5$?%%.l7_Lp%tt+%NnnERA?<#54`cB?jt)I[GYj<u_'F!-?/sVGio.3.!A:G,&q-/uo6o:*c]Vs)#1s)=BJf$Bf=m>1MJ)aCP/Vg&2kr?*`p^A>i3!Qn%XVI!fGQr/_XKVC:Ht:o1?$41*+f)m!Ar=,gD.p2>:2RfKAUQPM<cArs?WQ11@,eg-P%8=R*qq>;:@DS)FVV?)BWquj@/ZhPU'`V2%/&&=D">7eBi^6kaq%NU4eluL0@Hug'hG,lCLGJ@W,Qif/(F`UL\4lJDn7)@pGEjgS)=Z#f6)0Fl[)h0JB^(LR#I44)MXOO83n^N$%<nOE?>Y57fPgFiN&(nR!m@'*/GA>ij'm-=4hA=XQV!8StDQj%=7Sc5AJ.$3Oa_$E\76QfRdj-ll;d6f>P2+]H-+19j`.]i[0fPWn%F<:NQUhEL"(hiOV-Crp>dM8m4QpEdW+C/^iop:Q>6MX/ia3G$+E)s?*fQ\n\Hj(Vnhek`T4--XZ.-tg(?hI<Af''!HfB*o5("S5:%ndB$#k!<^_PV+Rh;!R>A(j"ba>$O@3dO3I0Tqb7*,FO42ARrc,-V&\_!rP&Hm`9,X^<_saH02Ndp+O:&ROM2R9<1PARXTR[2rOQE%;5#41)iP%V"`c-a.9*tEehbkjF9,l$22<jN7jh:+#$i*W2OR<ml&25hOJ[RMi)4-^LTGS84*ib;X29N2Lrgb@O08Ece8mCH$l+Gb%@PJS98XkG(S)RD7U"DE1a"[mZPl!!%B\s<p6BUJV/UC29_4bTan5U2d*OP#;Ftg#Q>Csk:QlO<R<@F:@<@@lITfIgT]LYWh3(B!=%7gR>#!#YJ83a`^\No%dL^qiK3n/D??$6Uq83'lJI;@jOU(:Hj+*.VWiR;>?e&p@:9[*TL4Qpqe=14L!?M*DV(M)n-]>$))-ieGB2%L4CP*YYgE]`/_]6_V=#t%DaU\*N1"Fi#-gM=V5"47Ud6(l4n?2`cY,T%.#/cG>XN/G^10\?_AOapR8oW7ZuJo"RH1?O"$,3UQL`%%#)8rlKeg0m:kH-$WM\H7#A&X#H!0p9<'i;a),-e6bi#1H#UkR/6s[ArT;?3A1hmr9".Bu.$!8F,de7p;L==8@Lakm4J[u8aMSXNk%:R-,3:q5P1SC'#XYlq>9@It8]<0*tnnW3kf-\b'GA<&C=;HG'.^i/pC`.aQ@)9KtZ6E;b)TOik.s1n`TPun&dJjbKRfTKnhTELR>%;PI'P?V9aRW(nR_:AUX5:kkB3,;)fgXC!AI?bdWm(,ebLA;qb,!>WuN.p\8`PG'7U/!$c<h69`3O>MU.9pQf#<]I1FGOf_VMamb*%U9K8\Te:mY'U5V:cpUic`+6b%2kgq>jRHG-5ZIiZ75Drh`dZ?T^i3$4M_oNRGMsB(BnN-(:IH+<J:pJSiT=j"glXpc.W\E58Yf&`%9!0\jHShX^D^AaZ.++hf0M&r,P74`'9h_CIZDI`+,*#6RK&_`qUTAP<2pdRZbsYQb6L"ZQ.RJ`,BB?i_Z2rouBj(eJp45+k&9(@n%<>s+e/4qm.KGfPI?AV)3E7$.;1kD"IdV#.Kr[.$FflD>&6l7a"crOo+Uk[SE8g*K%6.7<\*?Q`lJZIrhoVY%I(6p!D&Cr/fS"MuD%@]`MZ%fSDjBlqaf/$C2p%Fu>A+Do"6rJ',FRQYA!#If6#]!SEg?MJP_8N"*1X#pJ&HU6Wm=jQpmr3mgK:#j!6q/6K;c,kIAphs44%S&9_3MESh+bO1Hf^jf;RhkEf+r3tH(qKjKd\DOTY]p&?M#D&YP%5sG&51W:PS(*jhhU-1Y/W1GWdbS//YC@E+Cuu'qE3YeT1s001%6eP?<7-u+aC6W%blNtT%pp]3*HC'tr2nK7nf9_&FBDbM?m7YPaj']I<2]@Zog;3!T]-2/TS;ilD!-@'+dEp(hUq^34Dg7`h)Ea3X%,Y]Ah\NKV)V).&7(JMntC:.$*hh^D*jPcK=&l%^[q\lF.7OjtM-`+;.bI\GLVsmbbGu^?35#YQI(X!WK1hZ`nT]bB'K`DmS(G+KP%C(l4kPSA4h?)HE!A2?d^N(IZU:3XPm)7&@3qmDm8,QOO6K>%BF(f(pnTMAJST,)aFL4>8S+Dj-tW;e=AZ:$'l?ZB$UGbW5OKjo5k%@SQO=8W1!JF5/b]l<KQ,SfG0S@PCdgD'#'R:;uatcO3"],t,nV@?q\[m^n.SnGuF<695jrgiY?2?<9jWo(n=,#Wis\K3#^^8Gh<s%*0khk?Req.E7,s;n6gT3#q15><U/*::3uQJ62-,rHot+XPrc769W`4m;<J;I!K3P^IV[K-eLUu5[g&%3`Sl1O"HH6g<aOr%Yl72\%NFto[GVTR!(*'j[#=e!O8_?WN@gVd"oY&WqmZEO`KTpq),$c*pSHK2o8CBAY:DT,hF%OtOo)>@6P"6<tX/U3@.-V7fQPtHUEZW$^%.HOfeZ-7MC[[qT#A90']IIbCg81WCF(J?$<2DG5:kST>_W0#1<%7ROD8s4L,SskL@b(kmWH+-0Wmo7)@[-r&>9#[lI/64/Go?p)q%^pX!3A0P%-EfD@QflTehXB,+/ej]@GeRB0*+qsLGkYf;l6H;Q``NIGo#e..:U2)oaQ'jt=q]Z)iU2)/[fMH6KM(/s'ZFSQ:(bQPE%TLo#A)M1@Y/sZT-(K+J6FA)ks=I*Qa&J\TVHuV"_b9pPFIG)8kFKM;qE4c+G!7Ft(kurc[,c(=)<1O=77@QM_0d,fP#=*p@"<c`k%P5=uUNa*JtMP1/g!\&Y#Sc]]n21;G0S!Od6'fi'&:_?Z@<6InN[AM"Z&<h2cPB7PUeAIB,VEINETPTXS@W4rN#%9EuHkr3Z=[9UD%jGBY[W<:EjJb#C*_QBi@eQ=kuM&YiPTh7G<b(1VNYjd+g_f[)+"nS^s[o)2-FDn5dVUo36*_XCb<'\dSm$Rn_BMR^e_HKLtis?QR%6*0c*k@><o4dXCU?ui`L=)O^Z2AaF^@sAMo)+>ThFbPL(NPWZSo-3F/V=0$4?!u(S7T^*90Zla_f16oZn>b;C[TW:!ZX>o8P.=K%%TZl:Opf,r,A72rf$^?YpU+;F-qsR-gckp@&WFAcOMd7e.En%B]n>i.=5JH4]\<AA$+Yn]'!qo8bfTX$hT5-Kul3_*Rc:PM]4QFo.%,7BL6Eti$EA0r#rYd46d1m?*qf2Ck//LjmYi`cq0lIfPGR)PsfXWV]N>FRf5rE!KS<QOZcQ2q'G9d[/]CVFn2XlpV3R*@XGc)Vnl%").%T9$5BkHn1N?/Ej'V!3B#a!*2Ip")'::B#D9I.JaZk<N+-]%E%8tCY:K!?j&!E<XV?#J&4Z+n'Ceb=pLc16U$Vcpji)C`["C^%C9<_W96Af27F8;5-EBnREh;8;-'_U]1g3Z6>QG8G@YIK'6,C%!JpP6K,a2JoWS5o)#jNflo*SYC`uH^17*?o80PM0.(+Y\2=9c:P%7P'\G-Z-d%![Wbd=XpIGR@;#E<M:*gC_-rEj[Gu5607\BNt;&OAru=J8..Dm2n5\dofpYIO:$bk$@Bj9.VFYpRu:o0!#05R&cj7M%`]0qkPju&34AVerEG.uB;lN/?lQ=9$-mr/+\cPS9:D!U[Wc#RS^C/#f07ctCo.$5c$54(RPMfHCi1s+#!S(=6j-ZcM_K"V'ECp[=%q9S/Fr&)A%@3k3&@jA:V;ZsmMP&CCh=[?cN5GVZjQ.c:gMT.JQJlM(LbObFh)QP+pk0mUee_29n8M+o&'<]jj>i@flG^90PJ?A$o%6oh!OJSWh%>,Kt0PsmVC<G]kZ<phA%-kuY`_jnuS!l6:\eh`c)eBH9)5VtQ'V<!hGM[3/>n(GRs$EL/c<m4$/5u7u"<2:7@&?KP`%iT'18ce]Oj&@00tAaTC-#c[UkX(ZuFAg_L(SPT$dH+:[<AoAM/i#9u&nrXYEb@6,k!JIm5'?NOBf6t*%.`"ZVStro6L/@)9Utf!>%\9%@l/AuVop]EDT!eQ8A$?dU(@#CqjOpJ>\*uLnt/6A5M&tBEuaT&C+,U01=I"J2hjPnMiBm"P:3N3*K^'IM%8X*m@I4bU*"p*j5%oU<snE"nO9$FKA,RlQEmE^1SA12Ach#6N(a:9&!5LaYCn_rZCWmo$J$Q*Z=3/'qpq6.G$I&8VX7<^K]%APARt+cN)3;OV5bES[-q%2^9R-:'neQc7$Q6jWmjI&X^1K854_F"(l*"`k?q2L!<R,W4e-aljgl&+C</+Oq=lmljb24_\XgMbs\3h]*``t]$/Vt\hP)39"cAr%SAb(riLF+KQZLX<M(uBC"WH7YNt]QWWFB*=DG>9Xo!f=TlPh@:#,6h]RB^d(W7X*=k.#UPI&Gf<[<C%aM0qYqrP=^LQ@\R&?_>,g%P>KN?LJ6<=rHr\`F@S]&Co4&$Xrm?A]CS0i)m/FolMbI>Ml.__MYRU%ggk>VX)76qm-,L!\lo=T)MYipV)TQV:d]i(A=-PP."op$%f3='Bm^=EK;g3R]Y0^GkT_qgXm^Bss]F<:s%'K>b%X,<;ami3-UGEtbq&7i-:^na`!Br[eFgpp_4iQpD`?6u"D$b#i#7H*sn`!#Z%-WaN0L7,X;i7W4iFHnr#7eEmQ2HIkVC])]Gr'Fd8jI<GEWeG4olu(^>/p=]>Hs=kS(3_4mkt.sV\Il0B/'Gi,nClkY+&$mVB3No=%)o^/.5=b"kYu2[(PCqWGm9L1M\/dhT+geVjPQft0\&3WN^?V@m3*R19pXWq1%5Y7WWQHfaoea]6EH]hFg0g6$g&l6(^,^G8AYlq!%e1_aL,tgt';uO*CD=Mje'7NS38(Il'0P6L;a7t%^DP]4ue=R#Dh-CKHI.KZR0K<CR%I%ftDX62QX5$t7e7*VE'5uN<mMK^1o32SC%.A$8Mf'#@_hFBJB[ZX7@nSitd$F#M.8Fk4dO_@ICr%Tn>jA:WPgQDuBq2m8aK@rP7GGq^YFun%qZ3;p7IIg]\-QgJ`27H@-k$+h8%g-sM-B>tBAeB'Su_BG?1VRb(_jAT]1Z]XiOU,eJU,fmsYTs-c4?6?:eT$'JP*.4uD>!X92DIU#NO$VZm4/;2k\+](-!!WtA6rn8:%e1B,T7!FB!md,n>:uSSM%]Q#`NqTp"feZ97,SbnsHc&-M_?,7>r<`R`.KQ?C@giDb)-"UV#K+`@e_t&4MrEg.Zgkh!phY"rbs/EQ%M8^CuK&#YPBR=ZB\MGqE&MF>XlJb0^$&Sq^+5drJCI+N0>\%HCX/)s*9<Cr_QT!C6KX<Di.hC9K2S:ph8K`J6An-hFS[E=`G_BJJ%<URp`ffU![B)8:Yq>A5XdlK>AKgnU@;gAi]?;jL<0Inan=fLl"QL?T$nA)o<Wn_I9*@4K<S0ikV5MHNooaiS-:+*N>m;ACAec[>r%MktGp)FdWBGBr+Zo$ss\!pHn+?RfIE;e\p!7QpFT`m=oK2A]LBg7,t$I(k;*Nc_WWKOAsObS][Q/GG?!g=j4j;)hJZI,VfGHjn>L%4J9Rdp=;K:GUYTd%B];U+F.?P&Ig%pAs)X@)2"MgRd6>AgZFBG*HT'RM:rFA%97:27<1BCZft3d<28hW_pH>*lZBS*=sI8lHtt2)%jD%^aZ+5iSA)Km^?Qm#s8ek5De<\te&ZW+EY?1*k>I(Yc$d@\:7OVS1boQb(rA)go"e`nLnC0VRe5KUIC^%g[qSW:H;\QtVX>TWj%JVg)eHM>oW?S!*-7VAaVX[C?tV?o3dXDD([U=&)Bl4'^NYsLiD,a1QPZFshXX!b\9<>P^)B8K^K,-1_=]"gj0f0#oA.cr3>;U*qY%hXjWk95SDj0JQG^U9Qm-Z!*#AA4G^HES5)e9[34P#,S:_]G@0()U5HJ"f!_6O)0LHo1^as[9FEWC#8n4?CT#WiVpibnK)mM5=7gT%\nUpr$Z+F@.2n#gYCR"OfENJ9ZTroL1f$DE=p&7lW$(@;\]0H7AW7!$L[%$[P%nn-k9JOTfO@/M6JUB+IYB!8(S"aXJGbC^:IC\W%XBSaA%0CCGXb.d^MP6,0&UbTaFd1Se>ZCM6MS`_1n5i]riC/DG)UY6F5alj-Q>h*_.e.85Nj)1d-7OUO_,u:]2`hbK`oSu2=@g7`%@`"ji(".9D)pC%h@]2q$],Ns&J7Ta9'*/9H>N+S?NWkfBB9ZEuC1"=MAN.!A#Jr/'(lLEd4USM^8m/(/-TsP1YLGdh8p@$7)DDq<%/.I#I0I3SLrYF$/ebk9.QjZApYo)!`8emUHR714/R>(GWe?MBikA`#Ll=XZVW_.;72s!*qS'lt@R]&NL47u-AHeipO<-C[Q7htVJ%UsKr%bbkg1407#,9F<>9;0DMNZ]82U:gO^V4#*$5V2d>#RQBJL`Ee9CP3IL/oKruR@HH7RdLAVB)=36&D%oUpmM-!(L:d%GpK1h9%jK?lLN%FJZ$Qa2'/$]>k52ZY<q_tfuNp)O?LS1Yc$HGN-/`:^U2hBp^Z't06'L?su&EFa[UXhE)ECqSS9?gY(VhLTC?=,8'RR]qQ%GH#(IA)ig;#?`,_!l.X:"W6X;G$TlZg?tpE&(!#h7!`f,)J8.\!uAUfDD2u:]D[rP?;IFV0JGS[d63I@E;@o<na:QR?PDjGY%;_f%*saKmK;J<M6!1's9Q5,;S8=&kl?]IM2OZos19hi:l"aN0YC[nHU]DJ7,*0:WN@BMM'O/Y;"gMuKbkX_t];B&lZ7d`Hp>X7^hbs#W%@:S?5q\TeX,BF1c3jmDm'uiuOoVgMGg8!V43p.'4igqY5MRk,pZt/Vl30rfsL0j7Z1dZdbE1@RjK$;dZr'kN9n:]hj'`Z5k=eMXl%geqX7>VOkQ=n!l3MpFT"EZ/3!VYDW"5Im.$#d94'`r2m!q4KQY@'=:EB&5^XF;-<%T*6sT,SQC09dpCB%hY7OD(AK0g41hAZqnnC%NHIn]ZGWU%;g@-QfS'K>Phs[i#,Z%u_";>1iY)?@d>WX):n]$8GlQ/V32t-i0kiHU5GpTUl3%YWP62u,@>5E>d?Wfg0cV1'h)$8h%L+2H[dDh;j)k+HTPi(1jGs-moeTaE?-?,41Qd>qmq+*i.0+n/PZ!M1AX_@o%-!CsdB`_s@Z6(MJ]6Q9MGIJ%*eps-"UKSQ6<Y-RR%h-IpLnXd[%+CcF;WdD$T`"SrCc9L4F.8`YJ?Ic7<#E#a\(n#41KLC7@B8hDrLp"0$La=hl,1a\/T9MGdc+4"p\R9?;.0U$`A[7uQ%fgR"0S+B8RZ#.:W4ID34e'8]"T4gh0rOk(*JD7g#[aiq<*au3lS)N4Bbg;5Uglb2HP:Y5=Ao23kTt7YBZY+Pdf=#T?\2i&DfA&Bl%VTutX3!)ah9raslI8K$+1*9IT=Zq'XQqdk-:o\iU!N=N+BUGaQ#Xm[Ag\#5:`3X_D)I6O)1dhG@I6bXCN8cgPTX[8#Un)/pK-1M)%(&^L0$N\m8Xj-O(92'l#+j\R`NB*NB]j?4X[Xf1UYF(>^f::&k/Kn$Y%^7?Y51pSf8/kbQktOrf-^m8e$>n"B^c^e7<m$m`Ni9:n%\T;r!8K&CslJ14t$=LQYHb1f"P_ZN;'G+;dlTVUuWWgP]"H:fB_eZu$(A"l-5@5Q0k'Pes!u5P;O0/8_#4:Ks&-16KF)T)#6g6A>%<:<.@?m7Ei*qkR>]\T]&2H-Wp;WSDO;sSeNAmeFt+)/h,Pld[Eh4uqT,lqH@mMX;D^^S>TG6QWueOe,2S5O45"<#Db!?%e:_?0nn%[a<0/O9+bP2]V7D2iiQr#u^<t,kN[^oo5md\7_BO@D"0N(KpDElbL,7p!9I<c`FUP,-)CMgNlAE_jRfeqRZ4\Ec(bWFEo-.KXpAJ%F5kg-Rpc04)OUKi"mnb2@%&0S#!,n0Dm27]g-+8;Y?2-j2MKb7hUZ5_J@(RUWm='PB1IipHQj-GK>H]1JMW.%@S:N70n]IN4@$o\%Jbj(7M;&p(UP96X7WN33DBc'*$HB9I)U-@B;YP?rC]isYY)R\,I@RQX$60n2!86&:()Rmm"G.bEgpXtW.K`8'];*Q=?nRJ`pFeqo%?1i#YTW`ZH*-%U1Fr0u[cUp3"8]-cc;(,FCa%=aa2$.Fsk$!_L+Y?Ue2nGp<-A-8nF'A$/C'onmcQ_91&$Wa*I<lu8)L*D?N('&,%e7;soD;)+3Ju(aI4lQCW8-[:TcI_+E=]c/EH7!.Lp)_YW2MM+7GtI4IM/I<C+clnl3'7llS*8_[HJT9GIc.jK2?il0[SV26oQH+a%VWhW!,*4Ai3JuYJ%^M'6n<3sBhPT[RHSf'U#YSe87n_)nE7r&qIkKr\UoVgH5e,Md5XTS*S'0C-J6=ntc>qc8bCnkMFjP\rWNOM6%p<MH]^ncIQ4gNeW>(TEK6dSqc[P4AQ,KS$ag1Vn=\.3t5Q`JohnAl/@hF+'646rI$"d>g#_`05!H`AV(BNpl80*!Qj&bZW@Fm"K?%k!1:)9S>=Vi^h_:P%tDr/T.DlD,5@0^d<tp,0`j;RasJ(^V%,=i)9;K?*U?V"\-7:@&5-/oZo+(3Xh9-m>c+).]\h^qB/\GJaq`I%._Jg>RhjY(gGE)oBhL(<Cm`9OO>1FaqLH_&WfMmd@M<k6c2bU3OH7=\juqE!NH^`+la7,,+SbHE,B9lk4[=,_D]**#/NHDA_u2rd%1I.<#H@\c9pAg6<-;Z3b`*sN55'(<Fd+qV'^?*R2\A*Zn,"ohSMrD(#N)+:+/qnD@i"?lYep_?'$\SkeL6U[6d+F3m(s^-BiYcpM%*t1_Q%(MagM#]2hXm>00=mQ?DD]=Rd"WODr%+)tjE*t4Q'TT8t/U*Rj!C2T6*!Wj)(lcJ3]*747,76#DgtZ"1$og!O1M.DSX,.>:%_\!0.qlA<S$S:XLC"U"Rc:K>q@(XtoURm#X;%ktCbZ%1#ALr"VY9`#gP+biFQ[i+!Zn#26l:hGl$+LNMDn)t]qEOse3h1"nWW=#M%A9@5Jn;;fb>,*GL[X`EQ>pk==dUM9B@!ji@L6mRlNatu8;b[UNm?lop>DH?=J2bW<`b^:9>Lili'CKSZ+<t*I+&&8[;.if67Z0N2%]$CjUQ]&7eWi)Xu8Q>'b_?.Yt@0P0KblMhA%[K*o'B>R4:J;d*4U[b,V<f'SZK_m$HN7;`/ci=*kZ;,nX\U\.><CCb!+.BVD[SK)%V]c?[#+6Oj9_q`4dcdaA`SkNW#"io8n\GZoc)^H]fMcH[6>%M%8g(`#gsk+^QkO$o#1Y)?Z$_NOT$bR2i93`+)1SZp[9\d6&P."(%mH9#C`hg<CRIs*9kU@5)qR8EKl1[r,aN:Q9\cekK$sZjJ^$;.iabMTqY_/)X3u[Dg6^oCUek4&s[.LK!j(qZHYGn5>#M^,UgEsmZ%&1ET0UYY7lBcpn!$&LCln<>CpXkpJZ]W,aE"HE2,=/S*iBaTf?qbU\5V&QoUlV/6K(:Y:6&;c`gQ32`j<tk#r1ie=jC%"W+P!N\9%Ol3)`(T.DM/(=qQU.3R^K>"r`Or(gZ^fY_#XlSg!`9G8M%>\J&!Hp@?gJMg>D?Am`7`T,VJ5*I[-"O4a0WN.gZ%D'.O46+4FF,qL%TN>?DHKKm;"^lQVe)>GX5)$sFZ&=K#P#[mD]s(42U5_Pb%X``4IL(aJhi7n1\oXu@Ki1sDR7*f.(64/ZS)L6/5L-aeO^r!?XY6EE%rcA68'P!O!^``=n@6eUU,BNe$9!:Gt/d:1-jk3MhqDNT9d7dpR`X\!Ec*hf!jFGm@$FANBAP?i\Zj-;8;*Tjf'!:-cY]"c]?2&`@%2VQuKS5=Gh)&UO,Y&KrdNLQC/,iWgJTm\WCZ5<_<2b0i7Jsk0G;HcTlNcf4uonQU]P%2>7B01HeAs[QhH4+2uH"Crj1`-ejG&O`'%k%20ACCOSBWZm]!A(7HT)"mO?g:>=fKHEcZe4k8?T`DJCbGX_.#0r@deFm&Ga^*CZaL<)A<e0//B`6_4-G5XMCdn^NdnD\X\kie2%(DHqgU#8=7ad63=%*UR9lKB`3DFk]5V'e[BV8"UngbRDpk_mm76mN-sUNb93BM(?:cic5A<Gt/nZI2!ulNq+2$\#Ut@lV,gRKY`T%1KrElKaUTtUn/K&qle1gNrmXL.,*&.NqS&)4rbf"B`[u;'@V(fPT\Re:)E4?n^Wp.N01$;/u`rnVB-6FEd>NNOmd0lns2P2c7]9D%2c1*E\i1DG#*MiK38=l.$++ia/PZNG9]#sj?<gh?nU=k.h<gOJ""Ik-!Tmah*HYDUfT4VX%-H(,8A=A8EJifQ;sW4lGBT"(<-s8s%ND(Ns-a$8.!Nj$V2/rc]964$Z4&".L1FV6mX$]T,nCG'`K$<TBC(JOE\k2b+S]X\s$LV>E%HlY%\Ul>jDD=DGpiqqJD?nZXNN7it%nQQ\s_GP%).,=Te`F-]&YM'cAh5(j0K:;2L9P$-2Kq^5l/]hWpj\;.kR8"L1\P^*`;`QpV35Cu@A`OM?'r^WGpSH=bZkk]kGA/\u%hhP].O>h]>bN$PY(tH:Dp1DrG#WWN%:\NIZ?^;k1YsNFk\N6!JhIj12>_Wa*h:6!MNeZbJ#LsJF2H4)2Phh(!)0@'pg)>QU3%KW9%i.9UTEhM!D!+hXtF:a$Z41QI9_u!6g'r(JdZT`VS-a9%&B0Utp2$[$I7--J.(M8p\QE*sohJfJi713GTh^i.cB(uoU*0(?e&e`["%MU(Z$W%:g[o'ZG`V[VX#,J?k3!R2?!(5E?X1,c6p"m$:5^2X7hJ-R*6kt;"fP$1N#)p$:MBZbRTZC,NV,G3daWoIsOU$Rl$E3`;6%iM09cQ&?n@prI7oDg-k<R4mbl<tp`'i:"kO2`44DFooJ<Ntmil)l9[e9IuHpjsFAb1=-X#m4tIh)okUPOLT,(3!L7./'!HKPD(7p%jU(m:*,DC-"aNFU@7fQQ5R]Mrb>-B!`bm&k:<ALMc$$$f6L(7W<Cp/]:-n8-Ggh;](7N;mRJ-I_;Q*YeG&eea/u15%n;8AC3h]Xc%?Sn!>3aa8*Npo)k9Q:2Bli<r9QE@cgfTh-t84P;!FK47VK-ssY@U$+sbq2\X)i3[`X0LYlm"&[N)bFc-KEhnnjeB9f?(iZcc,gHD%77VPBfaFk;e/IZ@N8R#!)_3K*"Y3h4+`g\Ibe?aj8@sG\%KsTDC7Ru2Lm?IENf94%_Pua_R+ARQ<l+;H<fF.35a&5i[N-fI10%e1%LsE_;XXsS"EHn:fC%$]nPjqM]:bt$t*=C-2#,&j;baPTBO`X0MnQgZ%W.#,Wq_jTT=!;_sp*c5HBu;"5'3D78Mq+b%^&cI@!bN3+%$%D1ZHQZO5ja[a&!X"q1=rsBWc)nnX&Z0Z+>$M&q;DeQ8R&cU.9uN6u'Y:(gk"<Z8J@DKY*=V'C(7IQ=^&c@AK.DeXoo.T5`g-Yb%#@A"'>uT.K$Ed9='>Bp[kLf<^k>OCsM,7$/#</GHI.FVL5Z3$HRf:P4E:E?9"lR3Sq,nFN<,IKVagC2*2S9@5rKU,%;*Wosrp1>G%lcuL@kb(0Kg`3d\LJDTWFYHOthW88rTC7_MHI>`)=+`"jUOb['2VK.=%b8euHNS<kJAbcs.hnQ<@V34M`V'A3h7lDNY)J%&]/GO'%>9.GuB%faZWTL@_<Bic+ed:hJ7m=<2ZVVYZ?CI7?[RZ^kpo2#RY`R10KiiKhS>X-5\S&O\g63Y,<UOVjGh5p&=7?jQ/K8=MWkH5O%L@BE2H5%p*9S$mqKAV8k;d^bVem6e!6M4eTQtkid#oc.0gcg3Rkb5S&H^?u`:E$HS2QWaVXY?#I8.,NQT,G\:29cIkmMWT_eDgS[%aGd"V*FmkoIPK@%m@so?&fd70l?]<m'o!9'KTsT=NG#>S0'*n92o[G2G-%q&9f^(@'X!B]ZqK30#XW<Y['qs,lCTk&g0QpLW1B@t%0h4:YdEpPbRd[G#S+X2"/^C_-+D!L#lFN?+F/7%H$kXeSL($TR(50+CRc*K+Z,SS38;ZQKFP$XD=6gnF%g8tqXq3b(F-?T^=^Prj%]\O$FX1fJ#;-c.#j!:EF%1S%HV;$ml"@<FuE]&H167gQ`cK5qBr\G+"A,3)"k*_7':btAZABRATWBG!QPYD\?'[b^fU/d;pnk8ZD%.1;s!31"@;BN(^\^`mV\.VT_F8kaDW2J\>[]uEuai9TuH8FrYmdbX-ORU7m=g>(Nhf.8NMb15'\Qf`O6Us/0f&KPO,1$r[LFA$^3%B>UDndOM_,Pd79;9;M5J_oWrMUe.:n[!'`b]k=4!.^scR5;`qtni9'E$Oo8B14s5Q*Wo;`HZOQC,E46j7Wh8b3f1[:ObQDr&5mTs%=m9_jju1Ng],3?"`8K3MdLrN5'NnVI6Fm:FGrRrLY+jGj*GCfZnG0A8;l&G@1iJ4mY_O*(<2;e!ZtSV?@\ReRd/n$]3'PtNc^Q,L%,)RgBUfHi>j;IuP7:56TLoI5*:334`@`+G.qFm5)dV8/L]o!M_M]V8-^sc>"Keu6B[<*sf,<aMB4BihEnsCR(j0H0u1M#1jc.6u(%^BN&>/n/ND^mH>eDQ_)=!Tf?'_DQdj?WZG/O!W5Cfqg%13R[Wdl?kcVZ3cXO)j"+2$c4UJh-;23`rXoFD51,]OdRX)l)**D5e=YQ%DrhR/@-p+j\t1g?1q.(T&Vq-I8nE'd_XAO@%?1Cah$%:a,A2%MKXBC^Cp9mVU2CiE)JZP0g92^&E^L!b8jjke;2Ee)XpX"8%7q'p%$]mhN7TJ+"pJ,4o?0$OfJ@&p_Ifc[+.Q?0@3B3sYVi$mW.TD?oUdS?]Vs&i@1ZA$SJ@*)FaPM;.dOa/&Of^D-U7)_lf$'`GVf]St%C\b?JZQksJGreiq=#>F&F!B&(BT\pIQh^]8h7`FNdj_%l+U5t6QIVnpP!#+6M-JRQW_TbP4D!f*Aks_5&]:HiZduP)VaSqpkscq3%rH)L"403J(m!6=t6HM^!B=;&.:@d01dfnbg,Gs$Z-1tt4a/8/llE"bsEsj%YVnF$XZ_oS!k1KKAle78dSmgr_9-.]bk3;_?;WV$6%F(!id40>,1;r3o7dgk9hU^bAcTZAh<[EisC=mN!'gT><N*,D\&AX=ua=4]Bd=S_3%hY=HqW,kmd\n]`BeJ&VP;E9K(k6qq><&8$i%rY__+:HNWWm5^i3L,+qWM2_\8D_(cl8o2l/0bN7f6U?2d]SiRDffpPGC*&uY][c[$n?$=+7$nFWkfc@MTuM#DM:r.;hl-+Jet;50%D$5Jn'*7sBCJ:Z%nhjB6a,!gV(lEDlII4,4)c.N4PUh]7AlXQN*tg=<+S;0Q5r/S]CTZD$.F@7[Uqn.:cq7UkLib20Ej[UH=gUFT%]3pB#b)Q:%'@"p:IDn`cUgo5q`]<??d[mf]BmXtI6E9fjb]o\E_':M-6(4aUY>p]/mpA@Ql]ACkd/-TXOMWD;@dp,#YBm!%d?r5m%.J!HiOFh]gGlK:o5Gmm"1V7IU[&8qj7LHhY"&]gZ8YQ?9MO5.,0l*T%R=Qf&UsPm`Bc)B/%R+f.^3M#KWN!f(#`]B,AoOt-3_3_V%WAWV,7HA9ag&bl((en%%2fTe4kZ(@$FG`4;+f_5ok_"hf0lPU"SLos>c**5<.AR+45UXs%UTeQ.SP=X6/=8*8_//'=V?2,Q_n88<%@5b&2J:;MAr)jR%&>^]k!VX/P"<)#El>n`%Gdf:5#LsmCcaqrtYKiXc0d1hdW#^$?!an9,pGN5<&PrhN62sD0m"W8?r1\/.8ZRm5%%YGhHLWNY(6a+?l/a#2W,AuaIb>?cQ,aaA'6q%Kl7+IGPP@P(!26Y98kgP*=j^"J!J:Zepa0\N1^LB!-26Jk'+'mJV0Nb<(n/!&a%Pe"(>_1ikN">.Y)cHg3A9N0e4Pj9:AE\N(T`fEZ^9hq+uB9h5/=a#c>2Q(aElr_/mM0kPI//ER*,$D3V[J?iXqnm^?gfX-\b.TUV%YD%Aq44anf^6g=@a?jO'?M-^FW^i8UYGccs$jl"hCeJ*T5_Wa^l:I$2lEO8gcFX@@V>C\Nk\'!tW<)5VTb`?+*XggV7B"1'E55^q%>Kf^0OXh6T=`;RA]@PLn3[EAp)cj.!etY695tFXDR:4[[6?@XL?5e5*EK;Z(]mK/Y_D7V09"HbeFW.+urYi*_-=Vt9RC-QuQ.m`t%m&Y<U,7.)bOC.E8:?e-=EfLLPM>b&&bW+ot2*K2tf#a=dn3+@LH)IKNPq!Y@;XsSEZ%Rlm>0noo$_g&s'=!AD/D!iB:@r<qTB@kk%NbFgre2GlP,`@lc1:gNN7LQgMWu7W_"kLGND=/hH_JFr0qh^1S`;Wk7,qmKIl:LW09u4/5K3:P,0@"r7c1l/`7=2@Oi1dNs=$F?K%pncEQGY^I6MdB>K1TO)_GcaP0el\%;1quA<';E]U3glf&0kJWKa%u4XF<ao0V/nbJU;jo,)F6Gs9mQ,[Tk[)Wq0"#dC/au1[FCRn%Q]7Ci7I2DBaSk0:[@\G6pVJZ,/5(TG,&)L3i4@c<,T:-S4aY4KE$h:+)d&/(LD&b@T\*93fY+_^Q0Z,0)o)8Q=mW/h,\(D:10T_r%j\F3?+(eM5i(j62\7<Mtd$J9ZH.$-*@-SS\^+<?Qa&Pl*fh%!48k>3dP#>`R3[)H">NuMlI*5,EWA%81O^Y>gfV9?5NRud?;V+!e%adZ!_)9JA:4Q/Dii:A+oVaN*Per)UU@$T5$gLh:*.mAo[qQQD2MhQ"@)fJ?3Ub0iIg*[%(49`3hGi+>Z==ed`G8BXO1S*s&RM^(J%Z"9*@mE8sIUV]\_9!*dphhRNiAD_F26:It5CsUaLL+7W0@hFn,kqDHYXf*1'D3P0k`U"PMZkL*8XXmtJ@>^9I"a,\IC?R]5=#.]o%)@a$:]\Z](IYq??8E<HrS5[iD)I:t[WO!$PSH]i-aFADq+`WU,h<NVhn&DM1)*;KY29)thoENHuDY4sno$6hj5RpE_OAaQ$._")E%R<M3WVCf]!qn.tZ`qn*BmN1s`J1YQ=SiPP1T.pSFMs0ihZ,tU^Wre)GQYXr0e,JnqT\P(SQ*,X&flL^[#$mG;[<pt?DEp(3G[/DU%EG>b`7iNF=7$SEQ#eJTup\Bskd+c>C>02@-2egsG._!*e.jPY(Q>bq,;C*4%NksrH634HR<pQk.D<6gY@LVF-\.-0R`ZNZN8+4Wi%F2sCr$^[m_0'G%WE.cT0cTAIn6P\BmM"l.Uo+$=[@dGro[WXWOAT.$FA$$4XM"@`\DML\/_o=`pHdjQ%j(ORLZ;.jS`PYR-Z,oqO%V4eoX+M!CV'A/0ts(&<O\*_hM<2cou\LY'dDY\HnpS8O1isOb*)UkV'iA.UWi,?K6_V(a2?>2AnTu!T3Z_jP^F[pEfCok`jdDo^U%cbbNhHT<+O;X8e#C,C3:6K:qGd6QC!BJ_\$L!;caie>O`<9Wt/Pdthu_8F7sNPUGRNFlp4?t1G3HduenW^badg]sV::nu^iIFuj%%2&b71]Q]tL;6q?[YG`JT7ais&N2ip<B"ifhC]YY5]-Ne^l-MQQQIAToQ,[FBh"]+CIP&A/bi[D/g<(A<kaB9G1t@Os9")lJ6-Y#$%XHuSN.Ton%K>r'R1hn@YA7<;2m(mJ@:8d\_fqp*/9#2oc;gWNOFff=95[Y+GGO7@#W%G?NW#_A08!R>">uShVfXG*ClsI:TKY,_-%ahJ(,beNn.0*E!2N4f7u[Y;;@YYnuVpJ]_A'k(%A[JCm0D?Oh1beN&G'a%sVkEM8hqYOY0!B%<od&@b4m5X_+c!!sgER`;%XeBaM%m.8=\[t`c1jOVP6_%pce7<`JUQh*+,AaS'J(<t-5bPoi'6s["8OD%dr:.X^$[h(g:C@>"\p2iT!)mrEt^Q[=[)V_XFTpP/S[c*U;%.;fr,Wfk#bG;RY5<_q[Rn<p,Ue_O%:\'sT\bANK/9eJO\[YAM(:i;Y$$Tg+:crO<gVNB+b($T8lRQfS8/XW@8c)+QR;467\h6rt2%_sT&0i#.T6e`mT[N#W\iT+&hV_,3C!FYV$_+Y"`$2qr^q[3feM@_hpFet0TN,.&V`Y9kBd*(kn??<(];?pApu2ifM3kN2KHq)(>u%(S)K5p(r@6Oo/+tZ?h8NrWF7kA,C8#cMdqe^/JV3BB[R$W[I"pCsO0Kd+P%aP>A"BoaIC#?VF8BW>Ul4SY<AS6)U:igtN]-q\+&e%VZh9lL9B5'"J'jBE,TCQoODVua!T]BZe%!Tp*]&\-g^PKL<d`R%,%dbmck4Or<YOGo@n.R[QY#IOfKJolM&(uT*1VUp/o66c:L@o%-"J+KfBO'_p$ohLjXq?\?_>6B!ldp;*M4flHG`3f^[%R4YGna%aXNjfH:)VVcYP"6jmXtVG\1T9dPn"Z?c$AGX53NrYdmPZr^H7K%Zi2Q/*u!1dA:O0T5$N#JT-KMhA?KbDjRC6\m62hO!ZP;+ZTKG,h)Sa!!*,jQY_lXN'G#B<>J94,Z.u`iA*V6ZQWf*Gm<gETfhP(_%fWBE@%OUJ<hC^Utn?CXWQ>N_K^!=(ICj^\E$P&7M`cDoU!YMKQ.R^gIDYqHG>HjR=SVUCT;G?LT-V)FuhAld5C5a-jmc]b3bn8E)%C>1G'of@A2YruK\c!%P69qpIC@[B&bb4G@s6Jg.]f\q]&kgbXbP+U3%@*1LD8oC!eF*o;rN:l_To5e:ScG)W\or'-=Y4<iaoQqU$%Ao_NS$cQ;=4n.ap3BJ1VcX<4.JTlLOd$VXk3.C#QpaVhkfmtiM>7bn"Inu'W*Ke0bi12f-@9<EQ3+dMLAqtK9HKOp\A%#G^<9BPk%nQYA82JdN1Jhp%7gd[[AEo:=A4%i<r]2d^nid!Q]-=?ojDA%N/Eb'nm^FIIqi68Y&m'^9d0Wp<,3Y1r.?*R]lojH!I=)+JheL50_%T^eUqB1=?mQ)cl2SH[bhiqf%_Hs4<1DO'@u.5MC1df0:#hK1?,jP(KbK";1`;%P-2,A1XXE@P2IR;QZ5[9Gmbh>?#8cF(El``S?\%APqRb5Gu!iN/WX>c"hG;ib"+2Z[R<WJK)Y?^k=&44D>+'/_tZq7ujfsrc`Qi<,=*tN]kL.B2n>A$]c5E0bfPH@j@^cSR*-tpA3sp%Pb?S;`_GI5m`qcf)'<J"IW!YsN!E5#Fh7CTK6jG<"@d./m`qhpR2!jL)OX.!m!(.<LG\BR\#@r46-Z9h)=*jM%Z?fnSRRRPG,G)@%e]uujDjiUl2iULSk/+*[*]l0'W?'hWTgiYH#N"@.Z]!5Ppo1+Qk4ToY][p..6^#F@0XN:CNmfj@pXg""!F]Y?2);j?nTj_@A9oc1%0ZED;3Fc*&FDt"P,^0VR^[UH"3tCrKZ^('p1n*rB3j\1`\^Mog%-E8S5IXN\)LoBV;X'.eNH\@epo1B=SJn$ZEFEN$Sb=CcNu>]j%H/e,#\,uE%a48G*2sf:In:<g7^Kt$0acEi!f1o=t_Wk)J]Y26f[TrK+7p&Z]bX:Tgb[;>$\*/(H[[t7?:Ye_7E)Z=g/LVYMmf'kc%DgFNN<tEjWio,JrT8eYrCK;\Jhhe'2B9%`dB,Oig4<2>S[3OZH*=pcM_4I%3RiDqTB*g9!CSC9;Z.?MRC3d+0\7)H,fQaZ:o4B;!%i$72*`l3jYpPF:K_'cP?>/IO.Oj?)a6r(GmcbIaG?4W+DH:LcPWVqcMCXLtT9E!(tb%1E`P_hVM,T$+%2&BtFqDEra]($-4l/;dE%'#kgC4mt7U%6ZW@2&rU_g$[eKcm^/R$p1X1Vn6<Rk;0Xqj!C30@l;:a%',ASE'A.ZB_]TGCY7o`=uKdTBD-+#,e[)?F'h<$AXk=-%4kC/:dj[>*R'@`^@Bd*.B%O#"jKVb^*2WjV<rmgoYJHIa&tQ+"[pOPj8473=C:m?_bRpi=WD5aTh',bG;u,4CMdPlMO[1q47ARY"%:djT,Kg_`N=AVENMZlPF^?D-mHC@HA]=0Pc#!-d,R-q6/\q[=Dd/5C8I5[LDFhEGB6K-91C:7fH'846]MN(rd"bsnQMLFoSdqZ$^%\;kmY3CDcFb*<>DKc<PV(E3]oZY+K?d6:,M>d(28mWL+?n:[]I3$\>,MS.c;0-bj,8J<\#;D25&fgMIJLkhDX'aW3&',)8/_S^3a%:TC!+hT<8*:>*!$\Lp/Fi<5<V:.2;OTK8[#dDS=-nDX@5e[Ua^RJ24]L4<C`4Sn[:o#C8[\!AtVB5a(pmkqS?]`>AJJ(g`niVl'n%QIkm-pNe@5)`JjW_ge>XAogF#oPA<ar21t2m.a)^@LMA<&PDjJGG28_W_j&SWO%e?h>3W7]L4uqI`[$7F4?7[KO&m"oWrH@Iuat\%qeK*6gOGD2m/Hh@8S$q>6bq!EpYP=tqpCIg@^0f50gD\C=B^dSo6tougEBs+^7RF8RC7b(G/sT\?f&ti,4(J`-M_/qO-Z]i4?dk*%`W`tKM6Ql>O.%R(]5>3-55%L?)XQX,Z%W(4&U$6gF(9^lprB]kb@?$Dq:b/ZVpV+(2lu2_5DP5#g]$O!@B8M2G&MgM*_gJV<LCP9%\b5OPe<\'d5'K[]+mA.?obJc%>+4!Z(-.)Zm/.c/-)lO?D9ThVYRpb]Z^k%VUiA46JaJCn4'A%AVkRPIl?&"';VUC"At')jEN%O8%Zn0IC<K\;t?0X#9P$CL/gs,(Ie/d0*iqZFQf6G'E',6QJVhI2s<j%s!7'?Fb2Q,Yfml\@a[0F2QWj?>PCIg%Z_Y!\Eh1oN_6),r'%Nc]L4(elqXe%;8d\dj%R"[ph!MPZ5Zi"lu"2em*@Psn3l%1hO^H8g34/CAPeNdRAON/a60()fn+C0=psMiFU'Q6Bcnd<&YBo)-mW%@7W\%SuB%\;)I)W4U_)%/i&l5<%QiRhk'Y<ksdC^;/F*9U?P.ddZ)JO0NU*eW2DMc0T1gc)`8n:0+3c:S%pI)0UcknF,G:2KgsON%g:ukeVIkgb)qEL*(>`cQFJHF9&79_"BY#oK[bti1Krs!,`c1L+/L$X$PSn%#*r%ajksiY?NMqt#B/JGC=Lum?]B4sIMsiRCdS5S%%4@(g[W"-iE-_E5a/m=CH>:k9oU8$mAYr#tZre[E7U;^NXBpUA--`o?E(1Tae_`=LV7XK?pTSaCf_cQn\YCCr``rb2T+9:]/4D>qo%d;k"PfUM07^Ns\\A[gI688SjNaU>4P2baghR!NnM@^3pT7K&n)c+QjdOU5hma*2@B&bt.ThJ:.tFaa[PLX`IZfD.I')cFTT9[@`;%@@]Gdk/k.p@8MUSe]^g$/.Z%c3F)LfJuY^D+*GuTfeRb!p4f$8bT3>:E@gq!g&2N'^+e"Ch9B6fcIB%f(.^AS:2o_CSlk2omP9"(%YN<+s_ip=qCM=JQ(V1PhQs%Vf9g$Oggn20B\N=M3\GP[GpljdLnsnqY<F]*]3kP6i3nGZYZied*J$K/q[oa\9[C(:eW+>##ImW&1%<Zp5NTH]XO3u4bVRI@>UPn6=7,m&7)I,U19iKP7[ituGXhD[ead;Xf=R/_k!o%[&(dJLCO%RZ0$NVBo01=NoU)ah"uD^aMrik1s+%*M/AH[3Hck3&Yu=HsCFlpC:mP3qdWDVU:?_IS-imd3<21dE/_1H9Y\MPBHH_K$L4rgeIEGq\K(G]j"\[VL1%h/hefKmqa-e*fhgt%bdpfC(qZ"ScarXhElQXVSJ]L'S;\=0nLdKnn$OJ3Ys-[`^Wmis6<.Wpbdr/>k)V/?+-2Uc0`:I;;k:'?G<]V%Sg/@8=^WT=W\O.I%CEUN*CGkfAGF!cGW)]5"=uD=PHtf]uE5lJqAH74;A?>]W!XnJ-&Y9^KM75Wn!P<+)UDe>t"Ep1nO7nCnHjr/<\Ed,'HL;,a+nBVp%NOp&Q+33mCZWG:28NbD!8pU#8_fgaGGq.ouYAcF'2iaF\TYb!5pH#n*h;!Rh+o:GCL\)E^"1onb3A]b;KlV2]@WP$#*JMf$&$13P%4nq"](&>Am+g?,nSh'/?DJ^0_icfnOpD6:TdF"rF\Xs1?NN#3;YtbVKjin\#D@Ou)('U&/od_(ha>NUrqYTINGAKkge'M!!=RG,3%-+VL&7tf.I]K!9-Mb7jS]*`$E8bA>=MNs*_/,`d<minQf%:V[&(fjH!'ZSXB8F7(![0e:;EP:m_GI,7*%_621b1b>s`q@61Y2p_:%:upHCb<9$XbYRiRA?i([\];/)`]/reV\n#)07S/l7<da"G3:LPW.(r^l8a?Q/(C=58+PA2cdQB/rK(V?pP;I"dSD<rm,223pbCe&%R.Z(cV<.=C0;]S\#@W$VQ8dZLI(F_)l1G\goE\t(H7R1.pYQb.f#o]]PFfs)^Y%M%Ft&HB=re[q=$PD2m!?B/5(t&X>)2Lhf5Hu)%7<R6`5Fd#sAR(Y8M&#41CrZ=V<Z'\Qo&5rX/Pi!!atCCK(PMO[oqV.+CE9kF@f2;D^4!Yp5M?Ua48lkjokI`Fg?[V<K\4%(YLtsg%EG4)&`Ihg`K(+ZDkHDQYs"4/IT1_#mnZdRmJNkGjIl,i(I:lfp+[i0/I+`iF@9i0Vq[#K541R'=7ur.I\p$45.+NaP@<etNQd<Z'%nA_8lhEBWI;n/9cq"#2Z^*u@8^HRZpC"kd5^#,[BWJ?h,@m0jZQH-bsIT\C9'';<pFNVSqheoO(8109j@r":lHorUJ_k\IZO3SfT%X?f-r3e%mNDj+Hh7VG?4a8]E1>ifbNO>JcGUU*n4gq-!ZNKQP%<gi'sfdZ?c/Ti]4rjY4ao@G(,EC$)*FluLO/1PM2a7a=HC$RRW%;s7u+-C=1;@mT]b0<L8kK+mD!mk?"cK6u%>`YX0o1aKLV9\'m'\5'qJ>/=\@nCd"t'<UG4GN5Y#>YWg)GH@4<].lK']!Dn?f#"/D%hV9"qrf5'=fKfMoh)mRDe4*VeDCltEmI&!'T[u60ILP5b]#`,pnljpSKOu*2!53n:Yo7,]L$9R12H=LCcD$u+fol937T#pm+^83q%L[<5jmm(3HpSV>X:!,8UN4^r=)*BAfE!NF&"Pf"2R2]$,81s*\>*YY`amcpBm.=?L2QdQP&:D,R2=!RVIK\g(V&j!AGLf$b^OM:'%7r6G7m\,0[;D66*@l71nOU4DOH1g#r^[^RDGW_ec]l+,Wp1E52^GKRu(s4kW.J^e%9eO@?_u:+upZLgX8mUK+-ND`jcDFUh);A.Q%*r5L@<LIWcdpmZ8k\Q.<Ejc^P<_mA*(#'i+8rO/p*mYir0n;r):)F/e2$S#A*g/6`S@G;bEd]<m!pgg-GZ&t\C_cV4ns5iA!5$5N%:8q\\,mpmB%ZQD^m2Q9hL(Fd4!)AKYR2Q5grRd1QC-GQ1@+Q72N\^/BleCJ;5TYp]of[3_:V%/H.`s]Q,26Rbno`L"bu^.5\'fu"%S$seQ<0?RW($1p$8R,4l50S"*[K><[MXn1R/q-Sn^/<Fd(13;E7/b7gMXn00eB6PZF3c\7.A=S[\pb9C[?00?A*a!9(s01Yge_uj%^\Mn;Kt;a)Gh[DFlSgQ`Y%'&Ql#lsec4/='Y2@aa:^a8g2n>qqcg:9dFo<Z!/?6bHS9=cW1[L5/d2[<-o_1gUokW0*5&"<;ao4sN%s0@0dIZpi/c)J2%\pfiU26?pNf=HEp-\T7?J@^2nX86t!YFJMBDmIDd4!ns=`7a1OqO*/5\a'%ELm$_sIOC(H)li3_=hcXS"4_41%r?h)4gUR+gW9ZCqQ82)r^A29qkH4&_H5T$>:0*Eof".<F@Ra*jf5JNf]EgUt[HprGDfSjm$'C;)UW!/dT2OXX2a`h^Uq2#=X87h0%Q]oqlS)eMt<LAR%*_oVbDq'aWXs`g1V0+R&)uKV>Fo<X+]$/>^='`SFg8"H;PLSXY)YYpOF*5@2INs2B5TQp(W35%=?7&*^ljqY>%Rk='%j__V[\pi$a*3/;Er7HV(iOJ6s1In:4a?O0F`6\hUqMcTK:aWl>>XP[[2]k!8[BAE:W98laop]4:DoR*N-^:GP%X,@bhe].a%g0M*AlHEVeY8r<9=7mLMq07M&IOBWcAuY)TRE_GlVXrF4drCAKl8MquVX\g-ArD"!BjJKq<W2'Za4FV(Sm7=pra9uNlIQtjMjQ*Y%Bl[4g::\h8eFf;9eSgZVrZlXb-<KjZ8]=G$f5G\0^F=H2]#Qp-XQjHh_Tc*4YG9rpcFSI7GB,\7j9]:eUorTA]Eb@copa/B_E52^%\pfh\6Y#/GX01@,;FX[bL+FPsXQqgu@ag4;4`OcBao9)Xkh6^%oc(/FeV"Z!@9pXie@[_(,kfA3Fo<Wt.7A1$=4aWM*9%[Nnggnn%HlB%d]LE]]=q];lAD"0Gjkm#h*?R!mg$q69>MNql['m(HleT]LX3Nd\D<aJ^%l5lURTZ".`M9VF4^4't`4k',2j_ki](P(&Me.r4%q%dG@p:$*D0=r0)T"Wud?!]Oko&Xp/P+C_+?_@8,ln1DGY^Z-#_N"4=Q]J>P5J-sk>]T.kDcsBpgq&g<]RG8V\\7P!EAFJ1r1+8q%rbF04E;i?lH#iF[OZ[o9'mRo7s*a[04?n&^3I*eZ^F.@Bh)gh5\GG/ro(q=3qoS/rrKkX\]:2=4]CV(bP'<8LX;rD_Z$Gd4a7\'G%nW0kdmiMM?nFQ)jVn_'_Vk4F`?Q@bpl0G)pjgjIXcYfhoWjf;1rnRLJe'J&?HKEAun^bugQbWLZgq+pMl;LLIm;9!jh0F,1b+G$o%bB46t4EkH<eZI)2E:uN2-0mW(p9qMZr9rsRQ&#B'G`;"g856:I04"JLTNPScaT%2k5XIWUHu4*+d\Y1r,8U_(_b^#Co'X?ZT<4OT%<a'QM^UTX-YEQ"gP+AL(G*:UX^HO^X;8;m^Oe`m8qK2],egAtB4@Lu][r2/RFo::Mf8G0M*m/:m[j5oo="\tY]JHf+XD]+9eg;(%%M6n5*GCDhpba29mF5t)pQclG!mn`UW+NX6tr9#7<eU4a:\TRTT/DCo<[eU8&Bf7ZXn>`'+DJ&q3[2Sf)qVg&BO6cOI]Qgc3F(==`%cK^t4GJ3p"phK!Zg>DZ'NSZ7CLH,GiN#0"]S_bXNo1JQ<#Q/_&+5u5)3W7DV<:DsL>n@_#\T=@:IQbC$JA6!k?aoo\phO6urSl,R%qQ8p6n%a0SAQPLR]<V>'qlM^.\rs8^5[Pl\='%&r5?p/irZSuJk/&G?LMIjf+$=ff>eto?1Nm?-DuT"oY;b(oRm@\d_>aB"$YqHF%2>bS+YH<SfZbLm7B=#&[rWtT"Nt/US12PcqQp<R>p$>@nps]99R=i6"qfh.7_d,CY?ABjHr]eqqs6JK8GtWT`k`WsjIIunU2R&."%#9G8^AuGVm+5sCVWS?e)e"]+ohqFLt)@D2?f'Zi!8cL<qksbU!h1pFVQ0^u2eJIu;XSoL(\_Q^;b`.8OFD[&6L1=+oZ1Qb53dnJu%[mkMpl4fusBBo1n'"TZe?,!OkrRok^n$YG^pV1!`HN!%2hCEg1n+1J],d6UKr3s.UmG_OLfH7JuR3&_ZG,IP5_QeCT05:I5@upMk%=;qguZUTFjJ*QhVrlHhmPOnFE)h2FCi6q(?%efS!96],I0ID,F)o'Se!*koi!Ut;_m>o"_rJa&)++R]70])fSo#BD6V^!75G5YZ0%MjJWhnSJ!"?!kSB,$4Q]2mL,6^&JSFLq?t!Ga,BY><c3Jf"V*nF3?_Fq:^HsoDX7:&Fa[PNHXlbF5QMkr]e#%E<3bgH#<@7mKVJF%%?s(sWIRonq6Nj@otMF^f(&;&XP^.,UQd!P_u@/AVaUOes7"849',NqQ"nQ+$?V'+>[B@uo!RAk]DcZ^ZAmVKl8S1b<I"c9DC*8W%q`rj'HWHthIV8Q6Qg5_tmf=EB#I&?95:(GEX*FNpC5k@UVhZiV-'g+->)iuOo8nu-mM\3_L4(4W@d?8@P`YE+p.lE-J[?Q.P5fOn%cfF-/d7rNrGhk,_fYs\f:J;";?Z#Gq%R+6Fp@eD9eAFEJ$0@YK7;3+-V"8<<0V&*bh(rj^;92B@DeTH+%X7E#3oHIDb@g:6]b@n9%=;-S#a/@P\It'FKhri>F`gq8I;dZd]`VbI-4S]JBo_@"oQg[Y3XS2ZLgr3Eep#kosQ^6Ns_S]3i>'!*EncpGTmJe?s8'EJ!X+^lA%CQQ'BF!jr`q<!_cak"bljkbmE3;+o>E4uI#4T3!=L?R[KqWRLh;?B`p95$)5^Z1d";RDH2o_3A!5pg[sNQ-sCe4,D/<O*NQ'B%78%H?TfS*b]!f^K=jt"\Q-0AWg@)rlDEG%j*'$&,/j/<IJ2'cjuo>X[M3`QA(<#>J9n-lS0>umFUEYBPiBo97%o!Zm8qiZ<^]tI&pVd%S?S2f9;2o8ilc_4j";Z!#0MWYitttj$YJsuB,[`C(g9NrQZ7pDgr8G2]A^dASc)XI>4$FN=pOTFgG&rAh;c3Z*c%]q]4C+(V+6Z,%I-&c-jfpslRcL7(;u0FJk,7W0f\MIm4]cf6l,hY-AHueQQoNTc7t5r-'`E1SBCsf.jnMmu4cc$rgAMrgotteAf?[<,O1tOtJ),Ml%A^&j+n3&sF]DGH<]:XR@J,L#Q]mCIfICpQup"-0f?iE*7gA^u)&(+3;m!fi>$&"2.=4`#cQ8=@RO:sA^BRYk!"'2!aT_U2!N9=VY%J`aFt1Z6S$#rKCcS<9lk.a\)/EMg3#=n5[R3&A%.e4H0]qI5RPo39-No]rgbN=ffR2?uqpnn>u<T"eU(@n)I'rhHZE5[JnBQOEQ-%n)Tg6rN1QF4Z_p'"]((id!cP,[T2rK%j1(irEo.R9UkGTH4Bk"@6O;3dhTH7HE[5_cP*m4TS!A+nih@BUpo7Rrt;HNBG\fQ$#2?J%P]p1-iVk=t6Kps[oM4!45$e&-@sd<i@WM4ZciA:iIc%)$2EkF'\p<bmf*(Q:$5KOSEr3lNP2q<I`?48C<.]tA\o)&7YQ+&`YH"%u%?S'_frh$=5^CKsu+!1IZl//84NS_Y2f(HXhqX!G+f:Ct#rMTPmhp7d!pO4.N+8oHUYdAQOanFQ&F`DJPn*A$mV2_E1q1rQtjt-L3%*r^:roA.^Dl:%"dZt;fB,d+dE\pa)G^CN9[4o"XFoo5a=ou3uroD7V6O2&@&E-(p%/!@\;=:=Vm>kBuOkDbu21q16T3W8aDqj[U2%]3!_Gn%!@4^Ou<.#NXPQa=d5]nqPnEZFkMHLS"qS]0p:'b80EN6("4E]"M"ED#_*Bf?X@g*;B0mgQ,^-Ir'TsF`$I-V0gh&IXJf\%>M3^cIsH/%`O5'W`P2UISfU+Gq<IgIEqt@VkP=lI;QQb]?Rj,$[eiOSb(CqPM/U:Cp!:PW>t8m*?qD</23G9A,5LOJInEcslP;^`%7>34IF"GfVQT%Ij^@Cc4s&9fhIJI\l$\`c8'T"uPk<?Z21VIE#U&"Ljs'aa__dImgs'aCU_jbB_rrIW2rg*M\DqgoVS(9/N:D^fS%cW9_-rNTf2iD]_Qs.Kt<ib>`K)6P:X'&D6r!?'mXPcj>CX,l5CJ(hV$Hs2;jrKD,;\p($_^lS3/K<JfTf\='/6Ba!KaSc;"]6Y8q%N'Fl-]g&,t[ucR:dV5L@OA:d8V/)P\kY.S:KlLm0Y?fWks7jT"s3pf0O7rPjgq8,\q2%g&U^>S[itna2RWQHLh:]=q\]7SG%@a.f%O+.WlLKdpZHus!#p?TKY:Y26:3qMgB^HOi5QhG,3cEH=gG2Hi)'7-,E\V-s>]NXQ.H*N26k\gC1%H?i7/RcD#pqAu*L8#nG;B[5;%d'3-Wrfkg&@^Sh_V=n_ImIaN*E:#<kIe\'Yer(IXmbLu,3.Bp1JF\^Jm^JAYe)>)Gn&h0-&1O<FbO;9]8."%2L^U,78."PKs!CpJ%G!0e1O">W0>MtU<bg;@E_[r4l\)%goZrO%a,)+XG<I!o]pKJ!.jlN,85I?>=6OL$pr9\r^kPCn9jh@;s.LfpC;)>]W+DBomC9sBu%R^r"]o#cqJ2l2GGZU:b+)dB1lFQ_cQ<:-J?ctOSh^rs?j8<^L]^%1M*Sl!eG?GSELf^nQ`m2g3Eqs_\5pm3VH6fo%>YgM.5$AagZ%O@^o-<-!lMaXE]V0a-&pdf7*:<AAT'?.#U`c8]s71$J2FPc)i,O4X@JR<nMN]@:LC0N%*pFkN,XgW4BDP\$4dg8Lp(e'4%rEcY";%jQ3"T.OQ[lERp,R&L0NSXMGdL/hWsc;.eJTdRAY,Hl)gQqgQ8s(j[\G\k#W!cSpRdWuK]B?a5f<Z/+=(\s32QNU5ZXKrpJCfHe*.%m!BdjoSUW.&;6;8Q1[m8@S5;;8nu]!-*@/k0$u^S3&0[[RCapJeEo=V_GA!/I5gOUEEJDJrKd`=FEncu*UhY%iYc6M@lM*5DDTk8%QmEObo\[iTHc\T*BtocV&#R\1acb\ur6bPh/3+Z-Iks`8'AE@JQFtJ%ruRIGpZ6,gqcIm3086F'.E228=gY<RLC]F?bWjlI:KsR%%F$)*PD&^o!(C>8H?%$_Y4W01PhnMUnl70td5\<ja)AKG\mcNZhlZghL2JqI,_:o/HA1r4/\*pN*A$WjsUI/FH]*T4Splf2j,bP<@%[m8::/ZgVM[&'uQbOW3eO1u2SBn(O*EoZ*-d13h2rXBU^pgG'TX`RZYD/WcF0C8Z[lc:a_:AFipl!<YXJF;UfXeUqXn'bKDn]6pm%T>/*+KAu9XrD3G7%Gq-Brc'SsUAlP=J+2?q=\;u5jGLhSV#YW,TsonrQdW:<_,5.4mFLsjT/Zf+qt]^4U\Dh/[r_YDQOa;HmbV3[%YXE?cqR.3,<rH]p\%]9MV_q:/^%EUtgImj8qu?]eIs\s"J*2:^o$.3t@5$SjI-Dq>.,XOor*Smf5Q']<s'<d6*\@9g3a):bI6?q/%:!kV`,$T)1hG<^R?95Gqda+u">T37?,jX')dYu$;gVJ^F#/,M4kF_F=opV`-[AB3C7fLM*+tJPbbGoA-9='(I1cUXBlSk[?Ke1LG%BpRd4GcZ'_8m%W`97U!e%g`eKVceu>BpLC=ocgJ.)X0o"1/H)iW:qdBW@o7o,("L7N"%==pb%^QXN@JO$'<Ald3E3eaf6&;]I[ea%b+r.np>;/6/?9]->Z.BM=4toXN4sBdLU!0DU+C@RdN!Tm8<UOka/YLECZUnmB\HQof9MnPeSgn>etR7\'-hd$dCLgi(FlHnmRsfG%JHZOsBE!E\e2r_BO_ChT%1JOZr@1O22O;iaMDHnY^PGJ+^[/R.>nI&TBiY%i;2e#6]A.j;qi/];+o"hKWL]fH)U)d,eNo/iJ^PYZ%)-2oe["<Fhd's_O#>!l)E`e1:2m;0^4lV@!-DX0P,"W,s>nB&N<<X<V>02&B;<:5]&RN0<&N:0ekfANn29W%LRATu)/oCI.ekbf8%XY"BQq0Do,dANhk)`Oqgq02DOkPb.qk)i9&DYi7)q@7sP:XgOsZshpXq.6_i%ald^#bJ?h?A'%^;R]i+rk&2e>IbZT)>p(rrj8]*%V.`j'VYK"@s/;bO/Vnnji*Zfn.p5qf$VH?4&)@>Aj5j&,'S3R2!WZN(rj><43C'Bn"V"h8r@1V=gm#%((;X@UNX56/FO&c\kfWR(%PL1C#Z3%a^rMli4^-S`jGa\6r,fp/J:QEJ/&T+Ss5=;d\rfG0VDj'[8N;6cKQQ=+SYR59"krksA@`FMq%ItaopP)n_I[6k\'>5!f%<$ergGECCLFQRQ3MY]In7gN-Y/P:*.4He6t%`n@""$5Zjpf6f"euqdA>Ms^Y\&I7=e=XoOK_U]!OK7?MVfX`Z0e3Q%S3Cj4J]jY[%-NThPBpCWi8ffF]g_hA3qK:n=\H8)n#pf:B"Y?E[`SSdsTBEd6bSUJ60uumQ/!u<k6WqiRr028Kq9($2C?D4YgE_dbKF9"Q)SDC8%3$`MirGKU\*_GXSZ.s81NL.Fi7G25HAHf+Ea2,N\1oMUnF&^",Y_Sj][,_<T'/%J*1$:8B5rc9$l#N-E<dELkb)UBFr.Y9ci33Lh%n\,tG#duO?$]@/LQ$ppM(mm8>O0U5Zarp9eM@sM/8<_55ECo)F_&K5O##@q@_uSYY]j?@LrqK",%0njeBt<I?!Mk=@^^)DtDXcH5%EX;#3(k:'o9/u0b/Vc"3j0(])6edD;^=g\<a@uaujn_56%kZiQD<#o@**35LH2eTRF6o%;;trH_aI`DA(t^CKXZV5:1X]8%iACo>%gib?&MP>WRBs>gbMl/C^+Ml%7&e+j@^5'V'7?nWL%DJji>k+0SL?B)*S)V<[(G9L5]@oJ2IV&F#9J_-B'6pD[Lq/tX9EG_d+Bb!$%bNmhV$Y1,;#8YF4bD?4DRWkMbpbLk_<N2&fs5lf2iKr4KN5!M]ibr(5=U.4?MODTo#8n)f3+\@b?O"\(J*.:mQ;XW2^pF*_iF2lH%s1okA<2JWXn4_b/p9,1=EbSi);C"[E,G#$Lr*@,/>_YK\E+ZYU^@K4iKC1%?*"gN$<ci&=U>Wa^Uk(U1<=LTK=u3Vf:QRk)qrU\h%/;%>!jaZF.@U@t@]_hjZ1b!4MbPiQYQ(p.h^_8@,S@?KrB_lk+m&TS#_>BosjUX[I94tK'cLKL$nhXu"*c5-gV/a%aN4Y7gj2gi]%G:6)iX'OuNVP.f/=Q='9=k:sbqO<Tc"AU(%8p&`$o,L(d=$*MqaQkZQTV,B(DfA^S4G:9u\5cDb)J(>Z5X56Gg7-=mh,7$q1>Ah&%F,O\4bThcO.kR<$Gc2-(QI4q"Ur\tqbH%*.MD,#'"SO15S\:/`[n*hTm.I'k?ko[MGLdKhSWV@ZCTPR6&_[_@*^_I1%_-K)]WO&K%n1j(G="lc)#8SQ\(,jSCI)Gn@(+%(O<LV;smcCO-A]-]"L)gLpa0J1&17E8_Ub5-pFRP2k(jM9d0;5$u&."OF6Dlr-`Y8]3584Y<%SH@cRaW'!W:TuG[R8Q;LPX0sn.3pam"*J<+;##%(;1=$jfKa6r1Ct11-7KY/2/ad;Sd!G\Ab,'[GU^esM2MY(a0M-[!?t>_NE+3^%'8<^tP:-eNNJ\8o;ALK,"[?Ym440FK8;3<87&n?,ihqNu!THrATL:7PJOip;LfD0C89lK,8kYufTFe8`W"cV=>\0ju8$Wgh=eS_/%&LnN(9ViG%.TM#q/8GZZJiP2I(/ZMoQ%G/kW>*Rr-'b0%!=;`J@R?mm-</-[d1gkK,sngPE%EQ*.UY6/e-iAs<l6Ac$:l:>(1U5W%+=:+f4P+jj`%`)0m>[f>E0j\X'2f#.XiN"[W^$TP-b1C#MAT6&0d9WE;d,NB<Y`ch#$U,nVIlQTZjQG]$&W4ZKu,h[ZjPqseW"G-%a.).TTiD+"[)uiEWraWTas1K63XMN\6gqhZTN-G=AQlU"<Wu01Pt*SR$UTQai<lqaT?5Fep;9mb<Wsbq.Z4V8$5h5Ah+4ABY`2'd%OXe^s<bW50.Mt5f9.!Y^b!`6\_PCp[?0$:VRTu435I/F=p;7_7mH/u=r,k81KLa1:RFr:nIub:hh?:biKoP,B'Fah1AR>4EijU80%)j8)["U'i58>FOu@a8=P,VnkYUtB15L<A4!`b;;q,Q)5jGS)*e,Q4+NE-i*Hk,B_CTL/+?V$"T76XV#T.:WI<jg;o1(+\T(Ks^q+%"'j$RJqD?GBr(usTt8Hs.=29=$%,nX;NgQ^],+mUQKQY5H`ShTl3m87J2F4D#ReJ=n/d%F-:hPBKh<=9I3sno7?7f"a(8ftO?G]<%rb+d'i.5ZAmN$B[*_Dft7)[su<*.YBAiWAV8h,(A4i.C-^S7Z2#tQ[-b@#_/%L`PS&4d=RSlVp3JZB)%W9IKY3c5Hed*l%Hp;;Lk%;fSb.Q2;CF/-pVNb7\!0Z9"]&Sg<g3]"ij;6HM+c`ck2H.d=$iDY,!SV=<c5<"A@jNG8NKr">>R/:t_9gQNnSGbMPUjcG@k0%<:e%R0*A]ne\1qr4YK&#Sf<,rQJWU-BEIRKR]V?@Z6%e&48uu:#?-AO;S$CgH@>f`b9Z\)?&!b$hrL].9\nO)[d-##T"P;j]L4:[6K\O%@'Q8]"ZRo?._l'f;ZZm/RL6"JXCWm6lNI]B>hqDk=:ld+#=T(#\m]P@V,(eg(csu6aV)c8qb'7WhWf>"@098XiOOqPOT?iHd"$b`%Qa00f%62b6;Gch"LXck=S=r*6Ut\*76]j5@W&>U,kn1qec(FIIRYX(f-aAN,!TD\!I0[\DXYCE5+E'XN72(eP`'gC<ckY2MkfOQL%Q]cl#U`c(MV!u7r;DA)pUo@X1,0H)Peg(W*T(mF]$:7jCTnjqW1^MH[ag_giN)$KFaPJ$EgB1SW(A9L//f6D?5'SJ+S()i*S>YW)%+EAP<K?'^f*-]@=Lh2VCdZ]EcI96UO?lNVef9>))0`ZGD'dFG3HXRji*eHc'l>P>&VC9ZR,UfpP:H/WSKdEd""4M:Y]p7MbdA0KH%D^Ad+9\+SoY_a_!D@eP'>)]COe;DMN(*g.8r*GXkZ`5#\ho]mYN*USig+:n=QKN_2FVU%E!!Q790HiCs.EF?j1s#j<D$En(K5%ZN%8=>6RQQ&ibJIG9NTk?dq.1;N+1(+]!$%31I$3LR0/;uBHZ7m0pd]<iNhHD?RAMAqALe*qbk`3K`o$!1N(faR(U^RHm<qc+$OAJ6B%?NEf'=^ktT\\*e'@V-dX381i>-2DsVc>nENX!T0+nFYn+VT0o,fn[i^,36sW7*_N-9[51Yj:$Jjb:GZ[UCqSo.rNF2HX@O^cMR_6%7&XeYNAh\m:ureG4>V<i&n;RCI*Kr0B']DR==*+?cYHET-p<J"VIoo;oZW4Nr_caATP&e>Bgep-5OYm4#fsNIT%-Qb.V6#jd^+H,%HD[('B,77bnOQ\+AXK+qo%N2K>mcZ>F%bZsapYO,?mJ2:-?O&8\Ij]:EY^>PB-'X.X>&_:84_ECa;HP#HGEB.O#Rc@Ln*Gd&Qb[e%$o-`Y_PO>fT^'4i`EK-_WtpVH\WpJZ98Y(1Q2ZW?Er08g>dnlo&A=;4j%F)jae^g2?V8],,e:UQAl*e&jYkaqftK<OVIld8Eg?!\%^Y#O'X6FZsb6lmpKf*sX!X9PM5;O[e;nWErr=843EBpJNW0Ik0G>uKds4lIeTrOjEea3&:<[f.^LY/'*(3CMrV*=f0H8U3oWMrNY%;KN-U"Fd1TYER>U:D5S2W29ck\:B)B*!Ci[?A,"I@Y!KJ9`ef0LfIT?#7Q\Tc"UKUJa6t\#<->"(LcP*EaUVHAc-rZ,V>#5PM(J*%0:b<Yd9QpoTe[L-VFc`BibK39BjK-u"9\\C)OD?.#cZ3)i%cYqU!4j\`R"t)!>Bq45cVV:c1<Et=L8K/kYjN)*biRG"I'B.ih%4?%]*GD\]?`d%V%p49Y%FjE1iF^'#'Qh_rb-:QnS&ql0,&Fu9O0#aP<:AG[>8*,!@h$k<WH$nQ*huB6s_C%d;'K)in)=^oNK*"--V@t%CLm\rO&ZBg(;EiNKr<'[6uK<!h'Ib!AR^T,F=_2u-4OK:K=u8aq5RjnCaJNc&b<),n7Vqu>\;>g.*iP]dE>1I-`jI-n!.O2OsZ#h%_>+oC%_Th+KH1s?V@JRtL(93?G9rD5#"(urZMT;U0U[OS7s&sMQ"$XIG%a9;]j5DV:OMcNq10J^=L4aZR)W^"5NC,Lr#N^(bF/)`%`$e:W)d9h/(e#8TUOY'RarItML2G*hs01SSk'F+K7FXp7+iGcI()*I:Tdhe>MS<k27#Nhi!jnaOj&6SH9LbecPUK2XCHOFGfa1M)%OWoMm=\L6++&n@AkPuc%X.:D%=WosS6AR0:KZIUhL]SoVa<RKZ%L6$959/u?@1@Qs"h&CDmO(U@O?eXR-Bq%UV*nJ/H4cu.0SWK=%*d&ioUoA43S:+_/')C5U^Q]<VJgF,obs[dE;tI%d,)Z^Qb)DH`.$;K)&nM6ih+EMZj)lWCW.!547>]GjI`j.1%E@\l;T:+'jO,S!%CRm!LBf1e2b.*PmB,,dTlAKNlH-m?_!aEf?*s=K_PYGj\YnSa;=Y-efKP`Vu"neYk'r<Ca"XF@iMA^ui@^Ia/a\`P7$+`Ok41[$s%AP7;N(Cq783r6UWH(E]=%3kA3@RaZ3R)j'gO<(oF.@?W1bSR-6a,bmS[@#<C?A#qd=#S-8J<`PKY9B-4OUBA7=O)k?hi%@a<^5`G%B>3]O&0C$c-PKVW0P;V?khI:q'/19X"DfTn#oJV<!dX8FAXe2fPhH8_^cA>jTRCMimI:^jCmO5BI6!6@0pi2>%-I'1;s]=-]oaGE%%-Bg-g'2VkU9VNSa:^+e)U&pN#4m?KK/pSY.B73:`>i7!aC:0>D61_3,%<:9QrqQ7-5Q4"]3*:p(kTjlN&@!H!u=Sm!>C[-Y)XF7%FUa>P>h@\sb]QFmQa1CA1(Qo0R9N?Yjq]2*3V4A^bem$UP<%!';Kmu>gf(qQakY3TaCO^O:"1l(8jssU-M&c/2OSn!?"%]GR`r*k%(K*ui!=:+EJ-D.I@U_*JcI:L7b[CW3$Qrn78(K)t2Y5-qRlP-eFN,X_6J!Nj.bZe%?"%5!f6n4"\\5.V`#H;;TIJ2P1dW:)@fWkQ%Ip3/o#K<RANi<@:SnAM4``fqRb#=XqcTEpQX9$ZJ9P>,l*DTkZr=J%N6'fu4Cn.NXCo+m!#`M="LgUIDeT.J\97OZAWsbI[0KLZ@%Rt<MYH4l$X`O&3""oP!k%2gDk+Qq=="%g@[49?2L2N&%7Y9aDF%dhAie`7hSAU2*5O?j$?,EbSTPr3$06m.,e0]Au>]qB,"c#`G#%1%BQ2o"miF8B8LY:cp4jJ;-RoNa4ZT;S'`&5g[*^pcFUhn96DTiahQ`&E6T>&-Pp&cmBK23OUr*&/:3K"@X.85qoI)[+6]1!QItm%Muhq7LF,PX&].FBKOLb`(1Sd!&EZbGU.[D[KRGk0I7#7P8R`ja+T-:77>%iV'JL,NT_H)I;tG+I1:oO"fC)I4V)I&Z,:,t.+p6f,%MLD"++Ma6#Vhr8/VkjdI=bO!fA2':"+q/$*llD^!Ob!M+=O/)l%A1'4#sieV.i:(S+6T:0nOL-ifV:_;lB+E0GP"S3i7/I476pc[%<@++c6E?7k:)H#S;ANq$PW8g-:FLP0*5ks56+YEgcL1cG-9hVC>\.I#9Ll=>&Q@2+>knb.iaHS@hXXb;2TdgdklR/lJ7)B8G$e!c%"`>fpVuafTZX?sfjZ'aK#o*`Y-1ur^%").GlN%j4>m$7GHr+?m4tVpF'csl8Ac<]jGZQFc*lB%mOB%5d/IBNsZ0[#\/+o0-I*GMK%46Y)Ufb'kR.S1?55R+P%*9mMSV8&'CFE@A^c^M]p]].<S6?k']\o'B81cmp^-=Bs[6"^?ALoc,_^47K)Rt:PBK-LZ'j+51^4BNB+%l4jJiM%cSTYFf-sjG.`[j\f=5I.ZBC84o=.`c3,j`_8!m_(_9hHqXnSSk2ejogi5`6-KO`bTVQ7WIZ7Xel;\mZ@9l-2)'o(;l6-<%K"hiqSectUAHA%mr[2SO[OV'[Rb>;._9U;ectded^1e7Q0*cCNe"3`VMO.>_dglK@Q/hXd%4JEMBKIJ=]LpjkaTRi0&;r)8*OSMl%s$Qt3'u@[s=pB[I4F+^fSfBi$iT*$$'2G^j%'<dU3C)Qa0]@WF5)CYj/Bbs4j]*(N5QTsf6*L%p:i6jO-kBDc.(:%-Bqb8VMC=67%LsHkBPl&;KRDc#OACqTomq:AF*M[IBZGO%"CQauN7!V$a89r!aCCUcK1$-c-T%^fY#Jn%Q0[;"[,r8+<Ug0ddKSXYSP=.a[Fku-T%=[5<r/LDY&!L&UckWD^R.i:s!dj<)*I-TFP@8S30I]/i2W?]r.K[GXXiV4`hZL^>WCPB5,Nb'4fL'J"G7I&*0).cK<aj'l1fa217%4,#.J5gXKl8Tssr7^BqP:;#%XZGYiXP3b;/On)gH]7:%;c=4_T7]fe(ZP\OCn9\;HUq8=Z+Pl:6#O-,>?P`%X>Jg:Yq:h&#TRkU:%csZ5!#=q0F[H%IXPpJkC"lDUr=G@CE6%=CZ%G&iJ!k+&6<^_?@%48fA&VT"hVJl/.1]pS35r2:/*Aiu-0?q(In#_jANCYL)W92r=%N3h[A4rV<?i4*$>DdZ[YUjC'YR7'(qJu#Yd)N2\U;(VLu>)9N(E7`7`lH^EYgG5+GJ`(_;1!`k\p<1,;)Km+[c4(t8[h^3B<7Hf]%DCn=q\+"`ec>%5r>1lc0gT<*=EP!7FRbseUJKp%G0cUj'(&@eu*?i&!+uV-Bn89h:S]Z$IX,n?WV*Q[="+GTJg6YAj97n:*k/O]Z%P.kJg&sJ6NmUFI=+?RYD1p7)c^9f9j7No2TIp".Y77%JBMh-S2&47@Madnd"FU:ECAC%D5A'e;rWe'YN,r1kV]k6_D7:6CJ]a2K;%*`rj5;mLGIi]nBQF*jDHnq4?oRV6-u)g57_c2ru*/4jgS-UC#W8Lp#J"'-'!(rR91Z\fe]9Y(^%;HCuab@S=e%E,k;p9TKO(7LdJ%#l[$\`#+PV?ndDu`K3r`Yg]Fh1:f"Fpo^.I2`EPpFsjE&,C&ns1!:36YUgR-AT=B'b3`>Ni(?qflN.Q(KuF7P("%>Z]3LQ\Amm57%$PP38l%-ZmS"7XDH5,)rAPZ8D#t0_nHjU4TLDJ)/I"GnkfLMfVf_&8uC^.)P*ukF:epLFI8jH6NN&i"dg',iE\3(o'S`FPpXWW#p%"u-3c/J)ldGjE90dq=?---kJe"s;DR>N\O_-_7$NQC/==5Q`D1Wbj4]@7k]$W%t&nC^NQ`O_n@$13`@CGts2;7UA(jaTCC^l>;Sa%nH6NBpnB.!+Up=B\:*(hU=.PHCkX#[;r-4_UEF3b656hU%2)2Ed.$AgE)(k/95uSZ>apS:PO"b%S"bIuo8]i@@0%XFHQbBuZBV$!%)8mBTY`d:cYmr"o=,p(/N&*?%E+gk=?43YZ(uZUSRLF#d8i.u9JOo!>,hkg\G02sQoqpY,7(P7CV1B*GGpXJ8Yh(tNcU;@^93$6Y%Y_30ika`ce;P'n5O7t&6.qY*ds*5NpoYn/o+L-4VhDI;6_*c.uXC_l`96E[l.n!9C2sZY!D2Nj/PERHNZi[AA^F+QY)]0-j:QcJu%0`U?6,0>DT*/2mXn$'Qk^-]i4#kZ(\26CVMB#l+"if[%SJNT9tie5OE)5[<8,c19]O[q'U.1bW(`ZXo4hHYt90NdPp,:J5_(s([$%&a680k8VF6YC]]KKJ*`5#TtX^;J(ak_<'G;.H\0@U8S1L<d<[L#a>\+@uT[1!C<2nKM^M4"$u&Ne=B#F"aG^G,uR-$^d'_Q`Wd4=%1D4+";a+>&5Z2^&P6ForYGVc1fH>"=q,.G.k2iJ!Oea,e8AN"I1!M_3>VS"_K\gd1r#<4WaBLs0116mhD+[e#6ZN1riDto##bZC'%@XoS*NT3RfZ*jpE?&DQnk1_!9Pj"FPka2H=G5.#[FiYC6faD:iCk,VjQ-kpI#8#%sMNF(%TO9h3K,DK+?g&J#SXFSH\S)Rj'%S&@%jFS_FE`lq7=\#__N1k_hKG>Kel!KgZ.*O,R^]D@n$Q))&J,!Zp1oa*MM$UC!&E-ciFBC7PhAuh'KAp/k6pU>U,7oLWqC]t$GAWUt%N=$7&(Z-FXWmZ*M!T-A$=Gu.d;c#5U,%)HP.QN4FZ5%^'hH;+HD,.HFKK?:do?uqs"`f.H.2lh<_40e)=1utI=bQO''."40b;c_n%-ZhpPGqE9X_2&E0lU%s.WVdE(&)@5@Kk^m1"[$CN*I7KZ)M!<serCk;EJR1HLnLiDY6nM\5%DJX;0cO4Kha9#_P+peP&Fb-1iu>i%Ag`3:/L\RqL/rVRrVMSs[Xab0(_$Ak#4\?U@JHt/N&e+A.33pIK%gbI._n6MNuGr?UV]h$)rn3P_B'$i^W+c#k"mnq49^KV4Xgh<%OoBu"Zl([[<NIAD"72TF3P=0'"EPo/S0^@Eg5+pD8;:"21gpCRT^Hf+`KXE<L,]l8d-j\X2F7ao-asq,Zm,j_1]`c(EkZ<_'Br"`%'PTi+BH'&9g1lo(/HA=.la*[mm&t[=L=1M?6*e\PV[]Bp3WGg39$#ro:KrPk)&;+9i?SMYna6i;<Y11J]`SSkB/CSDI;<tqV@cN+%JML$gI/,MP1T-K]ZYgPPeMWu`*b[(\-hDB`8b1*n00ZaWP"Q9[_=1UXdt:`#`j=C1;])JC;O\5<B#eu"C%A<aaV-A%/2923djb\j%Ninh#UqpiqZms2^%c@<)=b+0ckVMqV9?73HJ;G)kN:-l6Aa'ab9r#`Is%Z->&jK&bjf4-6i\_S<=U$UX2bX"eEt\u_Ok)cD67$$"%S;1=99+tJ6g]QW;'-)BKWU5olcV[qc#kRUGoi89X,o@gOh-,K[3AX!MOV`Ud`>Qeq0BTEk@-A;Qa-`8>fWU47NNjs8=3U9i'SMTF%2SfYJ_1.1P=t59fF:_q2qK^iP.58Z"!Kkr8p#%O$#HWXLXf<dr$/R/iSM@<(`9Jg=@mrsc0ck+:<UlF"6@/h<I"QrM8J?A!L(4:j%0nublp($7dH-YCG.B.p?rtf9R4&-OOQ`a@;a&J^W6OtuMIfiDaK1p2NcM`)QK/&->LbY]G.=9^%@=ajbhJ0qJA!U^L>t1-q7*WN7%7phtl94`qc@9GoO4Z\34UB:_6B;mnm3X0qJ0ca(h7E64n%gi?702k`$C$u7gj(gAO)X>IP4rtKLLL<"h.N9T(hX6_L"e]mUC"+VB%XWel?X():C)#?u^=-o*08MSKRUqP5sBH7sO7g4\4K5=mQaCg(CKFD7I%1pF'4c09'O_r@*K6;k*X1-\:=@RV96&_L_hXmC:<baFF%9M4c@Yqe4&/1XOCVI)Y5*7rj"%Do\2KCN%S@Z4rq^$DcSlQrU!2RTlC29s"jS'7o=Xqg(S!,YILHPm6dQ[uF*1)Pt2/,*qA1lifk%$p<,)1)-hT$"&;,YdSJ\7J&>hAd%E*iu)k*B%HAB_Gt\,L$Vs6h^)5s+n5D;)f_t;,9B2RS1H%N<oh\@>%-JZi;!JJ/:W27it%5*%r6TM"q0e7+105D!8KP%_8gY/fI[RA#pc[d3.7(\dV%Sh3*5=pqj0okHr"^It*'-lZ`j"kB/='BUJ@`V8+1:*VYm>$AU@/`?#8Vba%FN2JKgSGO[+2[dc?;PN>;^-k0oEQWqr;d:"J&$a%#@h(G>CJc+QGE1:84+nq:#Hl*S-/d4<^ulYY^-N423,E2SM70b\"_bYK_bTI%"hrl'`:qFm$@Mm#`M2[!U*[jo=WYH81A8t5m+<@s0-m"E7uT(1!T_3T&3_0<9XdkEbX5d;1<:Qb,e9&]!C;$LY;5108F1bKNmps%%ntm=YdsSrD#"+UC^g\%h!CGu5R,frJ?Ij(-'0J".n8,m8UY$^/0K^l&+O)e)0R!]"X7:9jS2@"@j:21,Bfa=CTWKsuc_.bhOWb&"%>Z:5.S"t37j_,8ZM\rBpIL[Hn4.pFh(+!<dE*nE_'^VF`R:9j+)oPjDo9WJ&'<*^e[u=1P,FWMA#hS3`\gSPfpX1UV^8e"T%+A8V%m\=^1Z9<g'[SR/@`WDR6(n]fFg`</B*o2o@bsJ3&%!emG8u8<GL9UbS'I2?H"!iN9JG<j[04L$+h!A^*'LOtT^g[HNIUMVI9s5>p%rh>&sXA25q&$seCFkj!i7,Re9jHM9PVc/[!bk?iAWb0O67NdhKUES;LH8o[!ON`%%kZhM]4954s&7eH?(.&B1p08.NLh6YcH"0+d%@2]4L@-B=Y5?,f.MCB.Sp&i:.o4'K8$_Zt$MPf-7.*@L8:oof0[m51D_`DcoImRJ%4>h:VaK\Xr=)\]AF<j8LZr'+(*7agu&2end%ArN>dA)jK\Y%CBGK!BaH0MNK8+2XmNSZX\q!_1V#Ca];ENkq%-#[toS_:8#n@;,HFS[2K'8!"Z/k8ktOWMgM]g-&lY*#p1FHGiZU%>deuK#hqKW1Ib,A"kJY:%#.UpH,+OgJ=tsE+e5c$5\g(Q0Jn0GcIo(/L7ji.1K:c0)GD`T#%PiS/rnX=FU=&h;c_Th5%Q[iG@BhA%eSC$R[X/odm@FnZaqF*3NC:[.Mf)d6[$gi"6'*;D:;VVe);RD<1H-.;j,/X`=@Aa^J:ZMuh$4D?i2$Iij[M7o6ZJ7D#ih#8O_VmN%PDlg%P2W@:,`e40n0L:o!=S`CMrE\!0p5+/fVpkl!`jdQGpYuPe3ut-U87Kco12HsZ7_##FAYq-g`JpbMiggB^#u,49e!>Y/Q+/E%1db#ia;E0`CCTKo/oY"L\NrVm[2:sYE)'*8E=pLu0f?gq&YB*'6CkCGm8:_d&`:)ql2*)J_o2qV-\K-C/.`JQnWH3=CLt'ETi6n_%]>u7->s\mk6c:sF<mZ_M/-FWOSk#lWP+e@OOKfLuWH-!bcU&pGSIQ(H)*B',,dW\``#2UH:s04kH^H])6UX;B]V2&TJ7.Y55VPVE%+>rKQo1"\C^/^H]PZKV/(QX`,e06.k8\JUg/:ec5Pkr(dh]n]rEYNIfbZ'f[rr+r&$s3b>+moU\2/pq^p-cdm:kSO9>e#Ae:GFCt%4Kt1tW>Bl!8A%NjO:-^hiu4iT8-i_EZk/p2%L,iG#94L72*aWR;YGDK-G#e!jlF:9q,)2FIdri*aYO_EF<%'Y0R3h2i*SSPq,hXE%T[FA5l:`1g#0G5l5VCa</-[!&"u0.U7sRCZ1E,KYW#A,FP8iE!3J&q)#nqrS2Zr@P+p?4GIA[o'omt*7_M])))CY0naMG<''ASAu%^0kQ:c'K:QAV$N(ZiCM7UTP:5dVoabPbFs^Sj-=LL0akF;P9[pL.ij7b!V*KP`l=`Qa=pHZWt<m85#Zl/473a"VFq!a8iKX+M*)s%nE/$d_e,!(eW1K`@lfFN<*k>878&6-g0f4SS5^#?'X"Jgb[`H:/4/k*D3%e^"+3MIW2Lbn6]3gdqu@O*7<qj3f`ND_/9k1;_K\r9%m-9=BfL9A&nC1W8hHGi2blKnM%JbP8V1!+Kn$FXI=lL2X%B(G1L"X[\nX$[S/:\(S74H>?K7*`787e3o"UkrPf5o?(6ZK5_r=)>f%D@s,a">&11/4LQUd!J7X9["=jfs>1"Ck,WF^7=0*Os3t$mfjC$5equ"^g]DNm9OA\?8&&$,rm;V%MUF5'sY"Pk*\\T>/>4DJMXNd%0O'-3B$4Z%%nZ6P>q/8)0eZ]Z:=SDp/#DfgIT];)"mt+g_JKTkGo_h5N4='flh5Y`.RL-'ZA>V6:qF<B@k14:W"r\&cQdn:Xd-jL%ZAJYjI!i_sO2kG`FVVFY;GnM=:*-G5V2]2AL!&u1E:Qn+c>rIV$_4lKOHYIRoMAc8/65Ik`%38H[1u,!We[XP'JIk#U423p#_3sJ%JteGD+Pus`9CIVq_7q'4/5bGpEs;QS&cWr1m:k_fd;rkQiSk4NXETq<j.Z;n7K3^M?:#BobTO:YPWW4j),i$:Lh+H0nGs"fgL>KQ%)QOVm5/VKJ)q(](T2NuLGkT?HK*YqIdK#CsBjR+$5RGY>=cpj1&K!W`:5IX[[Aq?]V&lHe-EN#64@9.eP\Q(!P$,Ou7+BO3I#%6K%;6,lP;IT[3#^_dS9KbumN7\R&]kOPS"NHOfetWp+=?2LR;-?_qYt3AW@B"jA:#]MS/-!5C5m'+hO9uGk/u8bNQVrI@9.BM)=1P^c%6<Irca.anKj;3Z\-C,)ie&-eN&G<msR!P#e(q>h4JD?8.[,KK4*$m.Ffbcs,6]7(6.0-MiQ;=f-&j?U3C+1J?C*cB<*D6KBAeZ@B%d+U46_IC"&WYA*5\7q5oMaO`(1]tio;i#?1,akSMYp7+$<1_Eh.rB3.Q.(Y"=qt#$.GV9;!kHJKV?'^Ep8.jg\Z1??AUMrL>u6a<%Rg([7ERIRfLto@fKpu[/\nQ]UWP*""L0WLDl)$a]*?jooe#Jpkh/J.d;MCT@3APlJ<lT#K2_?02V?JO+[*"i=nYT;aQ:^NVN$0_3%S*%c:jfl*,477fl(6EJf!u>dC`UKa),sD(_V@B(c]kNjn.#i.K_"acmZCWDP2pKW>DOR1XVM6t1j=&2G;o$U*5]WplQptNS9repl%8>eQ]N5+?*.Dcj#nGDbtU4XBFommMnej1lqJM"/EZ:.bfqOp/g.un&FC_>_R;Z/;U7?HO[Zg@al`<o@Ng`jTP$"c1BM\5[b]fW:@%e1k(V#f`=a0&hju7Rd4q-POqB%3h=)`Rm>UP2rb1SlR5/"$mF-fdjT>OD[F]?#?C8NNBQ(&a)!/M0#-)a@^5pa.q!B/]\[WNi$]*%:WVA><(=S?+I5L"Bc]g&W\f<r77?bV=:dVI7`(jB0(NKh6'+4H8;#u+B?V[fLRGZiB\s"+_)#Ibn?a%Y7liS-Nn6m(Ya/B1OdI9K%9GH:$.p,6K93@"UZ*JpLj:2H-msrC@S4`8//B\ms*K[P[3rma*aBnfXo3GNO^I@3!#\KKGMt)b9pLr.JHI43/E?j6+&@#2.*kI6R%:k,n:BCn+lU8t4pO?3QaE[O8r-I1J88clk0mdq(Q*Rc>]Q1b]pWs6#,W$AQ'@,ZOA(r!127&NQK#`kY6CYr2!REWhKIBC=73jPbO%=D^sjpXLJ!.X>tQdBdC<hYeY:Q1,+=0goZT0JQ^N[\-f&PK$thUncc]dBdC<OZdJ2hJG[,)TrfJa0PhK'(_X]iHaD+:YMhBb8WiF%6*08f0QXf7`bX;8e,mPN(f*(m>:=kZ=HH?6?cE*a@W,*O&q$&]U`(Bi;F#hCdpf'(%%(.Z^g&"j+0lD73PN,VLt#t0rR=;UV\:gC%OV%o,_;b,67\n%$:B"WhC=N#-7O3nJ&]nKm7'\t<&]l82-*Tia@%k]54W';((a50+1Gg:5,us%:7\kP;,Eg$aL_MNt,)Mdc0Ftu8%-hr,n,?!R?`hKS5WXH""U]:NBP/Y@q'JM6c5s0!0r4pWu=D+i^!L>R<Se*CbI-EVTPcRD!n<U1I((_uoKWu96@MO#bV9YNl)URZP%prd7pM(0!I,a]SY<anP(LmX;U->''(M&?VKY_e/XT5=Bg_/L]B6f'3DAb0>!XtXTZZ@H&>/B1^9$]u1'd0(.m72gIU<"abG>GIl>%=HNY3<[@/K8ZWM\$&:5ZJRM$<F2`sb(e4b8+uR@nJV;=!"=oYS`/8([Z6I-H/1\+HR7e](,T(]iR20D?A4<e[=HS?("Kb5SF)7sL%!>?sr*;i\S5u8IUk<VKo(jObF[ZTm6!Z>iGqKMPZ#"Tii!0I9gVHIPB%a%H9b)6-gL8PK&!b+C"dhM],d*tGFQ]dl0<2`%"$neUp%Oap]XN)GNl:;n)U:kaoW/>K:+&1krCOf[Kb)4LMV6HLg2D_PgQTe%8O*BUK--7Ms)GNHed#`(a>),B-gespXY'BR>H6M:qXZHWs_%JRk"#7p;bS([!&DQ9$[ult`h__Q=;!#2+hPb.*&:Rg!X^]1n45'Lol%<!YmIWlQU!&JZ8f=#eFV'^!=>-/r>8\[Eu`4tB^5!JJUY%8B;s&LD[`-'gCFJ--+k>)LCZ'+?Cf<-o2>Ce?kD''p9D(!+*J.i?cjgRPH1oW?!+GMd38LC'TYgC57=ZC'U\<!fTOgg&Qu99@_9c%joNP)7m:S>WZ\5)OP@S^b?7gfV/J`IacN4tOPHkl&Lj3DrEWG>/oHrt0IaD^73o9.^d;c@Mc"5EPc8`6O"^dYY;rM(JGL@U=?rZU%H!M:N]NM1pg*(U'gt/o*,u')hFpLW0m1?L`g*'jeg*,#-[?@lt`]tF+6YZkIr`*.n&`t8HL-7/@;X0apfan3#Z9)/>j8(?pofD/X%(cm\'M.$j/U[^H'&8-3;;F]Z;7[Y4^N$Q.?*)a%+E%=)lP2@E*Ajuugg^%Lg,G7RfQslC6)mXUBR&ZX$LV8d!NA0l,(AM?30aG!$%b`N#,+N>$DkhV%VHR^<XU%2Vp#D=l;&spl\AIRX%=S$)jhV+'0*A_4E"NNcU+_KfR#ih.U[3TEq#nt@@2]V;ja]bVr.bk%+-9_`1%n.hd`-nB&YX)hO9,.,KZOs]H:+>rtA;hdQW.PfEl=A3$2kWQ>_FEgm[^cJ5bG#Zc0"XQ!:-$;J%=MmE/=?@mB8cds%+jp^\1C>pr%Te^6W)d9`7R.*2X8K<GI')?L'.)PcH1NNo,+cJ8@=@-m?N'ign1"_P+!OmiN+P[-VPGk4#$Gc9[Q)mZ^VF9@"!><&@0e8GV,V,(t%3#4#c'kMC&02\2>-'Lo@dG6@1\$rQF.k!iQBa)f7g^8\=%&1R?&]VXh#30)Bkaf\<%^Ub,\q7&Q*/oUCTfd94N"ob@N+F[Q`e*(4%,W-(C0ZR@k`Anbc_pC8R)bKiE4^_)Hg2S)qKiM[s70uj3L>5a2%$[oOg?7Hk);8'#A3@Yb*u<fhX9di?X9c]t/F5LZ\6i3+AUKCq%!Xg=dls,QP,#Lj"H7R4nk_i=PnM[M<^=Y@mI51mOr[L/VrK`$0j>KE3UXL7@Mt!2!c>*->3@Pkq"g^VU:beJag(9$)>^eppr$oQC%r5rCeIYGI.5SaQ)_2;Z81D>3@j2+>!dg?F4Ej.!I"GH#QpsnjJosr-d=0[VJ5=C;?oeQ`Ic3h^'_hL$"BU?4[&hX6_MVe]WaIXrZ%Z85or4AooD(toe-^fJG>E%'2T:+#gK,##]:\jb\n'$MbQ,7NH`loe:r!15]V%#WEAb"T2r:8Wim!R[7tMf*i"#V1?K%)$$Q=<B1L%99]2QpVJ5Bk1U9.H^')P[bZfkR`LJq#[>n)N3-k-`l6q2mrTUSB1<6S3T7k9%4BZm:;od/h2F/i2E+Zu"=2U'4sgY?BbGnlX.iro%;@tOU-TMc!l]4;#`sfr]A2QC1%m^!NTUH#+1!@T.(_+>RIj0i8r^7S-f12D';$\Dn1DIj.7n=asq-tT=')"S#'E5ck,uc`U,iF>"%lquc6!F^+^'),42]>V)g9"(`+ImRR,gPW<IZh,7]SFFR,AqEqA/&j>!DY%>fjSWTWNC!3n(lT.-6l7BrUY[G<M&c[Gr/&FnLP@OI%n0c*$&jglL.VKnQ1TEqP<^Ui?+1r48C[O4?%h;;2Fne<gGTohOn&HQ>mjGt3hbSo6IQT4BBHG:H[D]\G=!>^nGXMfUE].>Pe\)?A%Ut?]@%Fm@?5=4GU%9Q?%qLQU(,,9[e3>UM;]HA<4n?-0$^X?6X!MDCQ+[lrJ-/9(JS"QsJK#<e.0`e*/n&WO1+>mk'q7ELXg>YDW%+UJ5n9qt/!-kj-;@1[9G&Kk[G\[lVL-&R(^3=V_+W>H.g@'PGk5bVLkE7Uupd!U>KS7%j@m`#7"jiMV.OP,;'\f%W.@V/mS7dH3K%]4#=7.@Z5?hP%)be\mW,LI+lS3jbCehb\KK-tSa@q3J<*N8K^dMLF_Ndhpf[Y;-MDN?9a>:N!MFl'+Qu(6JjE@Nqeh1,I6M/2]gF%;W(9lC(pqHU^Dg7lsYIc-EV)/:!(^Q?3%fV;lBfVH@^?Z]]kP6@ED3bYY71pX>7"E=3=ET.sTQ9Nc.<X-AZ!q]q3%A7rC%Ffi?,S%_rmfn%,p5Gj?Z?hC==@=#q;fI/LG5]J?dhX"!!RR$IL%D$?"Ck&H/Bm4134!3Yo+P"A`StX>^<a9W[(bONOCOUl!n^!CML-Br+tO%7;loQd1d9A)nG0,/Ok%b5U*Tb$pen?YhBeC3gK##[4)7G,aL4o$PbY-+pn'`W>,R1M/*?g84A-a1giUd)DG$Xk"V?R$&=TWOb5fU%S8sdJ<]O/R$!Pf."<D!fK%AF\aObb]D(;SD*BK002Sp%t';GmuZl&+'+[W9PXPVIP8bAm/=lZ;HjrfT=1a$C*"qr;^*S)Viesr$t%\>I+L'Fgn*[;U-fIbqLR+Nc@a"h0<#d/d0Y,_M48&ch4-JlJ_J\][7KMMd;8Kf4D'`*\1A]qb^UQ?!-[:bIYLjXPdtc>#GOP*rjG%\;I#GTl>NaX?nFr(DAHZ6$,t]&E>!gb@3kD$E4H6oLFXD#oAQ-aC:8Gk#3's,aBgJh@1Znb@3fKr%`&N*7Ff$:/L0_]mquR7eW::%M=I(P<Y3r[3B0kL-A_1]10C1q(8Fk]'B3N=aq#M'Xo0P3U`u(5OG$FN.Z_P?ZGNYCC*N??p6D$oBXCbTe<_SL"sD!`Jlrrn6HV\j%09U&6e;G(Gdk[b9<^AFIL^9jn'>`1-7/fp<F<9cKj<WE0b"2qB&5=`GZ7-nuc:N^gNtgZ/&;3usVJ2Vkfk:sb*J4]eV780\JD<;?%Cg*iEhmCO`g*EGQ&<TZhAu8[`XA]>(e:'mq"pmICbPG@0/s+%?2ROCDVRC]3:$icc2RR&FF2OB19eAi?.E2OJh@N-"Z64VA$E*B_%P2]i%;]'<,Pjt*1pI0baJ-=i\@Nq=GN.fZcd.C"ZBA9m/mjnZ\fSkcE=H>9keri=h;9o#:oNG(aU=;Oa/:hP.c8mY@(p'Orn4q*o%gXiOLWDL0?<JZ60HW#NHDQd\,*n>h\AE_HgR,-+-.+_>X>c*%$jNp/$qPphD\I^i2k9N_kQ'qije-aJZkObZ&*Y:+T`HY,[M\R5)%!57!l6n/4_%W_u92iNus=D]@JnJrp;@9s!6[I)p1:i6K<+W'cs@(m:(50c$`(`QjSk`QtE&]38SPVCCN$JL.uAWM^L9X4(d^e^h-%h8X37\^L'MYq!:d>`jnI"<['F?A(=oGrHt,%$\2EH9U[4jS?#iQ01Lgb7%M^R@srr``?aX"@lt4+Xe>%fiA3n1a=5p=c$Ek3]DS.%6\7`O"c&>\.%prGf1.(u'ikg@eLI<.$?\1e&4Zim7[2K!&i\#3\.D.l8DRmspkV>*G_/pnXV`6@Y]>0BO:=\lgA3o\ZFCWN`ff,:%Yg)6*75Y531QHL;&iLRAjk-C<X$dmLX[tei0LqY`6&\ZQFQgAG$HgtrID<9?fAK,:jndfmmB*.EKD5DTJ%W>F>?Q7DrmUkqj7iQp%llYscrHS?,qb-C=NhEQFr\sj19:q7=J,K4j]YF+!o@O!G`.&uU=&s3%h!+e;Z:Jd0~>%AI9_PrivateDataEnd