%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: DTU Elektro B UK SH.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: PeopleGroup%%CreationDate: 27/02/08%%BoundingBox: 0 0 208 26%%HiResBoundingBox: 0 0 207.1714 25.3165%%CropBox: 0 0 207.1714 25.3165%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 16 8%%BeginData: 4454 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C452727A8FD05FFA8272752FF5252277D7D7DFF847DFFFFFF522727A8%5252FD09FFA8FD05FFA852FD08FF7D27FFFFFFA827277DFD0AFF7D7DFD11%FFA852FD20FFF8277DFD05FF527DFF2852FF2E7DFF5252FF527DFFFFA827%A8FFFFA827FF7D527DFFA8527DA8F852A87D527D7D7DFFA852A8A85252FF%FF52FFFFFF5252FFFFA8527D52FFFF7D52FD047DA8537D52FFFF7D52FFFF%7D28A8A87D52A87DA87D7D7D52A8FF7D5952A8FD16FF27F8A8FD05FF7D52%FF7D52FF527DFF527DFF7D52FFFFFF005252FF7D52A8277D27A85252A8A8%2852FF5227A8A852FF277DA8FF7D5252FF27FFFFFF5227527DA827525252%8427A8F8FF5252A8277D527D7D277D27A8277D27FF2752A87D52FFF87D27%7D7D527D27A8FD16FFF8F87DFD05FF527DFF7D52FF287DFF5252FF5252FF%FFA8277DA8A8A827A8277D27A827FFFFFF27A8FF5352FFA8527D52FFFF7D%522752FF28A8FFFF5227A8A8FF27FF7D527D527D28FF7D52FF27FFFD0752%277D52A8527DFF7D52FF27A87D527D277D27FD17FF27F8A8FD05FF7D52FF%277DFF527DFF7D52A85259FFFFFF27A8A8FF7D52A827A8A8FF527DFFFF52%7DFF5252FFA852A827A8FF52527D52FF27FFFFFF5252FFFFFF52A87D52A8%0052A8FF7D52FF27FF7D527D52A8A8A827A8A8FF527DFFA852FF27FF7D7D%A82727FD18FFF8F87DFD05FF7E52277DFFFF53A8FFFF525252FD04FF7D27%52A8A852FF525252FF7E5252FF7D52A87E7DFFA87DFF7D27A8A8525252A8%7DA8FFFFFF285252FF52FF7D7D7D527D27A8A87DFF52FF7D7DA852277DFF%7D2752FF7D7DFF7E7DFF53A8A87D7D277D27FD17FF27F8A8FD43FF7E277D%27FD1BFF7D527D27A8FD16FFF8277DFD44FFA87DFD1DFFA87DA8FD17FF27%F8A8FD06FFA8A8A8FD2AFFA8A8FFFFFF7DA8AFFD0FFFA8FD0CFFA87DA8FD%09FFA8FD10FFA8FD08FFF8277DFD05FF7D7DA87DA8FFA8FFFFFFA8FFFFFF%A8FD05FF7DA8FFFFA8FFA8FFFFFFA8FFFFFFA8FFA8A8A8FFFFFFAFFFFFFF%52A8FFFF7DA8A8FF7DFD08FFA87DFFFFFFA8A8FFFFA8FFA8FFFFA87DFFFF%A87DA8A8FD07FFA8FFA8FD0FFFA8A8FFFFA8FFFFFFA8FF27F8A8FD05FFA8%A8FFFD04A87DFFA8A87DFFA8A87DFF7DA8A87D7DA87DA87D7EA8FF7DA8A8%A87DA8A8FF52A8FFFFA87D7DA8A87DA8FFFF84A8FFFFA8FFA87DA8FFA87D%AF7D7DA8A87DFFA8FF7DA8A8A87DA8A8A8FFFF84A8FFFFA87D7DA8FFA87D%7DA8A8A87D7DA8FFA87DA8FFA87DA8FF7D7DA8A8A87D7EA8FF7DA87DF8F8%7DFD05FF7EA8FFA87D7D7E7E7DA8A8A87DFFA87D7D7DA8FF7DFF7DFD05A8%FD057DA8FF7DFF7DA8FFFF7DA8FF7DFF7DFFFFFF7D7E7DAF7DA87DA853A8%7DFFFFFF7DFF7DFFA8A87DA8FFFFA8A87DA87DFFFFA852A8A8A87DFF7DA8%7DFF7DA87DA87DFF7DA87DA853A87DA87DA87DFF7DA87DA8A8A87DA8A87D%27F8A8FD05FFA8A8FFA8A87DA8A8FF7DFFFFA87DA97EA87DFFFFA8FFA8A8%FFA8FFA8A87DFFA8A8A8FF7DFF7DFFFFFF7DFFFFA8FFA8FFFFFFA8FFFFFF%A8A87DA8FFA8A8FFFFA8A8FFA8FFFFA8A8A8FFA8A8A87DA8A8FFFF84A8FF%FFA8A8FF7DA87D7DA8FFA8A8A8FFA8A87EA8FFA87DA8FFA87DFFFD04A8FF%A8FF7DA8A8F8F87DFD05FFA87D7D7DA8A87DA8A8A87D7DA8A87D7DA8A8A8%FF7DA87DFD06A87D84FFA8A8FFA8FF7D7DFFFFA87D7EA8FF7DFFFFFF7DA8%7DFF7DFF7DA8A8FF7D84A8FF7DA87DFFA8A8A87DA8A87DA87DA87DFFFFA8%7DA8A8A87DFF7DAF7DA8A8FF7DA87DFF7DA87DA8A8FF7DA8A8FF7DFF7DA8%7DFD04A87D7DA8A8A8FD07FFA8A8FFFFFFA8A8FF7DA8A8FFFFA8A8FD05FF%A8FD05FFA8FFA8A8A8FFFFFFA8FFFFA8FFFFFFA8A8FD07FFA8A8FD04FFA8%A8FFFFA8FFFFFFA8FD05FFA8A8FFFFA8FD07FFA8FD05FFA8A8FF7DA8FD07%FFA8A8FFFFA8A8FD04FFA8FD04FFA8A8FF52FD11FFA8A8FD4FFF7D7D7DFD%17FFA8A87DA8%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2008-01-14T12:17:24+01:00</xap:CreateDate>
         <xap:ModifyDate>2008-02-27T18:08:34+01:00</xap:ModifyDate>
         <xap:MetadataDate>2008-02-27T18:08:34+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>32</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAIAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Ar/nDi8u7jzJ5iE88koWz&#xA;hKh2ZqfvT0qcJV9VYFfO5/Lzy1r2mfmj5mu1lg8x6NrWrHS9YgnlimgFraxTRKOLqpUOxqCO/UYV&#xA;WeZfL+ja3pX5W+Yr+1c6t5qvtMj1+f1Zk+srLafvKqrhVDlQfhAxVmejabZ6N/zkFBo2mq0Gl23k&#xA;smG15u6qTqxJPxsxJ+I7k4FTb8oJZJLjz7zcuE82agiVJNAIbfYeAxV5v5ng03W/zm852+veUtR8&#xA;5W+kx6XDpsNnJRLNZrX1pOSmaEVlc1FPA4VZBfWujaH+c/lvVLTTP0eW8tXlxeQBVE7C3jQIkzAn&#xA;nIiIEqWPTriqG8ifnj5o1jzD5fj1H9F3GneZGkQ2Onpc/WtOIQtB60kh9OQPSj0AoenhirKPy+81&#xA;fmP51sW8y20ukWHlu+a7j0q2eC4uLpRBJJBFLK6zQo1ZY6sop8PQg74FYv5E82fmfH+V3mrzJcan&#xA;YXs2kT6jPa/XLe5mdhZGR5omIuY+KHgoip9nevLCq7zRrfnfVPyv0TzL5jg0S6s9QvNLvF0yKG+H&#xA;GK7kgNuwmW6hKyxtIzMCrKdh23VZZZebfPfmHz3rOm6B+jLTQPLd1BZ37Xsc8tzcu6CSb0vTeNI+&#xA;Knita77nbbArHPMX5y6xovnu202PVdG1XTZ9Xi0q40u1guheW6TScOTXJdrcyxGnNNvkMKp1+WWl&#xA;6bpf5mfmXZabaxWdnHc6U8dvAgjjUy2Akfiq0A5O5O2BWJfmzFZ6n+ddlpOr+X77zZpNv5c+tw6L&#xA;ZPx9O4e+aNrll9WAEcFCHfuNsKsg1LXvOXlxfJmi+UdO0/S9O1wvaW+j6xFcG4s3jiedvUnhuJAw&#xA;22Xh/svBVAS/nN5wsPKeqPf22m/p3S/MaeXJ9RPqx6ZEklCL2dS/qrGtaMA3viqnY/mB548x6f58&#xA;snvvLupWGgaeri70+2u57O7E8DySxest6tCI0ZDwOxNa7UKqlo/nbz7ZWX5aaH5ag0S3tPNelyG0&#xA;trmG9K2ZsbRJnHq/WZHkUhvhBHLsW/axVUuPzu80WnlB/rMWnR+ZYPMs/la4vnWYacjWw5yXZjDG&#xA;Yrw/ZDdd/wDJxVSH59a/aeT9auLqLT7vWNP1K10uw1OFbiPTbgXoLJcOjkzARqj+oFPXpiqpZ/nB&#xA;53k8vebnjm0i81HyvbR6jBqcNtdNZXlu0bmSH02mhkjlR1A5ciP8nviqt5r1Xznf+R/LOreZoNFu&#xA;7TVdW0uQ6dDFfAxx3UkJt3SdbmE+rGxYtVCpqB23VVtZ8/fm3F5j846PpraE8XlWzj1L6zNbXaPJ&#xA;FJE86xcFuJFLUTiW5Ae2+yretfnJr31jy1b2c+ieX01vQIdel1HX3l+rGSbj/okJjkg+NeXIljuO&#xA;gwKzL8pPNOu+a/Ilh5h1pbeO71BpXSK1hlgjWOOVol2llmZuXplw1RVSNvFVmOKuxV2KuxV2Kvk/&#xA;/nDH/lJvMf8AzBQ/8nThKvrDAry7UvyOlvrnWol82anZ6F5gvZr/AFTR7VYI1ka4AWVPVKtJxZFC&#xA;kdKdsVZRrf5eaRqUXleCGR7K18qXlvd6fbxAFStrGYo4jyqePEjFUN5u/Lga35gs/Mml6zd+X/MF&#xA;pbPY/XrRYpBLau/qelLHMrqwV/iX3+iiqYeRPJGn+T9Gl0+0uJrya7uZb/Ub+5IM1xd3BBllfiFX&#xA;fiBsOg+nFUl138r7y6803vmTQfMt75dvdUigi1NLWO3ljnNqCsLkTI1GVG44qmN1+X9pe+ZdL1+/&#xA;vJbq507TZtLljdUVbhbgASSScQKMaHZdt8VS7yf+Weq+V7iygtPNuo3Hl7T+a2uiTx2rIImDcY2m&#xA;EfqsE5bb9sVVvKP5bXHlXUz+jPMN6fLgluJ4fLsqQNBG1yS7BZuAm4q7FlXl/GqqH0f8p4dL0LzT&#xA;5fj1m5l0XzKLzhZyJEfqbXyusrRSBebbOKBjTbxJxVMNR/LmwvfImleT3u5UtdKXT0juQFMjjTWj&#xA;ZOQ+z8foiuKoab8tLiHzjd+ZNE8w3mkDVJbefWNNijglt7l7YBQf3qM0fNBxYqd8VY9f/kDFPLdC&#xA;2806laWMmrfp6004JbyQw3pf1C/xxl3FfsqWp41xVm/l/wAnxaPr+u64buS6vNfNm12HVVVWsrYW&#xA;4Khf5wvI4qlfm78t5da8yWvmXStdu/L+tW9o2nSXVqkMvq2rSCYRusyt0k3GKop/IklzL5XutT1a&#xA;4v7/AMtTzXAu5EiRrlponi/eKgVV4q/7I7YqwX8x/wAp79PLupDQ47jVZdW8ywa9qUELxw3cUI2m&#xA;Fk7lV9VafCWPQnCqM/LXy/5tuNN80aJqsV/ZeU72AW2i/pZLJNSVponjuWcWfwsBVeJfc/firI9P&#xA;/KzTbK68j3C3szt5Htrm1swVWk4urZbdmk8KBKjjgVAT/ktpMmnalBDqd3bX135hm80WWpQ8BLaX&#xA;s1BxQEFXjCgijDeuKou8/LC51fyvdaJ5i8yX+q3EtxFeWWqFLe3ntJoCGieEQxquzDevY9sVVF/L&#xA;3V7ry1r2ha95pvNaj1u3Nqs80NtEbZWV1YxrCiAluYry8MVRur+QLLUvK+i+X3upI4dFmsJ4Z1Cl&#xA;nOnFSgYHb4+G9MVU5vy6sJdb81asbuUSearGLT7mMBeMKRQvDzTxJD13xV5j58/LLVrXXvLhtrLV&#xA;r/RNF8vRaPBf6IbT66bq3cBPrMN0wjeExrWgH2ifbCr1P8s184r5K01fOComvKrrcIgiBCCRhCHE&#xA;P7rl6XGvDbArKMVdirsVdirsVfJ//OGP/KTeY/8AmCh/5OnCVfWGBWDR2OoXsGv6lHqt7BeWV5dJ&#xA;aKk7GBRAAyKYWqhXsdsKq/8Aj6c28Jgsop5ksLe+vvUuUtwpnj9QRxBlcu1AT2+eBUU/nK7uJP8A&#xA;cTpovYVsotQdnnEL8JuRVFThJyb4D3GKt6n5zkttMg1S2tYJrGe1W6Hr3a285qCxRIij82C/5W52&#xA;xVWh8z317qMtppmnLcRRW0NybiWcQilyjPGpXg7VPGn+e6qWad5v19NKFzeWEdxNNqLWFssc4WpM&#xA;si0NY1AEfAAH9rrtiqvH511MO7XGjrFb296mnXkq3QcpLIVAKL6a81/eL3GKtT/mAkVzO/1RDplt&#xA;dfU5bo3KCbkHEbOtvxqUDnry6b0xVUuPOl7D9duDpXLTLC8Nnc3QnHPZ1TmsXCppzBIriqvpmsa/&#xA;P5r1LT57aEWFqsJVllqyLIJSrgemOZk4Cqkjj74qqar5kv4NRnsNM039IS2cAubxmmECoHrwRaq/&#xA;J2CE9h74qkuoavqmsaz5cawV00y8ilulRLt7dpQqxlhMI0b+6LfZ5EN7YqjvO9+8F7o9q9xdW9lc&#xA;vObr6iH9dvTjBRVMQLgcm3piqHtr2OG98vrZ3V+1nLc3f1j680/qOEtXejCUBmVSKr74qraZ5+F1&#xA;PYmeyS3stSZltZhcJLKKKWX1oVUcOSr/ADHFUVZeYte1HTX1C00qNLWSJpbN5bri7gEBS6CJuFVq&#xA;w3Ph3xVA6b5t186RojTadHd3+rAiHhcCMMEh9UyNWMBK0NVFae/TFVZvMkllPqSx2811eSalFZW1&#xA;tJPWMySW6PRGKfuowoYnY7/PFUdfa3rVnZxTT2FnFKxcSRzX4iQcacOMjQ/EW37CmKpZpXmKTV/M&#xA;ej3MDyRWd5pk8zWpY8RIsqruNgSpqAaYqpebNSp5pttOurm+g0/6k9xx031RK0xlCDmYQX4ha+1c&#xA;VRkOv3UD2Wl6RZTai0trJdLLfTvDKFSUIfU9VGetX/zG+Kt2vnSe/g00abp3rXmoRSztDLMIo41g&#xA;f0pAZOL8jz2FF99sVQ9n5mm1C80i6ngltJHfUIjaxXPKEm2UA+qPTUSbqeNDt13xVW0zzrd3Emlt&#xA;e6YLOz1dHa2uBcCUgpH6tGQItAQDQ1+gYqs0zz8LqexM9klvZakzLazC4SWUUUsvrQqo4clX+Y4q&#xA;3pfnw3lzYCSyWGy1NzHaTC4SSUHiWT1YVWqcwv8AMad8VQq+bLvU9K0nUZbKWxtrzUbSK2MF0OUn&#xA;ORlf1AI/7sFd1/a9sVRUXne+etw2lcdNW+OnyXQuFLhvV9FXEXAVHKlfi+/FWtS87ahbw395a6Uk&#xA;+n6fcmzlnkuRE5kVxGxEYjk+EM3jU+GKsJ/Iv8i9V/LfVdUvb3VIL9b+BIUSFHQqUflU8sKvY8Cs&#xA;Tfyz5lA1Ozt7+1g07VLiaaWT0ne5RZ9mVTzCVoKVpiq258kSQX31nSxZSRtbwWzwajbmcKLZeCMj&#xA;KyEEpsRiqjJpfmL/ABDeQ6c1tao+m20Es7QSCIMDKD6CqwA41rxJPbFWpvIF1GGisbi2aGSwisGk&#xA;u4DNLGIVZeURDqF58qn3xVO9A8vy6ZdzzvMsgmtbO2AAIobRHUtv/NzxVL7bynqkapby3ULWtvqn&#xA;6St+KMJOJkeRo33pX49iMVVpvKs8lvfReuoN3qkWpKaH4UjMJKH3/cnFUND5Ou7TUbh7ZdNns7m5&#xA;e6Ju7UyXEfqNydEdXUEA/ZJ6YqirjypPLo2r6eLhQ2pXjXaScTRAzo/Ejv8AYxVFxaRqEHme41SG&#xA;eI2V7FFHdQOreoGgD8DGwNP296jFUNqmg6wdUub/AEi7ht2v4Et7yO4jaQfu+XCSPiy/EA5FDtiq&#xA;+y8rrZT6GYJawaPbTW5DD4pDMIxy22G8ZJ+eKquvaPqF3dWF/ptxFBe6e0hjWdGkidZk4MGCsjDx&#xA;FDiqkdF1e8udMutUmtzNYyzs62yOiOk0DRADmzkEFqnfFUDoXlC90x4Ld102axtwyLcC1K3rLQha&#xA;yB+IbfdqYqjdB0XW9Nthpk11bz6TDE0NswjdbmnRObc+B4rtsuKobSPK+qWqaGl3cwyDRHlEZiRl&#xA;LxPA0K1qT8Q5b4q3e+UruWW7ube7SK6bUYtSsy6FkDRQCHhIAVJDDl0OKrb3y5r95e2mozzWD3kE&#xA;UsDxyW8kkASRlYPGjSV5jjQ774q7y75Nn0m40uR7lZV0+zmtGAUgsZZhIGG+1BiqM1fRNVfWoNZ0&#xA;m4giu0t3s5Y7qN5I2jZxICODIQwZcVVLTSdROs22q300LTx2UlpMkCsqFnmSQMvIsQAqU3OKsL1f&#xA;yu1hHotjezMlrZx3rNqCW0l1F6k84kWNo1BKfCftVFelcKp7oOlXd/aaTdPbx6emnfXIo4EieESR&#xA;yr6ccqxN8UfL7RDYFRcXlKVbXy7A86kaMCJiAf3gMJi+Hw3OKqOheUL3THgt3XTZrK3DItyLUres&#xA;tCFrIH4ht92piregeUr7SZreEjTprK1qI7g2pW9K/s1kDceQ7tTfFW7bybcQ+XtE0o3KF9JvIbt5&#xA;eJo4ilaQqB2ryxVfH5RnXR5LD6wvJ9S/SAfiacfrIm4U8aCmKsRu7OW21zUb5bU3Op/pBntdKns5&#xA;ZRLHzASVLlQFXarAsSF6YVf/2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:936171F32CC4DC11B0F7C948713094C1</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:38C0031BE6F111DCA9DBE848ED1657C8</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:926171F32CC4DC11B0F7C948713094C1</stRef:instanceID>
            <stRef:documentID>uuid:C277C3BA2CC4DC11B0F7C948713094C1</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5080.000000</stDim:w>
            <stDim:h>5080.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.609375</xapG:cyan>
                           <xapG:magenta>67.578125</xapG:magenta>
                           <xapG:yellow>66.796875</xapG:yellow>
                           <xapG:black>89.843750</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>6.250000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>96.093750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>62.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>51.562500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.890625</xapG:cyan>
                           <xapG:magenta>76.562500</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>26.953125</xapG:cyan>
                           <xapG:magenta>81.250000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>16.796875</xapG:cyan>
                           <xapG:magenta>97.656250</xapG:magenta>
                           <xapG:yellow>92.187500</xapG:yellow>
                           <xapG:black>6.640625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.390625</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>79.296875</xapG:magenta>
                           <xapG:yellow>96.484375</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>98.046875</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>34.765625</xapG:magenta>
                           <xapG:yellow>86.718750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>4.687500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>92.968750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>18.750000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>97.656250</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>98.828125</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218750</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>99.218750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>85.937500</xapG:cyan>
                           <xapG:magenta>17.578125</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>3.906250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>89.843750</xapG:cyan>
                           <xapG:magenta>33.203125</xapG:magenta>
                           <xapG:yellow>98.437500</xapG:yellow>
                           <xapG:black>25.781250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.781250</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>74.609375</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984375</xapG:magenta>
                           <xapG:yellow>45.703125</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>69.531250</xapG:cyan>
                           <xapG:magenta>14.843750</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.109375</xapG:cyan>
                           <xapG:magenta>52.343750</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>98.828125</xapG:cyan>
                           <xapG:magenta>96.093750</xapG:magenta>
                           <xapG:yellow>3.515625</xapG:yellow>
                           <xapG:black>0.390625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>26.171875</xapG:yellow>
                           <xapG:black>24.609375</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218750</xapG:cyan>
                           <xapG:magenta>98.046875</xapG:magenta>
                           <xapG:yellow>0.781250</xapG:yellow>
                           <xapG:black>0.390625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>49.218750</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>1.171875</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>34.765625</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>37.109375</xapG:yellow>
                           <xapG:black>10.937500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>11.718750</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>49.218750</xapG:yellow>
                           <xapG:black>0.781250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>96.484375</xapG:magenta>
                           <xapG:yellow>20.312500</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656250</xapG:cyan>
                           <xapG:magenta>27.343750</xapG:magenta>
                           <xapG:yellow>39.843750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.843750</xapG:cyan>
                           <xapG:magenta>42.578125</xapG:magenta>
                           <xapG:yellow>52.343750</xapG:yellow>
                           <xapG:black>6.640625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.390625</xapG:cyan>
                           <xapG:magenta>52.734375</xapG:magenta>
                           <xapG:yellow>60.546875</xapG:yellow>
                           <xapG:black>23.437500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>57.421875</xapG:cyan>
                           <xapG:magenta>60.156250</xapG:magenta>
                           <xapG:yellow>63.671875</xapG:yellow>
                           <xapG:black>41.796875</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656250</xapG:cyan>
                           <xapG:magenta>38.281250</xapG:magenta>
                           <xapG:yellow>63.281250</xapG:yellow>
                           <xapG:black>1.171875</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>31.640625</xapG:cyan>
                           <xapG:magenta>48.828125</xapG:magenta>
                           <xapG:yellow>73.828125</xapG:yellow>
                           <xapG:black>9.765625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.937500</xapG:cyan>
                           <xapG:magenta>57.031250</xapG:magenta>
                           <xapG:yellow>83.593750</xapG:yellow>
                           <xapG:black>22.656250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.062500</xapG:cyan>
                           <xapG:magenta>63.671875</xapG:magenta>
                           <xapG:yellow>92.968750</xapG:yellow>
                           <xapG:black>35.546875</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>41.406250</xapG:cyan>
                           <xapG:magenta>69.531250</xapG:magenta>
                           <xapG:yellow>96.484375</xapG:yellow>
                           <xapG:black>48.828125</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>47.656250</xapG:cyan>
                           <xapG:magenta>73.046875</xapG:magenta>
                           <xapG:yellow>83.203125</xapG:yellow>
                           <xapG:black>67.968750</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Web Color Group</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=236 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.781250</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984375</xapG:magenta>
                           <xapG:yellow>45.703125</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218750</xapG:cyan>
                           <xapG:magenta>98.046875</xapG:magenta>
                           <xapG:yellow>0.781250</xapG:yellow>
                           <xapG:black>0.390625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=139 G=146 B=152 1</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>48.437500</xapG:cyan>
                           <xapG:magenta>36.328125</xapG:magenta>
                           <xapG:yellow>33.593750</xapG:yellow>
                           <xapG:black>1.562500</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Grayscale</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>204</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>153</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -25.3164 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 25.3164 li207.171 25.3164 li207.171 0 licpclp[1 0 0 1 0 0 ] concat3.57178 0.234375 mo3.57178 22.9121 li0 22.9121 li0 0.234375 li3.57178 0.234375 licpfalse sop/0 [/DeviceCMYK] /CSA add_res0 0 0 1 cmykf19.3057 8.34375 mo18.667 8.97266 17.7046 9.25781 16.5366 9.25781 cv15.6528 9.25781 14.6128 9.18555 14.2578 9.12598 cv14.0776 9.0957 13.9751 9 13.9751 8.78906 cv13.9751 0.613281 li13.9751 0.408203 14.0776 0.306641 14.2578 0.276367 cv14.6128 0.216797 15.6528 0.144531 16.5366 0.144531 cv17.6938 0.144531 18.6494 0.419922 19.2876 1.03711 cv20.0464 1.76953 20.2456 2.77637 20.2456 4.1377 cv20.2456 5.26465 li20.2456 6.61133 20.0537 7.60547 19.3057 8.34375 cvcp18.8691 4.19434 mo18.8691 3.03516 18.7163 2.31836 18.2012 1.84082 cv17.7832 1.4541 17.1992 1.31641 16.5366 1.31641 cv16.0317 1.31641 15.6885 1.33398 15.3643 1.35254 cv15.3643 8.05664 li15.6826 8.07422 16.0317 8.08594 16.5366 8.08594 cv17.2261 8.08594 17.8306 7.93555 18.2515 7.50977 cv18.7358 7.02051 18.8691 6.33203 18.8691 5.20801 cv18.8691 4.19434 licp31.5923 9.25781 mo29.6504 9.25781 28.3994 8.32031 28.3994 5.8916 cv28.3994 0.462891 li28.3994 0.335938 28.502 0.234375 28.6343 0.234375 cv29.5542 0.234375 li29.6802 0.234375 29.7886 0.330078 29.7886 0.462891 cv29.7886 5.8916 li29.7886 7.35254 30.1973 8.09766 31.5923 8.09766 cv32.9868 8.09766 33.3955 7.3584 33.3955 5.8916 cv33.3955 0.462891 li33.3955 0.335938 33.4976 0.234375 33.6299 0.234375 cv34.5498 0.234375 li34.6763 0.234375 34.7842 0.330078 34.7842 0.462891 cv34.7842 5.8916 li34.7842 8.32031 33.5337 9.25781 31.5923 9.25781 cvcp27.0327 1.40039 mo24.8086 1.40039 li24.8086 8.92773 li24.8086 9.05371 24.7124 9.16797 24.5801 9.16797 cv23.6538 9.16797 li23.5278 9.16797 23.4258 9.06055 23.4258 8.92773 cv23.4258 1.40039 li21.2012 1.40039 li21.0693 1.40039 20.9609 1.32813 20.9609 1.19629 cv20.9609 0.457031 li20.9609 0.330078 21.0693 0.234375 21.2012 0.234375 cv27.0327 0.234375 li27.1655 0.234375 27.2676 0.324219 27.2676 0.457031 cv27.2676 1.19629 li27.2676 1.32227 27.1655 1.40039 27.0327 1.40039 cvcp75.8804 8.92188 mo75.8804 9.05469 75.9883 9.16797 76.1206 9.16797 cv76.9624 9.16797 li77.0947 9.16797 77.2031 9.05469 77.2031 8.92188 cv77.2031 2.71094 li77.2031 2.5791 77.0947 2.4707 76.9624 2.4707 cv74.6245 2.4707 li74.4917 2.4707 74.3901 2.5791 74.3901 2.71191 cv74.3901 2.71191 74.3901 2.6582 74.3901 2.78906 cv74.3901 2.9209 74.4785 3.03125 74.6245 3.07324 cv75.8804 3.43945 li75.8804 8.92188 licp77.2271 1.25098 mo77.2271 0.240234 li77.2271 0.108398 77.1191 0 76.9868 0 cv76.0967 0 li75.9644 0 75.8506 0.108398 75.8506 0.240234 cv75.8506 1.25098 li75.8506 1.38281 75.9644 1.49121 76.0967 1.49121 cv76.9868 1.49121 li77.1191 1.49121 77.2271 1.38281 77.2271 1.25098 cvcp92.312 8.92188 mo92.312 9.05469 92.4146 9.16797 92.5405 9.16797 cv93.4121 9.16797 li93.5449 9.16797 93.6348 9.04883 93.6348 8.92188 cv93.6348 0.306641 li93.6348 0.173828 93.5391 0.0722656 93.4121 0.0722656 cv91.0747 0.0722656 li90.9424 0.0722656 90.8403 0.180664 90.8403 0.3125 cv90.8403 0.3125 90.8403 0.258789 90.8403 0.390625 cv90.8403 0.521484 90.9287 0.631836 91.0747 0.674805 cv92.312 1.04102 li92.312 8.92188 licp83.2427 8.04297 mo82.7407 8.08008 82.4194 8.12207 81.7339 8.12207 cv80.9644 8.12207 80.4048 7.63477 80.4048 6.33594 cv80.4048 5.30859 li80.4048 4.00391 80.9702 3.52344 81.7339 3.52344 cv82.4194 3.52344 82.7397 3.58008 83.2476 3.60449 cv83.2896 3.60645 li83.4038 3.61133 83.5073 3.54688 83.5073 3.42676 cv83.5073 2.82031 li83.5073 2.63965 83.459 2.57324 83.2607 2.53125 cv82.9243 2.45898 82.377 2.38672 81.7339 2.38672 cv80.1284 2.38672 79.0825 3.44531 79.0825 5.30859 cv79.0825 6.33594 li79.0825 8.2002 80.1348 9.25781 81.7339 9.25781 cv82.3833 9.25781 82.9243 9.18652 83.2607 9.11426 cv83.459 9.07227 83.5073 9 83.5073 8.82617 cv83.5073 8.21875 li83.5073 8.09766 83.3984 8.03223 83.2847 8.04102 cv83.2427 8.04297 licp89.8613 8.20898 mo89.8613 4.66504 li89.8613 3.18652 89.0557 2.38672 87.3667 2.38672 cv86.5425 2.38672 85.9175 2.4707 85.4307 2.56055 cv85.2681 2.5918 85.1899 2.66992 85.1899 2.80176 cv85.1899 3.39648 li85.1899 3.55859 85.2993 3.60254 85.4136 3.59375 cv85.4731 3.58984 li85.9136 3.55859 86.5908 3.49902 87.3667 3.49902 cv88.1899 3.49902 88.5386 3.76953 88.5386 4.66504 cv88.5386 5.16992 li87.7153 5.16992 li85.5991 5.16992 84.7993 5.84961 84.7993 7.18457 cv84.7993 7.28125 li84.7993 8.84375 85.8091 9.25781 86.8193 9.25781 cv87.4443 9.25781 88.1084 9.00293 88.6494 8.66016 cv88.6587 8.92773 li88.6636 9.06055 88.7754 9.16797 88.9077 9.16797 cv90.9404 9.16797 li91.0728 9.16797 91.1812 9.06055 91.1812 8.92773 cv91.1812 8.92773 91.1812 9 91.1812 8.86914 cv91.1812 8.73047 91.0752 8.60059 90.9404 8.55664 cv89.8613 8.20898 licp88.5386 7.78516 mo88.0757 8.03809 87.6069 8.19434 87.1138 8.19434 cv86.4648 8.19434 86.1279 8.00195 86.1279 7.27441 cv86.1279 7.17871 li86.1279 6.41504 86.4404 6.07813 87.7153 6.07813 cv88.5386 6.07813 li88.5386 7.78516 licp56.4463 7.99121 mo55.9053 8.03516 55.0688 8.11035 54.2808 8.11035 cv53.1509 8.11035 52.7241 7.43066 52.7241 6.36719 cv52.7241 6.26465 li56.6978 6.26465 li56.854 6.26465 56.9326 6.15625 56.9326 5.98242 cv56.9326 5.60547 li56.9326 3.85547 56.2856 2.38672 54.1792 2.38672 cv52.0967 2.38672 51.4014 3.80664 51.4014 5.60547 cv51.4014 6.02246 li51.4014 8.3252 52.5498 9.25879 54.2212 9.25879 cv55.165 9.25879 55.729 9.1875 56.4634 9.05469 cv56.6675 9.01758 56.71 8.93359 56.71 8.75977 cv56.71 8.1582 li56.71 8.03809 56.6021 7.97852 56.4941 7.9873 cv56.4463 7.99121 licp55.5977 5.29688 mo52.73 5.29688 li52.73 5.21777 li52.73 4.08203 53.2891 3.51758 54.1792 3.51758 cv55.0806 3.51758 55.5977 4.05762 55.5977 5.21777 cv55.5977 5.29688 licp48.2725 8.92188 mo48.2725 9.05469 48.375 9.16797 48.5015 9.16797 cv49.373 9.16797 li49.5054 9.16797 49.5957 9.04883 49.5957 8.92188 cv49.5957 0.306641 li49.5957 0.174805 49.499 0.0722656 49.373 0.0722656 cv47.0352 0.0722656 li46.9028 0.0722656 46.8003 0.180664 46.8003 0.3125 cv46.8003 0.3125 46.8003 0.258789 46.8003 0.390625 cv46.8003 0.521484 46.8892 0.631836 47.0352 0.674805 cv48.2725 1.04102 li48.2725 8.92188 licp45.8252 8.93359 mo45.8252 8.24219 li45.8252 8.13477 45.7471 8.05078 45.6392 8.05078 cv43.2524 8.05078 li42.2661 8.05078 42.0381 7.76172 42.0381 6.9082 cv42.0381 5.12305 li45.5127 5.12305 li45.645 5.12305 45.7529 5.01367 45.7529 4.88184 cv45.7529 4.2207 li45.7529 4.08789 45.645 3.98047 45.5127 3.98047 cv42.0381 3.98047 li42.0381 2.49512 li42.0381 1.6416 42.2661 1.35352 43.2524 1.35352 cv45.6392 1.35352 li45.7471 1.35352 45.8252 1.26855 45.8252 1.16016 cv45.8252 0.474609 li45.8252 0.355469 45.7715 0.28125 45.645 0.264648 cv45.2007 0.206055 44.4004 0.144531 43.3306 0.144531 cv42.4023 0.144531 41.6733 0.267578 41.1938 0.753906 cv40.8179 1.13574 40.6611 1.68262 40.6611 2.49512 cv40.6611 6.9082 li40.6611 7.70996 40.8125 8.25195 41.1797 8.63477 cv41.6577 9.13086 42.3931 9.25879 43.3306 9.25879 cv44.4004 9.25879 45.2246 9.20117 45.645 9.14453 cv45.7715 9.12695 45.8252 9.05469 45.8252 8.93359 cvcp126.433 8.92188 mo126.433 9.05469 126.542 9.16797 126.667 9.16797 cv127.515 9.16797 li127.648 9.16797 127.756 9.04883 127.756 8.92188 cv127.756 3.96777 li128.285 3.69727 128.791 3.51758 129.248 3.51758 cv130.167 3.51758 130.419 3.85352 130.419 4.98438 cv130.419 8.92188 li130.419 9.05469 130.528 9.16797 130.66 9.16797 cv131.501 9.16797 li131.634 9.16797 131.742 9.05469 131.742 8.92188 cv131.742 4.8418 li131.742 3.50684 131.281 2.38672 129.656 2.38672 cv128.904 2.38672 128.4 2.54102 127.669 2.99219 cv127.66 2.71094 li127.655 2.5791 127.548 2.4707 127.417 2.4707 cv125.183 2.4707 li125.051 2.4707 124.949 2.5791 124.949 2.71191 cv124.949 2.71191 124.949 2.6582 124.949 2.78906 cv124.949 2.9209 125.039 3.03125 125.183 3.07324 cv126.433 3.43945 li126.433 8.92188 licp145.386 7.99121 mo144.845 8.03516 144.007 8.11035 143.22 8.11035 cv142.09 8.11035 141.664 7.43066 141.664 6.36719 cv141.664 6.26465 li145.637 6.26465 li145.793 6.26465 145.872 6.15625 145.872 5.98242 cv145.872 5.60449 li145.872 3.85547 145.225 2.38672 143.119 2.38672 cv141.036 2.38672 140.34 3.80664 140.34 5.60449 cv140.34 6.02246 li140.34 8.3252 141.49 9.25781 143.16 9.25781 cv144.104 9.25781 144.668 9.1875 145.402 9.05469 cv145.607 9.01758 145.649 8.93359 145.649 8.75977 cv145.649 8.1582 li145.649 8.03809 145.542 7.97852 145.433 7.9873 cv145.386 7.99121 licp144.537 5.29688 mo141.669 5.29688 li141.669 5.21777 li141.669 4.08203 142.228 3.51758 143.119 3.51758 cv144.02 3.51758 144.537 4.05762 144.537 5.21777 cv144.537 5.29688 licp146.845 2.4707 mo146.713 2.4707 146.611 2.5791 146.611 2.71191 cv146.611 2.71191 146.611 2.6582 146.611 2.78906 cv146.611 2.9209 146.7 3.03125 146.845 3.07324 cv148.052 3.43945 li148.052 8.92188 li148.052 9.05469 148.161 9.16797 148.287 9.16797 cv149.134 9.16797 li149.267 9.16797 149.375 9.04883 149.375 8.92188 cv149.375 3.98633 li149.928 3.67383 150.433 3.51758 151.035 3.51758 cv151.185 3.51758 151.281 3.42676 151.281 3.29492 cv151.281 2.61523 li151.281 2.47656 151.185 2.38672 151.035 2.38672 cv150.523 2.38672 149.946 2.51172 149.271 3.00391 cv149.259 2.71094 li149.255 2.5791 149.15 2.4707 149.017 2.4707 cv146.845 2.4707 licp138.421 7.99121 mo137.88 8.03516 137.044 8.11035 136.256 8.11035 cv135.126 8.11035 134.699 7.43066 134.699 6.36719 cv134.699 6.26465 li138.673 6.26465 li138.83 6.26465 138.908 6.15625 138.908 5.98242 cv138.908 5.60449 li138.908 3.85547 138.261 2.38672 136.154 2.38672 cv134.072 2.38672 133.376 3.80664 133.376 5.60449 cv133.376 6.02246 li133.376 8.3252 134.525 9.25781 136.196 9.25781 cv137.14 9.25781 137.705 9.1875 138.439 9.05469 cv138.642 9.01758 138.685 8.93359 138.685 8.75977 cv138.685 8.1582 li138.685 8.03809 138.578 7.97852 138.469 7.9873 cv138.421 7.99121 licp137.573 5.29688 mo134.705 5.29688 li134.705 5.21777 li134.705 4.08203 135.264 3.51758 136.154 3.51758 cv137.056 3.51758 137.573 4.05762 137.573 5.21777 cv137.573 5.29688 licp157.349 8.92188 mo157.349 9.05469 157.458 9.16797 157.583 9.16797 cv158.432 9.16797 li158.564 9.16797 158.672 9.04883 158.672 8.92188 cv158.672 3.96777 li159.201 3.69727 159.707 3.51758 160.164 3.51758 cv161.083 3.51758 161.335 3.85352 161.335 4.98438 cv161.335 8.92188 li161.335 9.05469 161.444 9.16797 161.576 9.16797 cv162.417 9.16797 li162.55 9.16797 162.658 9.05469 162.658 8.92188 cv162.658 4.8418 li162.658 3.50684 162.197 2.38672 160.572 2.38672 cv159.821 2.38672 159.317 2.54102 158.585 2.99219 cv158.576 2.71094 li158.572 2.5791 158.465 2.4707 158.333 2.4707 cv156.1 2.4707 li155.968 2.4707 155.866 2.5791 155.866 2.71191 cv155.866 2.71191 155.866 2.6582 155.866 2.78906 cv155.866 2.9209 155.955 3.03125 156.1 3.07324 cv157.349 3.43945 li157.349 8.92188 licp153.429 8.92188 mo153.429 9.05469 153.537 9.16797 153.669 9.16797 cv154.511 9.16797 li154.642 9.16797 154.751 9.05469 154.751 8.92188 cv154.751 2.71094 li154.751 2.5791 154.642 2.4707 154.511 2.4707 cv152.173 2.4707 li152.041 2.4707 151.938 2.5791 151.938 2.71191 cv151.938 2.71191 151.938 2.6582 151.938 2.78906 cv151.938 2.9209 152.027 3.03125 152.173 3.07324 cv153.429 3.43945 li153.429 8.92188 licp154.781 1.25098 mo154.781 0.240234 li154.781 0.108398 154.673 0 154.541 0 cv153.651 0 li153.519 0 153.404 0.108398 153.404 0.240234 cv153.404 1.25098 li153.404 1.38281 153.519 1.49121 153.651 1.49121 cv154.541 1.49121 li154.673 1.49121 154.781 1.38281 154.781 1.25098 cvcp107.263 8.92188 mo107.263 9.05469 107.372 9.16797 107.498 9.16797 cv108.345 9.16797 li108.478 9.16797 108.585 9.04883 108.585 8.92188 cv108.585 3.96777 li109.115 3.69727 109.62 3.51758 110.077 3.51758 cv110.997 3.51758 111.25 3.85352 111.25 4.98438 cv111.25 8.92188 li111.25 9.05469 111.357 9.16797 111.49 9.16797 cv112.332 9.16797 li112.463 9.16797 112.572 9.05469 112.572 8.92188 cv112.572 4.8418 li112.572 3.50684 112.111 2.38672 110.486 2.38672 cv109.734 2.38672 109.23 2.54102 108.5 2.99219 cv108.49 2.71094 li108.484 2.5791 108.378 2.4707 108.246 2.4707 cv106.013 2.4707 li105.88 2.4707 105.779 2.5791 105.779 2.71191 cv105.779 2.71191 105.779 2.6582 105.779 2.78906 cv105.779 2.9209 105.868 3.03125 106.013 3.07324 cv107.263 3.43945 li107.263 8.92188 licp122.512 8.92188 mo122.512 9.05469 122.621 9.16797 122.752 9.16797 cv123.594 9.16797 li123.726 9.16797 123.835 9.05469 123.835 8.92188 cv123.835 2.71094 li123.835 2.5791 123.726 2.4707 123.594 2.4707 cv121.256 2.4707 li121.125 2.4707 121.022 2.5791 121.022 2.71191 cv121.022 2.71191 121.022 2.6582 121.022 2.78906 cv121.022 2.9209 121.111 3.03125 121.256 3.07324 cv122.512 3.43945 li122.512 8.92188 licp123.865 1.25098 mo123.865 0.240234 li123.865 0.108398 123.757 0 123.625 0 cv122.734 0 li122.602 0 122.488 0.108398 122.488 0.240234 cv122.488 1.25098 li122.488 1.38281 122.602 1.49121 122.734 1.49121 cv123.625 1.49121 li123.757 1.49121 123.865 1.38281 123.865 1.25098 cvcp104.825 8.93359 mo104.825 8.24219 li104.825 8.13477 104.747 8.05078 104.638 8.05078 cv102.251 8.05078 li101.266 8.05078 101.037 7.76172 101.037 6.9082 cv101.037 5.12305 li104.512 5.12305 li104.644 5.12305 104.752 5.01367 104.752 4.88184 cv104.752 4.2207 li104.752 4.08789 104.644 3.98047 104.512 3.98047 cv101.037 3.98047 li101.037 2.49512 li101.037 1.6416 101.266 1.35352 102.251 1.35352 cv104.638 1.35352 li104.747 1.35352 104.825 1.26855 104.825 1.16016 cv104.825 0.474609 li104.825 0.355469 104.771 0.28125 104.644 0.264648 cv104.201 0.206055 103.4 0.144531 102.33 0.144531 cv101.402 0.144531 100.673 0.267578 100.193 0.753906 cv99.8169 1.13574 99.6606 1.68262 99.6606 2.49512 cv99.6606 6.9082 li99.6606 7.70996 99.812 8.25195 100.179 8.63477 cv100.657 9.13086 101.393 9.25781 102.33 9.25781 cv103.4 9.25781 104.224 9.20117 104.644 9.14453 cv104.771 9.12695 104.825 9.05469 104.825 8.93359 cvcp168.708 9.71582 mo168.708 10.2617 168.451 10.5811 167.187 10.5811 cv165.956 10.5811 165.607 10.2207 165.607 9.63672 cv165.607 9.5293 li165.607 9 165.787 8.77148 166.051 8.49512 cv167.265 8.79492 li168.438 9.08398 168.708 9.25781 168.708 9.625 cv168.708 9.71582 licp169.435 3.42578 mo170.334 3.1582 li170.48 3.11523 170.57 3.00586 170.57 2.87402 cv170.57 2.74219 170.57 2.71191 170.57 2.71191 cv170.57 2.5791 170.466 2.4707 170.334 2.4707 cv167.14 2.4707 li165.066 2.4707 164.375 3.50586 164.375 4.6416 cv164.375 4.73145 li164.375 5.33887 164.531 5.77148 164.897 6.13281 cv164.566 6.34277 164.41 6.70313 164.41 7.05273 cv164.41 7.06445 li164.41 7.4668 164.597 7.89355 165 8.10352 cv164.609 8.42969 164.314 8.94531 164.314 9.5293 cv164.314 9.63672 li164.314 10.8574 165.263 11.5918 167.187 11.5918 cv169.196 11.5918 170.031 10.9063 170.031 9.71582 cv170.031 9.625 li170.031 8.41699 168.937 8.12207 167.531 7.7793 cv165.925 7.38281 li165.648 7.31641 165.535 7.21484 165.535 6.99219 cv165.535 6.84766 165.613 6.72754 165.787 6.63086 cv166.082 6.75195 166.502 6.85352 167.14 6.85352 cv168.973 6.85352 169.899 6.14453 169.899 4.73145 cv169.899 4.6416 li169.899 4.13281 169.744 3.73047 169.435 3.42578 cvcp168.595 4.75 mo168.595 5.41113 168.288 5.83789 167.14 5.83789 cv165.889 5.83789 165.679 5.23633 165.679 4.75 cv165.679 4.65332 li165.679 4.03418 165.956 3.49902 167.14 3.49902 cv168.306 3.49902 168.595 4.00391 168.595 4.65332 cv168.595 4.75 licp118.607 9.71582 mo118.607 10.2617 118.349 10.5811 117.086 10.5811 cv115.854 10.5811 115.505 10.2207 115.505 9.63672 cv115.505 9.5293 li115.505 9 115.685 8.77148 115.951 8.49512 cv117.164 8.79492 li118.336 9.08398 118.607 9.25781 118.607 9.625 cv118.607 9.71582 licp119.333 3.42578 mo120.233 3.1582 li120.378 3.11523 120.467 3.00586 120.467 2.87402 cv120.467 2.74219 120.467 2.71191 120.467 2.71191 cv120.467 2.5791 120.365 2.4707 120.233 2.4707 cv117.039 2.4707 li114.964 2.4707 114.273 3.50586 114.273 4.6416 cv114.273 4.73145 li114.273 5.33887 114.429 5.77148 114.795 6.13281 cv114.465 6.34277 114.308 6.70313 114.308 7.05273 cv114.308 7.06445 li114.308 7.4668 114.496 7.89355 114.898 8.10352 cv114.507 8.42969 114.212 8.94531 114.212 9.5293 cv114.212 9.63672 li114.212 10.8574 115.162 11.5918 117.086 11.5918 cv119.094 11.5918 119.929 10.9063 119.929 9.71582 cv119.929 9.625 li119.929 8.41699 118.835 8.12207 117.429 7.7793 cv115.824 7.38281 li115.546 7.31641 115.433 7.21484 115.433 6.99219 cv115.433 6.84766 115.511 6.72754 115.685 6.63086 cv115.98 6.75195 116.401 6.85352 117.039 6.85352 cv118.872 6.85352 119.797 6.14453 119.797 4.73145 cv119.797 4.6416 li119.797 4.13281 119.642 3.73047 119.333 3.42578 cvcp118.493 4.75 mo118.493 5.41113 118.186 5.83789 117.039 5.83789 cv115.788 5.83789 115.578 5.23633 115.578 4.75 cv115.578 4.65332 li115.578 4.03418 115.854 3.49902 117.039 3.49902 cv118.205 3.49902 118.493 4.00391 118.493 4.65332 cv118.493 4.75 licp62.6294 8.04297 mo62.1274 8.08008 61.8057 8.12207 61.1201 8.12207 cv60.3511 8.12207 59.7915 7.63477 59.7915 6.33691 cv59.7915 5.30859 li59.7915 4.00391 60.3569 3.52344 61.1201 3.52344 cv61.8057 3.52344 62.1265 3.58008 62.6343 3.60449 cv62.6763 3.60645 li62.7905 3.61133 62.894 3.54688 62.894 3.42676 cv62.894 2.82031 li62.894 2.63965 62.8457 2.57324 62.6475 2.53125 cv62.3105 2.45898 61.7637 2.38672 61.1201 2.38672 cv59.5151 2.38672 58.4692 3.44531 58.4692 5.30859 cv58.4692 6.33691 li58.4692 8.2002 59.521 9.25879 61.1201 9.25879 cv61.7695 9.25879 62.3105 9.18652 62.6475 9.11426 cv62.8457 9.07227 62.894 9 62.894 8.82617 cv62.894 8.21875 li62.894 8.09766 62.7852 8.03223 62.6714 8.04102 cv62.6294 8.04297 licp69.3057 2.4707 mo69.1733 2.4707 69.0708 2.5791 69.0708 2.71191 cv69.0708 2.71191 69.0708 2.6582 69.0708 2.78906 cv69.0708 2.9209 69.1597 3.03125 69.3057 3.07422 cv70.5122 3.43945 li70.5122 8.92188 li70.5122 9.05469 70.6206 9.16797 70.7471 9.16797 cv71.5947 9.16797 li71.7271 9.16797 71.835 9.04883 71.835 8.92188 cv71.835 3.98633 li72.3882 3.67383 72.8931 3.51758 73.4941 3.51758 cv73.6445 3.51758 73.7407 3.42676 73.7407 3.29492 cv73.7407 2.61523 li73.7407 2.47656 73.6445 2.38672 73.4941 2.38672 cv72.9829 2.38672 72.4058 2.51172 71.73 3.00391 cv71.7197 2.71191 li71.7153 2.5791 71.6094 2.4707 71.4771 2.4707 cv69.3057 2.4707 licp65.3311 3.44922 mo64.0552 3.07422 li63.9229 3.02832 63.8208 2.92773 63.8208 2.7959 cv63.8208 2.69922 li63.8208 2.56738 63.9229 2.4707 64.0552 2.4707 cv65.3311 2.4707 li65.3311 1.38867 li65.3311 1.27148 65.4224 1.17188 65.5596 1.14844 cv66.4312 1.00391 li66.5469 0.984375 66.6597 1.06152 66.6597 1.19629 cv66.6597 2.4707 li67.8501 2.4707 li67.9819 2.4707 68.0903 2.5791 68.0903 2.71191 cv68.0903 3.27051 li68.0903 3.40234 67.9819 3.51172 67.8501 3.51172 cv66.6597 3.51172 li66.6597 7.49707 li66.6597 8.12891 66.7617 8.21289 67.2188 8.21289 cv67.874 8.21289 li68.0366 8.21289 68.1265 8.2666 68.1265 8.38672 cv68.1265 8.97656 li68.1265 9.08984 68.0601 9.16211 67.9038 9.18652 cv67.6396 9.22852 67.3511 9.25879 67.1045 9.25879 cv65.8721 9.25879 65.3311 8.96387 65.3311 7.49707 cv65.3311 3.44922 licpf89.8599 14.6016 mo89.2827 14.6016 li88.7173 14.6016 88.5493 14.7695 88.5493 15.4316 cv88.5493 16.2969 li89.812 16.2969 li89.9438 16.2969 90.0405 16.3936 90.0405 16.5137 cv90.0405 16.9824 li90.0405 17.1035 89.9438 17.1875 89.812 17.1875 cv88.5493 17.1875 li88.5493 22.6709 li88.5493 22.791 88.4409 22.9121 88.3203 22.9121 cv87.7314 22.9121 li87.5991 22.9121 87.4907 22.791 87.4907 22.6709 cv87.4907 17.1875 li86.3242 17.0547 li86.1919 17.043 86.0957 16.959 86.0957 16.8379 cv86.0957 16.5137 li86.0957 16.3936 86.1919 16.2969 86.3242 16.2969 cv87.4907 16.2969 li87.4907 15.4316 li87.4907 14.1445 88.1162 13.7598 89.1743 13.7598 cv89.499 13.7598 89.6914 13.7959 89.8477 13.832 cv89.98 13.8682 90.0762 13.916 90.0762 14.0244 cv90.0762 14.4219 li90.0762 14.5537 89.9922 14.6016 89.8599 14.6016 cvcp84.1357 19.1475 mo84.1357 17.9209 83.6431 17.1387 82.5127 17.1387 cv81.394 17.1387 80.9009 17.9082 80.9009 19.1475 cv80.9009 20.0615 li80.9009 21.2881 81.3823 22.0693 82.5127 22.0693 cv83.6309 22.0693 84.1357 21.2998 84.1357 20.0615 cv84.1357 19.1475 licp82.5127 22.9961 mo80.7446 22.9961 79.8428 21.8291 79.8428 20.0615 cv79.8428 19.1475 li79.8428 17.3799 80.7446 16.2129 82.5127 16.2129 cv84.2803 16.2129 85.1938 17.3799 85.1938 19.1475 cv85.1938 20.0615 li85.1938 21.8291 84.2803 22.9961 82.5127 22.9961 cvcp75.811 22.9355 mo75.5708 22.9707 75.2578 22.9961 75.0293 22.9961 cv73.9229 22.9961 73.394 22.707 73.394 21.3848 cv73.394 17.1875 li72.2271 17.0547 li72.0952 17.043 71.9985 16.9707 71.9985 16.8379 cv71.9985 16.5137 li71.9985 16.3809 72.0952 16.2969 72.2271 16.2969 cv73.394 16.2969 li73.394 15.1191 li73.394 14.998 73.478 14.9023 73.6104 14.8789 cv74.2354 14.7822 li74.2476 14.7822 74.2598 14.7822 74.2715 14.7822 cv74.3677 14.7822 74.4521 14.8662 74.4521 14.9863 cv74.4521 16.2969 li75.7505 16.2969 li75.8828 16.2969 75.9912 16.4063 75.9912 16.5381 cv75.9912 16.9473 li75.9912 17.0791 75.8828 17.1875 75.7505 17.1875 cv74.4521 17.1875 li74.4521 21.3848 li74.4521 22.0459 74.6201 22.1416 75.1011 22.1416 cv75.7749 22.1416 li75.9434 22.1416 76.0273 22.1895 76.0273 22.3105 cv76.0273 22.7305 li76.0273 22.8389 75.9673 22.9121 75.811 22.9355 cvcp70.6401 22.9121 mo70.063 22.9121 li69.9307 22.9121 69.8223 22.8027 69.8223 22.6709 cv69.8223 18.7148 li69.8223 17.5 69.4136 17.127 68.4995 17.127 cv67.9946 17.127 67.4292 17.3193 66.876 17.5957 cv66.876 22.6709 li66.876 22.791 66.7681 22.9121 66.6357 22.9121 cv66.0464 22.9121 li65.9263 22.9121 65.8179 22.8027 65.8179 22.6709 cv65.8179 16.5381 li65.8179 16.4063 65.9141 16.2969 66.0464 16.2969 cv66.6475 16.2969 li66.7798 16.2969 66.876 16.4063 66.876 16.5381 cv66.876 16.7666 li67.5376 16.3936 68.0786 16.2129 68.7881 16.2129 cv70.231 16.2129 70.8809 17.1152 70.8809 18.7148 cv70.8809 22.6709 li70.8809 22.8027 70.7725 22.9121 70.6401 22.9121 cvcp63.3047 19.0273 mo63.3047 17.668 62.7876 17.1387 61.7295 17.1387 cv60.6948 17.1387 60.1177 17.7285 60.1177 19.0273 cv60.1177 19.1348 li63.3047 19.1348 li63.3047 19.0273 licp64.1465 19.9414 mo60.1177 19.9414 li60.1177 20.1094 li60.1177 21.541 60.6831 22.0693 61.7896 22.0693 cv62.4868 22.0693 63.377 22.0215 63.9302 21.9375 cv63.9541 21.9375 63.9658 21.9375 63.9902 21.9375 cv64.0864 21.9375 64.1826 21.9854 64.1826 22.1055 cv64.1826 22.5146 li64.1826 22.6709 64.1343 22.7549 63.9419 22.791 cv63.2563 22.9238 62.5952 22.9961 61.7896 22.9961 cv60.4067 22.9961 59.0596 22.3457 59.0596 20.1094 cv59.0596 19.0273 li59.0596 17.3076 60.0098 16.2129 61.7295 16.2129 cv63.4849 16.2129 64.375 17.3193 64.375 19.0273 cv64.375 19.6768 li64.375 19.832 64.291 19.9414 64.1465 19.9414 cvcp57.4004 22.9121 mo56.8228 22.9121 li56.6904 22.9121 56.5825 22.8027 56.5825 22.6709 cv56.5825 18.4141 li56.5825 17.4043 56.1138 17.127 55.4883 17.127 cv55.0552 17.127 54.5503 17.2715 54.0815 17.4521 cv54.1538 17.7168 54.1895 18.0293 54.1895 18.3896 cv54.1895 22.6709 li54.1895 22.791 54.1055 22.9121 53.9731 22.9121 cv53.3354 22.9121 li53.2153 22.9121 53.1313 22.8027 53.1313 22.6709 cv53.1313 18.3896 li53.1313 17.3438 52.8306 17.127 52.2051 17.127 cv51.7725 17.127 51.2432 17.3438 50.7383 17.5957 cv50.7383 22.6709 li50.7383 22.791 50.6538 22.9121 50.522 22.9121 cv49.8843 22.9121 li49.7642 22.9121 49.6802 22.8027 49.6802 22.6709 cv49.6802 16.5381 li49.6802 16.4063 49.7759 16.2969 49.9087 16.2969 cv50.5098 16.2969 li50.6421 16.2969 50.7383 16.4063 50.7383 16.5381 cv50.7383 16.7666 li51.2192 16.4658 51.8325 16.2012 52.4941 16.2012 cv53.0112 16.2012 53.396 16.3457 53.6968 16.6943 cv54.3579 16.3809 55.0674 16.2012 55.6929 16.2012 cv56.7749 16.2012 57.6411 16.7422 57.6411 18.4141 cv57.6411 22.6709 li57.6411 22.8027 57.5327 22.9121 57.4004 22.9121 cvcp48.3452 22.9355 mo48.105 22.9707 47.792 22.9961 47.5635 22.9961 cv46.457 22.9961 45.9282 22.707 45.9282 21.3848 cv45.9282 17.1875 li44.7612 17.0547 li44.6294 17.043 44.5332 16.9707 44.5332 16.8379 cv44.5332 16.5137 li44.5332 16.3809 44.6294 16.2969 44.7612 16.2969 cv45.9282 16.2969 li45.9282 15.1191 li45.9282 14.998 46.0122 14.9023 46.1445 14.8789 cv46.77 14.7822 li46.7817 14.7822 46.7939 14.7822 46.8062 14.7822 cv46.9023 14.7822 46.9863 14.8662 46.9863 14.9863 cv46.9863 16.2969 li48.2852 16.2969 li48.4175 16.2969 48.5254 16.4063 48.5254 16.5381 cv48.5254 16.9473 li48.5254 17.0791 48.4175 17.1875 48.2852 17.1875 cv46.9863 17.1875 li46.9863 21.3848 li46.9863 22.0459 47.1548 22.1416 47.6357 22.1416 cv48.3091 22.1416 li48.4775 22.1416 48.5615 22.1895 48.5615 22.3105 cv48.5615 22.7305 li48.5615 22.8389 48.5015 22.9121 48.3452 22.9355 cvcp43.6553 17.127 mo43.1025 17.127 42.5972 17.2715 41.9956 17.6328 cv41.9956 22.6709 li41.9956 22.791 41.8877 22.9121 41.7554 22.9121 cv41.166 22.9121 li41.0459 22.9121 40.9375 22.8027 40.9375 22.6709 cv40.9375 16.5381 li40.9375 16.4063 41.0337 16.2969 41.166 16.2969 cv41.7314 16.2969 li41.8638 16.2969 41.96 16.4063 41.96 16.5381 cv41.96 16.79 li42.561 16.3691 43.1143 16.2129 43.6553 16.2129 cv43.8237 16.2129 43.9077 16.2852 43.9077 16.4297 cv43.9077 16.9229 li43.9077 17.0547 43.8237 17.127 43.6553 17.127 cvcp38.2441 19.7129 mo37.354 19.7129 li35.8989 19.7129 35.5142 20.0371 35.5142 20.8906 cv35.5142 21.0352 li35.5142 21.9014 35.9229 22.1299 36.6206 22.1299 cv37.1738 22.1299 37.6665 21.9609 38.2441 21.6484 cv38.2441 19.7129 licp39.0615 22.9121 mo38.5083 22.9121 li38.3765 22.9121 38.2681 22.8027 38.2681 22.6709 cv38.2681 22.4063 li37.6909 22.7432 37.0898 22.9961 36.416 22.9961 cv35.394 22.9961 34.4561 22.5508 34.4561 21.0469 cv34.4561 20.9033 li34.4561 19.6045 35.2139 18.9551 37.354 18.9551 cv38.2441 18.9551 li38.2441 18.4746 li38.2441 17.4639 37.8955 17.1152 36.9575 17.1152 cv36.1758 17.1152 35.5981 17.1631 35.1172 17.2109 cv35.0933 17.2109 35.0815 17.2109 35.0571 17.2109 cv34.9492 17.2109 34.8408 17.1748 34.8408 17.0195 cv34.8408 16.5977 li34.8408 16.4658 34.9248 16.3936 35.0933 16.3691 cv35.5864 16.2852 36.1392 16.2129 36.9575 16.2129 cv38.6284 16.2129 39.3022 17.0547 39.3022 18.4746 cv39.3022 22.6709 li39.3022 22.8027 39.1938 22.9121 39.0615 22.9121 cvcp32.2192 19.1836 mo32.2192 17.9209 31.8467 17.1035 30.6563 17.1035 cv30.1509 17.1035 29.5854 17.1631 29.249 17.2227 cv29.249 21.9854 li29.646 22.0576 30.2715 22.1055 30.6563 22.1055 cv31.8345 22.1055 32.2192 21.3359 32.2192 20.0488 cv32.2192 19.1836 licp30.6563 22.9961 mo30.2832 22.9961 29.7183 22.9473 29.249 22.8633 cv29.249 25.04 li29.249 25.1602 29.1528 25.2686 29.0205 25.2686 cv28.4072 25.2686 li28.2871 25.2686 28.1909 25.1719 28.1909 25.04 cv28.1909 16.7666 li28.1909 16.6094 28.2271 16.5381 28.4438 16.4902 cv29.0806 16.334 29.9229 16.2129 30.6563 16.2129 cv32.4478 16.2129 33.2778 17.3799 33.2778 19.1836 cv33.2778 20.0488 li33.2778 21.9375 32.4116 22.9961 30.6563 22.9961 cvcp25.6777 19.0273 mo25.6777 17.668 25.1606 17.1387 24.1021 17.1387 cv23.0679 17.1387 22.4907 17.7285 22.4907 19.0273 cv22.4907 19.1348 li25.6777 19.1348 li25.6777 19.0273 licp26.5195 19.9414 mo22.4907 19.9414 li22.4907 20.1094 li22.4907 21.541 23.0562 22.0693 24.1626 22.0693 cv24.8599 22.0693 25.75 22.0215 26.3032 21.9375 cv26.3267 21.9375 26.3389 21.9375 26.3633 21.9375 cv26.4595 21.9375 26.5557 21.9854 26.5557 22.1055 cv26.5557 22.5146 li26.5557 22.6709 26.5073 22.7549 26.3149 22.791 cv25.6294 22.9238 24.9683 22.9961 24.1626 22.9961 cv22.7798 22.9961 21.4326 22.3457 21.4326 20.1094 cv21.4326 19.0273 li21.4326 17.3076 22.3828 16.2129 24.1021 16.2129 cv25.8579 16.2129 26.748 17.3193 26.748 19.0273 cv26.748 19.6768 li26.748 19.832 26.6641 19.9414 26.5195 19.9414 cvcp19.0518 17.6328 mo19.0518 15.4551 17.9453 14.8301 16.5024 14.8301 cv15.937 14.8301 15.5645 14.8418 15.1675 14.8662 cv15.1675 22.0332 li15.5522 22.0576 15.937 22.0576 16.5024 22.0576 cv17.9453 22.0576 19.0518 21.4199 19.0518 19.2559 cv19.0518 17.6328 licp16.5024 22.9961 mo15.5884 22.9961 14.6626 22.9355 14.3135 22.875 cv14.1577 22.8516 14.061 22.7549 14.061 22.5742 cv14.061 14.3125 li14.061 14.1445 14.1577 14.0371 14.3135 14.0127 cv14.6626 13.9521 15.5884 13.8926 16.5024 13.8926 cv18.7271 13.8926 20.146 15.0352 20.146 17.6328 cv20.146 19.2559 li20.146 21.8291 18.7271 22.9961 16.5024 22.9961 cvcp205.884 18.4258 mo205.884 17.7051 205.559 17.1387 204.261 17.1387 cv202.914 17.1387 202.637 17.752 202.637 18.4258 cv202.637 18.5225 li202.637 19.0508 202.878 19.749 204.261 19.749 cv205.559 19.749 205.884 19.2441 205.884 18.5225 cv205.884 18.4258 licp205.98 23.3564 mo205.98 22.8867 205.595 22.6953 204.513 22.418 cv203.154 22.0703 li202.806 22.3701 202.566 22.6709 202.566 23.2969 cv202.566 23.4043 li202.566 24.0781 202.962 24.499 204.296 24.499 cv205.667 24.499 205.98 24.1143 205.98 23.4531 cv205.98 23.3564 licp206.955 17.1035 mo206.521 17.1875 li206.738 17.416 206.931 17.7764 206.931 18.4258 cv206.931 18.5225 li206.931 19.8447 206.113 20.5781 204.261 20.5781 cv203.624 20.5781 203.214 20.4824 202.866 20.3379 cv202.662 20.4346 202.566 20.5664 202.566 20.7471 cv202.566 20.9512 202.662 21.0596 202.938 21.1318 cv204.73 21.5889 li205.908 21.8887 207.039 22.2266 207.039 23.3564 cv207.039 23.4531 li207.039 24.6074 206.269 25.3164 204.296 25.3164 cv202.397 25.3164 201.531 24.583 201.531 23.4043 cv201.531 23.2969 li201.531 22.623 201.892 22.0703 202.289 21.7695 cv202.205 21.7334 li201.82 21.5645 201.652 21.168 201.652 20.7949 cv201.652 20.7832 li201.652 20.459 201.808 20.1094 202.144 19.917 cv201.771 19.5684 201.591 19.1348 201.591 18.5225 cv201.591 18.4258 li201.591 17.3555 202.193 16.2979 204.261 16.2979 cv206.894 16.2979 li207.039 16.2979 207.171 16.418 207.171 16.5625 cv207.171 16.875 li207.171 17.0313 207.086 17.0791 206.955 17.1035 cvcp199.824 22.9121 mo199.246 22.9121 li199.114 22.9121 199.005 22.8027 199.005 22.6709 cv199.005 18.7148 li199.005 17.5 198.597 17.127 197.683 17.127 cv197.178 17.127 196.613 17.3203 196.06 17.5967 cv196.06 22.6709 li196.06 22.791 195.951 22.9121 195.819 22.9121 cv195.23 22.9121 li195.109 22.9121 195.001 22.8027 195.001 22.6709 cv195.001 16.5381 li195.001 16.4063 195.097 16.2979 195.23 16.2979 cv195.832 16.2979 li195.963 16.2979 196.06 16.4063 196.06 16.5381 cv196.06 16.7666 li196.72 16.3936 197.262 16.2129 197.972 16.2129 cv199.416 16.2129 200.064 17.1152 200.064 18.7148 cv200.064 22.6709 li200.064 22.8027 199.956 22.9121 199.824 22.9121 cvcp192.981 22.9121 mo192.404 22.9121 li192.272 22.9121 192.164 22.8027 192.164 22.6709 cv192.164 16.5381 li192.164 16.4063 192.272 16.2979 192.404 16.2979 cv192.981 16.2979 li193.113 16.2979 193.222 16.4063 193.222 16.5381 cv193.222 22.6709 li193.222 22.8027 193.113 22.9121 192.981 22.9121 cvcp193.005 15.2393 mo192.392 15.2393 li192.259 15.2393 192.152 15.1309 192.152 14.998 cv192.152 14.0371 li192.152 13.9043 192.259 13.7969 192.392 13.7969 cv193.005 13.7969 li193.137 13.7969 193.246 13.9043 193.246 14.0371 cv193.246 14.998 li193.246 15.1309 193.137 15.2393 193.005 15.2393 cvcp190.636 17.127 mo190.083 17.127 189.578 17.2715 188.976 17.6328 cv188.976 22.6709 li188.976 22.791 188.869 22.9121 188.736 22.9121 cv188.147 22.9121 li188.027 22.9121 187.918 22.8027 187.918 22.6709 cv187.918 16.5381 li187.918 16.4063 188.015 16.2979 188.147 16.2979 cv188.712 16.2979 li188.844 16.2979 188.941 16.4063 188.941 16.5381 cv188.941 16.791 li189.542 16.3691 190.095 16.2129 190.636 16.2129 cv190.804 16.2129 190.889 16.2852 190.889 16.4297 cv190.889 16.9229 li190.889 17.0547 190.804 17.127 190.636 17.127 cvcp185.406 19.0273 mo185.406 17.668 184.888 17.1387 183.83 17.1387 cv182.796 17.1387 182.218 17.7285 182.218 19.0273 cv182.218 19.1348 li185.406 19.1348 li185.406 19.0273 licp186.247 19.9414 mo182.218 19.9414 li182.218 20.1094 li182.218 21.541 182.784 22.0703 183.89 22.0703 cv184.587 22.0703 185.478 22.0215 186.031 21.9375 cv186.054 21.9375 186.067 21.9375 186.09 21.9375 cv186.187 21.9375 186.283 21.9854 186.283 22.1055 cv186.283 22.5146 li186.283 22.6709 186.235 22.7549 186.042 22.791 cv185.357 22.9238 184.696 22.9961 183.89 22.9961 cv182.507 22.9961 181.16 22.3467 181.16 20.1094 cv181.16 19.0273 li181.16 17.3076 182.111 16.2129 183.83 16.2129 cv185.585 16.2129 186.476 17.3203 186.476 19.0273 cv186.476 19.6768 li186.476 19.833 186.391 19.9414 186.247 19.9414 cvcp178.863 19.0273 mo178.863 17.668 178.346 17.1387 177.289 17.1387 cv176.253 17.1387 175.677 17.7285 175.677 19.0273 cv175.677 19.1348 li178.863 19.1348 li178.863 19.0273 licp179.706 19.9414 mo175.677 19.9414 li175.677 20.1094 li175.677 21.541 176.242 22.0703 177.348 22.0703 cv178.046 22.0703 178.935 22.0215 179.489 21.9375 cv179.513 21.9375 179.525 21.9375 179.548 21.9375 cv179.645 21.9375 179.742 21.9854 179.742 22.1055 cv179.742 22.5146 li179.742 22.6709 179.693 22.7549 179.5 22.791 cv178.816 22.9238 178.154 22.9961 177.348 22.9961 cv175.965 22.9961 174.619 22.3467 174.619 20.1094 cv174.619 19.0273 li174.619 17.3076 175.569 16.2129 177.289 16.2129 cv179.044 16.2129 179.933 17.3203 179.933 19.0273 cv179.933 19.6768 li179.933 19.833 179.849 19.9414 179.706 19.9414 cvcp172.959 22.9121 mo172.382 22.9121 li172.25 22.9121 172.142 22.8027 172.142 22.6709 cv172.142 18.7148 li172.142 17.5 171.732 17.127 170.819 17.127 cv170.314 17.127 169.748 17.3203 169.195 17.5967 cv169.195 22.6709 li169.195 22.791 169.087 22.9121 168.955 22.9121 cv168.366 22.9121 li168.246 22.9121 168.136 22.8027 168.136 22.6709 cv168.136 16.5381 li168.136 16.4063 168.233 16.2979 168.366 16.2979 cv168.966 16.2979 li169.099 16.2979 169.195 16.4063 169.195 16.5381 cv169.195 16.7666 li169.857 16.3936 170.398 16.2129 171.107 16.2129 cv172.55 16.2129 173.199 17.1152 173.199 18.7148 cv173.199 22.6709 li173.199 22.8027 173.091 22.9121 172.959 22.9121 cvcp166.117 22.9121 mo165.539 22.9121 li165.408 22.9121 165.298 22.8027 165.298 22.6709 cv165.298 16.5381 li165.298 16.4063 165.408 16.2979 165.539 16.2979 cv166.117 16.2979 li166.25 16.2979 166.357 16.4063 166.357 16.5381 cv166.357 22.6709 li166.357 22.8027 166.25 22.9121 166.117 22.9121 cvcp166.14 15.2393 mo165.528 15.2393 li165.396 15.2393 165.287 15.1309 165.287 14.998 cv165.287 14.0371 li165.287 13.9043 165.396 13.7969 165.528 13.7969 cv166.14 13.7969 li166.273 13.7969 166.381 13.9043 166.381 14.0371 cv166.381 14.998 li166.381 15.1309 166.273 15.2393 166.14 15.2393 cvcp162.629 18.4258 mo162.629 17.7051 162.304 17.1387 161.006 17.1387 cv159.66 17.1387 159.382 17.752 159.382 18.4258 cv159.382 18.5225 li159.382 19.0508 159.623 19.749 161.006 19.749 cv162.304 19.749 162.629 19.2441 162.629 18.5225 cv162.629 18.4258 licp162.726 23.3564 mo162.726 22.8867 162.341 22.6953 161.259 22.418 cv159.9 22.0703 li159.55 22.3701 159.31 22.6709 159.31 23.2969 cv159.31 23.4043 li159.31 24.0781 159.707 24.499 161.042 24.499 cv162.414 24.499 162.726 24.1143 162.726 23.4531 cv162.726 23.3564 licp163.7 17.1035 mo163.267 17.1875 li163.484 17.416 163.675 17.7764 163.675 18.4258 cv163.675 18.5225 li163.675 19.8447 162.858 20.5781 161.006 20.5781 cv160.369 20.5781 159.96 20.4824 159.611 20.3379 cv159.407 20.4346 159.31 20.5664 159.31 20.7471 cv159.31 20.9512 159.407 21.0596 159.683 21.1318 cv161.475 21.5889 li162.654 21.8887 163.785 22.2266 163.785 23.3564 cv163.785 23.4531 li163.785 24.6074 163.015 25.3164 161.042 25.3164 cv159.142 25.3164 158.277 24.583 158.277 23.4043 cv158.277 23.2969 li158.277 22.623 158.637 22.0703 159.034 21.7695 cv158.95 21.7334 li158.565 21.5645 158.397 21.168 158.397 20.7949 cv158.397 20.7832 li158.397 20.459 158.552 20.1094 158.89 19.917 cv158.517 19.5684 158.336 19.1348 158.336 18.5225 cv158.336 18.4258 li158.336 17.3555 158.937 16.2979 161.006 16.2979 cv163.639 16.2979 li163.785 16.2979 163.917 16.418 163.917 16.5625 cv163.917 16.875 li163.917 17.0313 163.832 17.0791 163.7 17.1035 cvcp156.569 22.9121 mo155.992 22.9121 li155.859 22.9121 155.751 22.8027 155.751 22.6709 cv155.751 18.7148 li155.751 17.5 155.342 17.127 154.428 17.127 cv153.923 17.127 153.358 17.3203 152.804 17.5967 cv152.804 22.6709 li152.804 22.791 152.697 22.9121 152.564 22.9121 cv151.975 22.9121 li151.855 22.9121 151.747 22.8027 151.747 22.6709 cv151.747 16.5381 li151.747 16.4063 151.843 16.2979 151.975 16.2979 cv152.576 16.2979 li152.708 16.2979 152.804 16.4063 152.804 16.5381 cv152.804 16.7666 li153.466 16.3936 154.007 16.2129 154.716 16.2129 cv156.16 16.2129 156.81 17.1152 156.81 18.7148 cv156.81 22.6709 li156.81 22.8027 156.701 22.9121 156.569 22.9121 cvcp150.147 22.9355 mo149.691 22.9834 148.511 22.9961 147.802 22.9961 cv146.119 22.9961 145.241 22.3584 145.241 20.7588 cv145.241 16.1289 li145.241 14.5293 146.119 13.8926 147.802 13.8926 cv148.511 13.8926 149.642 13.916 150.147 13.9648 cv150.219 13.9766 150.267 14.0605 150.267 14.1328 cv150.267 14.7344 li150.267 14.8184 150.219 14.8789 150.135 14.8789 cv147.814 14.8789 li146.54 14.8789 146.335 15.2148 146.335 16.1289 cv146.335 17.8008 li150.027 17.8008 li150.16 17.8008 150.267 17.9092 150.267 18.041 cv150.267 18.498 li150.267 18.6309 150.16 18.7383 150.027 18.7383 cv146.335 18.7383 li146.335 20.7588 li146.335 21.6729 146.54 22.0098 147.814 22.0098 cv150.135 22.0098 li150.219 22.0098 150.267 22.0703 150.267 22.1543 cv150.267 22.7676 li150.267 22.8398 150.219 22.9238 150.147 22.9355 cvcp139.808 22.9121 mo139.183 22.9121 li139.064 22.9121 138.967 22.8027 138.967 22.6709 cv138.967 14.0967 li138.967 13.9766 139.051 13.8682 139.183 13.8682 cv139.808 13.8682 li139.929 13.8682 140.025 13.9648 140.025 14.0967 cv140.025 22.6709 li140.025 22.791 139.941 22.9121 139.808 22.9121 cvcp136.153 19.7129 mo135.263 19.7129 li133.808 19.7129 133.423 20.0371 133.423 20.8906 cv133.423 21.0352 li133.423 21.9014 133.832 22.1299 134.529 22.1299 cv135.083 22.1299 135.576 21.9609 136.153 21.6484 cv136.153 19.7129 licp136.97 22.9121 mo136.417 22.9121 li136.285 22.9121 136.177 22.8027 136.177 22.6709 cv136.177 22.4063 li135.599 22.7432 134.999 22.9961 134.326 22.9961 cv133.302 22.9961 132.365 22.5508 132.365 21.0469 cv132.365 20.9033 li132.365 19.6045 133.123 18.9551 135.263 18.9551 cv136.153 18.9551 li136.153 18.4746 li136.153 17.4639 135.804 17.1152 134.867 17.1152 cv134.084 17.1152 133.507 17.1631 133.027 17.2109 cv133.001 17.2109 132.99 17.2109 132.966 17.2109 cv132.857 17.2109 132.75 17.1758 132.75 17.0195 cv132.75 16.5977 li132.75 16.4658 132.833 16.3936 133.001 16.3691 cv133.496 16.2852 134.048 16.2129 134.867 16.2129 cv136.538 16.2129 137.211 17.0547 137.211 18.4746 cv137.211 22.6709 li137.211 22.8027 137.103 22.9121 136.97 22.9121 cvcp131.16 22.8633 mo130.763 22.9355 130.222 22.9961 129.657 22.9961 cv128.021 22.9961 127.095 21.8418 127.095 20.0732 cv127.095 19.1348 li127.095 17.3672 128.009 16.2129 129.657 16.2129 cv130.21 16.2129 130.763 16.2734 131.16 16.3457 cv131.353 16.3809 131.401 16.4414 131.401 16.6104 cv131.401 17.043 li131.401 17.1631 131.304 17.2236 131.197 17.2236 cv131.172 17.2236 131.16 17.2236 131.148 17.2236 cv130.619 17.1631 130.246 17.1387 129.657 17.1387 cv128.695 17.1387 128.154 17.7764 128.154 19.1348 cv128.154 20.0732 li128.154 21.4199 128.683 22.0693 129.657 22.0693 cv130.246 22.0693 130.619 22.0449 131.148 21.9854 cv131.16 21.9854 131.172 21.9854 131.197 21.9854 cv131.304 21.9854 131.401 22.0449 131.401 22.166 cv131.401 22.5986 li131.401 22.7549 131.353 22.8271 131.16 22.8633 cvcp125.292 22.9121 mo124.714 22.9121 li124.582 22.9121 124.474 22.8027 124.474 22.6709 cv124.474 16.5381 li124.474 16.4063 124.582 16.2969 124.714 16.2969 cv125.292 16.2969 li125.424 16.2969 125.533 16.4063 125.533 16.5381 cv125.533 22.6709 li125.533 22.8027 125.424 22.9121 125.292 22.9121 cvcp125.316 15.2393 mo124.703 15.2393 li124.57 15.2393 124.462 15.1309 124.462 14.998 cv124.462 14.0371 li124.462 13.9043 124.57 13.7959 124.703 13.7959 cv125.316 13.7959 li125.449 13.7959 125.556 13.9043 125.556 14.0371 cv125.556 14.998 li125.556 15.1309 125.449 15.2393 125.316 15.2393 cvcp122.947 17.127 mo122.394 17.127 121.888 17.2715 121.288 17.6328 cv121.288 22.6709 li121.288 22.791 121.179 22.9121 121.046 22.9121 cv120.458 22.9121 li120.337 22.9121 120.229 22.8027 120.229 22.6709 cv120.229 16.5381 li120.229 16.4063 120.326 16.2969 120.458 16.2969 cv121.023 16.2969 li121.156 16.2969 121.251 16.4063 121.251 16.5381 cv121.251 16.791 li121.853 16.3691 122.406 16.2129 122.947 16.2129 cv123.115 16.2129 123.199 16.2852 123.199 16.4297 cv123.199 16.9229 li123.199 17.0547 123.115 17.127 122.947 17.127 cvcp118.809 22.9355 mo118.568 22.9717 118.255 22.9961 118.027 22.9961 cv116.921 22.9961 116.392 22.707 116.392 21.3848 cv116.392 17.1875 li115.226 17.0547 li115.093 17.043 114.998 16.9707 114.998 16.8379 cv114.998 16.5137 li114.998 16.3809 115.093 16.2969 115.226 16.2969 cv116.392 16.2969 li116.392 15.1191 li116.392 14.998 116.476 14.9023 116.609 14.8789 cv117.234 14.7822 li117.246 14.7822 117.257 14.7822 117.27 14.7822 cv117.366 14.7822 117.451 14.8662 117.451 14.9863 cv117.451 16.2969 li118.75 16.2969 li118.881 16.2969 118.99 16.4063 118.99 16.5381 cv118.99 16.9473 li118.99 17.0791 118.881 17.1875 118.75 17.1875 cv117.451 17.1875 li117.451 21.3848 li117.451 22.0449 117.619 22.1416 118.099 22.1416 cv118.773 22.1416 li118.941 22.1416 119.025 22.1895 119.025 22.3105 cv119.025 22.7305 li119.025 22.8398 118.965 22.9121 118.809 22.9355 cvcp114.012 22.8633 mo113.615 22.9355 113.074 22.9961 112.509 22.9961 cv110.874 22.9961 109.948 21.8418 109.948 20.0732 cv109.948 19.1348 li109.948 17.3672 110.861 16.2129 112.509 16.2129 cv113.062 16.2129 113.615 16.2734 114.012 16.3457 cv114.205 16.3809 114.253 16.4414 114.253 16.6104 cv114.253 17.043 li114.253 17.1631 114.157 17.2236 114.048 17.2236 cv114.025 17.2236 114.012 17.2236 114 17.2236 cv113.471 17.1631 113.098 17.1387 112.509 17.1387 cv111.546 17.1387 111.005 17.7764 111.005 19.1348 cv111.005 20.0732 li111.005 21.4199 111.535 22.0693 112.509 22.0693 cv113.098 22.0693 113.471 22.0449 114 21.9854 cv114.012 21.9854 114.025 21.9854 114.048 21.9854 cv114.157 21.9854 114.253 22.0449 114.253 22.166 cv114.253 22.5986 li114.253 22.7549 114.205 22.8271 114.012 22.8633 cvcp107.651 19.0273 mo107.651 17.668 107.134 17.1387 106.076 17.1387 cv105.041 17.1387 104.464 17.7285 104.464 19.0273 cv104.464 19.1348 li107.651 19.1348 li107.651 19.0273 licp108.493 19.9414 mo104.464 19.9414 li104.464 20.1094 li104.464 21.541 105.029 22.0693 106.135 22.0693 cv106.833 22.0693 107.723 22.0215 108.276 21.9375 cv108.3 21.9375 108.312 21.9375 108.336 21.9375 cv108.433 21.9375 108.529 21.9854 108.529 22.1055 cv108.529 22.5146 li108.529 22.6709 108.48 22.7549 108.289 22.791 cv107.603 22.9238 106.941 22.9961 106.135 22.9961 cv104.752 22.9961 103.406 22.3457 103.406 20.1094 cv103.406 19.0273 li103.406 17.3076 104.356 16.2129 106.076 16.2129 cv107.832 16.2129 108.721 17.3193 108.721 19.0273 cv108.721 19.6768 li108.721 19.833 108.637 19.9414 108.493 19.9414 cvcp101.65 22.9121 mo101.025 22.9121 li100.905 22.9121 100.809 22.8027 100.809 22.6709 cv100.809 14.0967 li100.809 13.9766 100.893 13.8682 101.025 13.8682 cv101.65 13.8682 li101.771 13.8682 101.867 13.9648 101.867 14.0967 cv101.867 22.6709 li101.867 22.791 101.783 22.9121 101.65 22.9121 cvcp99.0889 22.9355 mo98.6318 22.9834 97.4536 22.9961 96.7437 22.9961 cv95.0605 22.9961 94.1826 22.3584 94.1826 20.7588 cv94.1826 16.1289 li94.1826 14.5293 95.0605 13.8926 96.7437 13.8926 cv97.4536 13.8926 98.584 13.916 99.0889 13.9648 cv99.1611 13.9766 99.209 14.0605 99.209 14.1328 cv99.209 14.7344 li99.209 14.8184 99.1611 14.8789 99.0771 14.8789 cv96.7559 14.8789 li95.481 14.8789 95.2769 15.2148 95.2769 16.1289 cv95.2769 17.8008 li98.9688 17.8008 li99.1011 17.8008 99.209 17.9082 99.209 18.041 cv99.209 18.498 li99.209 18.6309 99.1011 18.7383 98.9688 18.7383 cv95.2769 18.7383 li95.2769 20.7588 li95.2769 21.6729 95.481 22.0098 96.7559 22.0098 cv99.0771 22.0098 li99.1611 22.0098 99.209 22.0693 99.209 22.1543 cv99.209 22.7676 li99.209 22.8398 99.1611 22.9238 99.0889 22.9355 cvcp0 0 0 0.56 cmykf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.1%%For: (PeopleGroup) (PeopleGroup)%%Title: (DTU Elektro B UK SH.eps)%%CreationDate: 27/02/08 18:08%AI9_DataStream%Gb",KCNCFTP2J!ls1g9.0cdO]'FI)+219HVI#)ilVg_%GB6Psd2B6Ig[^E5m:R7lUkLUgH"e^`AZ7+H?WMV-rd7F<A,SGr]+n=)a%e(]YIMp%T6e(]BOAQ1O)<;CiN90:Qo(LMU`^Fk">IdE@<Q`fmUE9s&$8t0g3N!`RbEE+ojgAL[BiHfcjs5Vr&q=<Rdg$R>Wh8d9h%VH7En^D:0N^9qkpQWMALmG7HgrQ($mJ>qhYo\oB+iqnMs?^>op7AU0lIY5'.p@7M*nh26c9]0i-cEA9AQ9U*^QP\OcLT`qZ([_`]%I_ED/%p]Yu<M;X`n,DeUR6>r1^V.Vk!g'$=rT?u"GF'E?n':>SDf>X@CMN_/jn4D0Zhl$YfTbJgLO]5g98)`n\#L>#;5HarXMP5.%q>5hqjZbAa^\qa9h:_Vcc2I%MpGAB^0@'q8PIp_DQi@C;;[-QY^Zh5[*j1fQJ%N8(V_LlZD5c`D[hm5gJ=]kmEHMKG/FcU%2\l,`%m-`^#50W$ReH:d#0;5HE<P\7kg$d+roR\/K/8p!OrHIVuX2]o,eYNVfe_'2MWp=u\KR_/)9AIU&I[e25.V]_;JL710(FJ(\0I8s=%?,!q`q2<j"NLd&Kd48L*+(ek=MIu:[GF'-!`!&IX>r2'I-[=U[C?UZ;g;4*[HU,LIrUP]`&u]O<?#$Dka5=S-Qi-bF&D57\A\auH%A?>'Y%iq/E1:WaEh4KB-2qErefCGQ/l0n@3;e>aO)Lg9qr,*GJ4duaWC\XqfI&f,PX#5=;=?p`'<S(%sTWj1.:o^[l<*_-mdUprn%RAPNj:&':n9`q5\#"l]Zp^O'31FP,M6-\'k^7!6=b[LV1/f&R=[205GI^,P,e77bsonVBpha1'5?AHK1^S)@#$%>5j(mBoC^4R$6%D^Y]4K&88"_$&;B0u7f'+,gJS6VE([C)KJD^L>pe(SEH/GUHp`h@HGj>jr]T//A5Lq15+NNX:Vs-2:1lC#mcjl9"Zuh@;]83Kb$I%"/TCQn/GQ*)5L-YG;Nh!(J;O=A;1C@<#<OZ^YsYr3gtQn9g&^er.\*'557jY85qp#V>%kHKa+4569d5<e3Cf2PTmaH?>/ELHg!K_%Mr%)YbC!.nq11:T3h]4a*Rpr`e$h"pp^O'U^0uDB'<2GTTaZm_pdur=edc,KhE]RB1b?!Xe-8&`8g.B"FWkfuGc0C1f'0l$2s@fr%Ll@>i%]/7Re2l-Xn*,UR:+MO,RHC#Y6S0kYLZg\!G,eJg-*&o*/AY8ZIA1VQqa>p1440.koJFaCjYRLp,JbYT:=tZB8q5s9e1T9N%Wl-"S93b?a:K>e$kqE"NAd1Ka0DuSl=\FkKQ[YI"s/3X(j$!@uH[3*`T?2c#8Uou;3i2kS^[tHP24kO-rM?-M'Dd4T90["c+asoB%#JXtZl2U<=qA[FUR@1=FX5(WHk+u?7-6E/!X2VqV[]5je_m<Hi"2Ee"TMQ\ELN<!lJQbqj+b$\8o?'pUC,+50QP4ne-`(3WWH8<W%nQ`ptqs^Hi^0=Pan/:-$E,%%BO^:4=S+I`.kN:`mn9<ju9"gi>"F`^2n8A"oUS1I_QTjHeH"ip'X'8E==r<`aec5cdi?(2O5:kFE%Vn!.V)>`M"4&?"89eB57l*n#/F$i*bec74NCOj5?Mm!C>0F'EUGQWsDCXE+14:sd800I3ThV_(S)E5'"=HYVj?YDlI#dXUe(cR^,%C4XcdQ@+&9W(,n?GnZ]HlP%3BH5FgLr*[,EX.aof5(M4?.KT,r\d<g\'S(W'Yn,4H]Q>iF)CMq\^)%^H1!c+hSM01edUkC$S<##i%=g1\s_D*aH_RgI.L^JElQ&IB@=/&9[/Qg&UWiGbp'->UAKd(3$_((#D(ImQAF6-/1D<'BX@$K9LU"'N1(E2?&Y[4&!G=(aD]Egq=%A\kmU?!>G$$M>oHd=gb;i)#nhKknm=*8ZV81tCf^0r(E^Hil/?^7,J4EdB#q@gr*YY':(O!a?%s8eb+>2i-:825/>Q*i*5;XT`d[%=_]2*)"U*po!c?Xhe8g=*GJCM,%'A._VnNg&M3TfZ:On`@'n)70>4"I9Qdu7b'3>mXqt,5/A\)T[H)8?;II6/]0JO/T$4>7V3]T_%_l"15+n;u8mY-Tc8dhe0&'Fc%(dpDlUpBX+n/;&VY"tmjFt/uSq-RjJh<XR-YbH)bo9th':^SUOl9m&0`q*YJh!d7XVtl5sRHC`m%L#<Km!q@'&QN$!uP0^FL$HJ8&;!g(]McSS\n:XSDA(gbf9kKX1R%?-b)>QL^U>;J:-*&7s8,kh+Bo^VT'1JhuU`RYUe%='[VKQF0%::aCIPg(^XelTjgdgYELb,J^ebubGQ"o`h3pRSf7[s!r(fUf?qIFFQoVV6+@T)Y>+Yt!;:GFi"Y,e][KG?e(j-dqqR2>R9.S]',\%GZT[(Zs(G^..W[o%Pk'Es19nRpi5QHI(*=F^Vk1Y-C+&E6M;kdkK5*n0#%2IjQ6O10D&t%HO],DO(+OQna?,9p)SPt5N=]+QhM"4%aRFl_J+NVU."-@CL7dIPr5QMIn`h9Fp"-h1LC`;!]Y,or1qC-pANBVWm/HrsHF:Drq"XN<@J&FheHjONbC;&L2EnbNnFafpI_Gn7%hn.8H^\misr'"(l5l1-LiUVH.]qO'@@*?,#:%',e^*!<$H[?M)fD[7CPJINYo)%s;+0i]-%l]1+eMhK!m[GPIpNuY#:jW'Z_O(/T%qX!S6lLNcefn]<gkC##Iq*)NL^>%UXMlX1rAZCgkQ+mFBo(VHWDQbZW?70L3+?uIRh-Za\/RSPWnU>bs]s[\,mHr_PL,O^Vh#(Z-%Fo*?JA;$K/>`A[Bm-_cgVI>qM?J\q?'nYa3U%.jQ"8GJXYMYt#=CQLCh_24plN(ODF`qhL2aVb*'%g!Qhn[Rl/;[c>;>V[o`gl_8%HF8;O<baJ)ahIf@h:]bY@(1V'r@*-l4hUE!M*3$Of0qn@I/q`Si]iA$;3[8b>0au@02K`E!n0uBZnfe(3]p/_eYn=nWgT<V'=Fd]%8l\lf.hab,)O.5D=%tQOVU_c:=!pGEd%sdSdTRT,Ffh5.]$V0SeMBA?-[K2nUJ,7+!J>f;SFNI2'/ML%1H-[n@8!YQI\a*Nf%,Ot%f%\2>m*s>Ign*.e?&#L^[B<5@lah8IYFBi9:[;0R5@I*co\jN$d.5$#n77&+7*@rn6-:m$TQ-o1_5!jsH608K3/e`1/;'6sbJ7]Q%4Eq]lJ`@OT#S$tFJd99u%B0hig-.'V\U<i9J^)WY$7Lh]\:/*I)B-q7hr&$O_siO;3gnd/B6Z2R36a:Ucht,K61pVCfW"B?/C`ma%2q,AmZ@M?i+Pqf$Y[K::"btVtR&HYoLP_MYn,^U<q?"D=:P6"?@\HVOlHWU&J/miNW(cXh\CP(<Pmq2-TUpG%UM2u<'2W%kBeWs^%W\?;A+Ms<r=gKf#P;%VQb[hf,eV)VX_E=/nc;2=4c\aslP<][e18tA4Qp<3&+Ib.5cq0n,=eI5_%(@ObV=qF<fOee3)jP$3@;2/L%04OfW7])gl&?:l@Bjnr"FPgrD^:TDXiaK[8jioT1ZV4ocH#n`623_/3K<1cbAPlWYC4'PT_hsa;NN9Y+\]0=DQZh@kBlOf%-Ka+,%[r?2>eQoQWFQCrq\(V5%c*J%pDDCKe4ictpg8YB.Jeu7^i$QK>`)"cI&[B&QNhmM_#ZH>U**X"^7HB5SZ@oS#g9U[Zb8+.rA&/GX%/^B/Cr)AX)lS(*Y?psM3VON7$p%Ue2HjW&4>'hB0rPc@=6I.a:B7dGt*3B^g26^J>1WibdE:ao#6=7\bkmR;:s"\@3a!qHV0&_bm%c>p'=4GF3C(@*=@gEc4BD7@FGAQ3r)rj+#nVGc:(;*!4-2J%kf&N)ks;E"WN7c'+C27?7I[F`B!Dg&6@r>=CE?k!8h(KN2<#kR%1%p;<o8[RuTS1Cg'-]kF<Ipn!"Z9/UJPRXBW(j[e^B1:9`X(g6rEf9KDP$kmsGkX2"/-&%U'#Kh4hoq<+nob`-VRk^uR`28N2XaWD9%Zh7G2`a_r4*K!su`%UV>V]nG%e^tX)>%LXe_odbCVt6j3Ldoap;KUECOUCs'.P*D[M))></5?uP`G@879GYmi0AN:.fS'W0D\[Lh%H*TCi3LQM`:8TD&PNKfU\<Hd-##SG,%\ghW=j0\(oD*2dSPSCmg_Y#jYNL(HJoFirk#BVAZ]j'i2OdERP?B^51H2@IG%Q>N>m1F5%:)DBCl$PO]:8a:i1\F[*Xf"(ue9Y;P?*Z".Moj(O5+,-BPKBVgpkbKi'-$"1*Vc$096S^Q2"P>19UeW&1qms(h:T`#4g>@<ZLeNS%iobdQVg]9JlO30/m;7sAOi"t]8(W]h\Z)(.`d-`Pm;*>aF^UaiE.^T-;U=Z3crMJZC[j];WIksr!iN+$2^o-H#V++^W&iD#nh`Z*%EOH@'d!FBjD3jUIFlM3gl)l>R15d[ZG[-#FQ]^#+nphHVQMH\Q80CAjs,5dSs6i:Q5<dkN\6=oA$@oI`>l.gu79C-_lG"Y6_OC4(%Oj&u[Q*`(W[:@Z_*CU)=U2*g3ZRBO2`NOP$^QPbT-\0I"'cG5sW/S&V&51/%Wm@>$M[1NEZoh##jE-CPn%(l%/,r$r.$5oB8bF`;%FoP`Hs0/FsegZp>e@02A;m_4aFcY5Hf^omRIl^Ka]#V4NNoK6tC%.PK1I\)?g?+4&J364A+:q?T8-CaN+tZ:,!AX\H9bB'O3!HAf%]S:'Mmfd."![T?NZnOLk[FGiL':pPT]1HCVJKqM90/3DKX254C$BP5i\QX5D-k/BMqE1X+Q-KFu4TXG;O97cmXTJG+Z3WgKc@gTR%UXpiD,mT_XQugn?MImH$-]"p*i7q^AYbB7e"Wt8N,]NKli:6ESlVAjc+<[`#ri<70(r/br&mX'-6@5EY1i*q9].(V2Ym;NpLr!*D%9am[IN8K?W_.tE,a-hXP-gY-F"d0a4"Yl5"#-_#LG&mL?`(q=>i"'+d1p909p:>e9S7/?^$r%=$J=i#8IOsI`Yi@gt=eKB"$HA':%g^n'E&Mo?$)8]#enIi)>Ob+u1&0ldjKTS^M4@"%f!k0q9f]k0j5&B,?d)$4NZf[1]5ZQIr!t,C(]a\(b@6dO!VIpf$3Y,-)!gFJI%WIhKb!Mr$ld)@,%K_gTqdKe4\=.Z;\9Nob!HY0'hcSB?8Ss/MDUo20fdSH,k\mXW`p';=s/pZaW\G5jo2"@!T;]u+21)HNN2/OD"%[1cEjk_X[;FY!CnhH[;4:EI\T*?W<tTZU]/]&@h<N1k-8[P?MH].Gr4gYQQf]C"&"2QBtWJ,C!D`41g]Vob8"T:(.;bHYii)jRJ8%8c">:-!#=#k_D?#2k[)glR&QKg5[,AW?s^V_0;Q("j0`ij&"8UTk6Y!@[KI1');_IhaQ\naE4ANXMVg^NloI@3E`,ICf3I*.5&LE%Fa;BpQg99Yp1ki&c'J/63s0J$X><TXDNN=#qL20D4S/QMkQ#5NVu>1@D71ri>L+RA_AXl](I,Y,3-t(rN'X-kg\!jKF[7;5+<n3Y%jrOCZd57hB7jH07&pq!b[QUQpbIm%:U.qmV"YGGkIhW!,2ineUS[S=1]L-I'VNosdZbYbM]_rNb0ks.El4L!r7B9,#.U$jnZLYIH%e+;4`-SVkNPJpR61=n%Kq-I3`T;!pIFe7idB=?q/)bQ5!HLkI:DtR7LHAZQ[<u8ih:\I^dgOAdlLHKhJ'[I0iD:?;-f=56np4:FS%:h3%Ige<e<"_]BA8m>2+PH"h%g/QS/,3cA6`7gLi]1tfD]ddhpdgFN378H9./Q^Fm<GP]:bLP6MOj-k6K!i#n*gDMM>Gfc18o(.&%Qdf2:j$8_o<=Y;)Z9W7:oJt:^8>iLCrm.?O#J(piG;D:2"$.K<GpSV^'m2[dp4C"[TZRL3T8/QHG_2:d]&*qh^H!@f=eHOdHi\@U%oWb)ZBM^2^]b&`]^qrr77&'cH`;F=2OA/'MNjPY$+7e<jiJSZ"=W7cQ7E;.Q)pZl%ZC+RjA_&?`XsN//1>>.O6`OEQ9r8%OZkR%b%5sE%u7n?[HH*eeA'2()*A1!V:AReRhdWEm*5k]la$<:h!["qR&ct(NJaV2*8,l7XG(i5*KM&*!L/LF(@O;&o_Y0`k=@7GlCKgLD4%$7pu5RJtc7hceagUf$TZ7s@[lO4C(Ro]eW"HAbdEo2?&p]8,''f`J`^7Gju>pH6E</UiI&/=g7&^AjR5>4`)04$5*7n'`jBXf'h)%*kpb#Z]X_MXI+)n)sIeX^`?"O(fkH4&X%1"llBAi8(ZnN[<f4I*c1X#_"<2DO-]1.A,U)q5B7-&gBQ)Vn02J+BF$mc88\aUD'?GI%,hYO?Mb&sJ7<5_*15n%u:F++SZAg-q8@";\KqueK,[r)lL(Z5+Lp9@l-"nu`*J5pj@P_`"LQGOkS<2u'N$i."+Ti(>:rnGZAe["r%BXHMD%!l'L6&#5CT5)^;R^7kmHe+2mXgUNr5hTS59l#A]$`=KZ>/_DleiLuTT5?*bDLq4pK&3f9IB./BC>67=.p$WO3W\EGR(AG<%-eWRjQFP!u3g$KVMb`Wg-Z[m?Xuj#SU\BI<Hk*L!Xa9_bs79lNp7joO_7F%YRh`2NOTeSs/$e)beWU/BAZQn\crS1h+Y,>*38"h>%4n\ttp*N;u1qCG,8m1(T_lO+&!-bN5:"lTb.q\lQ7?7O5GCeq[?;f-j2gF`rcX#M.V3TGOO?:B`;e$V_93$nm>0D.e7/K:)H8+-'%cr&SU%5rmB#++'VE]l%]-03V[+"bOTUn!pC]=.#+f%8G>1E.kS`KiLM:#s"OZS`HQ#b"KsNST`,-Ujj!P=XM0YK:3.N3nKqD+Cp7%eRKAaCb^j%JJOBR=3V7'Og(#MU18dW22`1eAIE@EBSbk.N,9a*Jn_i6PXoDC7,5mDYtEjjJJTgn/l\Dj4eqc8#&2%&Q_j9\_Gc)K%L!d29N\:SiC,H3)BR=lW<^;^c<RhZO9DRI!Jlu#/DPP6P&EZls>>%l<Z*'X\Hud?">`S)aX96RW_8b5%E^XhJ3Z(j+J_&`\%kG5-%a9A`90eCA-2Iipj/#7BE>4eBq82Kqk.TH_LNGE1,@@6I`U:5rR>q&J_JkGAh"Bmn.I2KO(BM%Y0>\+`GkML/pcE<KMUNa8D^'An)%ING&P8*B'_q0@(2*hAonkNC7gH$"KVSY&F8kL'*NFFG:%T1A)-dJ8'0ING&P8*B%Y2YcpI`Vj`EkkmP(5EF+9U\"*@r&d#)O3Z'9%ORlE8?MA(4k=:e71gZi"HkJm/)2cN]."eJR6l2GQfaKHF;\[Wi,4W4*oS3.&GAkcP%`QUMM>7Y'gR$?c8ObOh?D`T";Ml)hEZR)X%"O:MOZmk1<PjE;K(NcLLF!L^XaO2V.@=+O#XeiY3e)&[?D`t#'M[^T[3ZW*,MdmJ3Q+3PYMd(6VH]9(ZgLmjN9TPrjFIu@$-#=9V%5FgS[2SFA5iUm,Uks^%\>uL5>1<bSP#Z@8L:R?Mc].m/tOV-qO7^e.ujiIsfaV("GR9HJgAF[g%BXq-G?\ci?"72s3Sh54>A@iOg%!,O.NL_3f,A>b[b9sr9Q%k^Z@h8dOcPa*oC=#"i&pC-ts;P2#L9g<PQ/`+"s/kFX<[E^rlI@k40ZTRqO!VH3dqbkC$[skU%S)<DA%mrR!^GiXdC)nm[m9Wq6?D46idP::*\Xr)UgPJuVI@Y-jPj>g`FC#Uq*cSRhlprp)-7%T#)5>&4bXsPjW-%4I8biQh,9O7oA8?p1f%3A>_]bKG`'7hM;^\Vi7X)nC<:*qbIA3o=5/)@Daf,.cQ(.k+Fk$.VTQeP6A"8d7`\E7(-^C.KPI/.GRM"fc76JQb#&gSTG[j;1fl%hYNN%hbF06"H#(IlaIPD)DW_lHFm5b@2gX<0bf&cd##M>:C]Mj;0431UP[$&#:nMMZ0Edp/T]eflf9[Yg]:0T@]Pu6Xb3uFd]D?L%\JfG<'6Mfh].?(`]&9p&!GMEtBQ4+n(5gZbN7Jr0<jXg!Figi`o3P#2/!4mT+rN<cVjY]G*2geN(u)'01o/PI8iF+bZE`drUdK_E%\'mcnMG@+p/?,"hE8J`%R!+]P,O+VGm<p;MP+ooh-n##pVR=n@eUC$=nH-,e^f\;*UO<M>8sFhB!g'G172WNp[*tO(;/hpl&S2Q<%SVpc[i`'LLE%tUt.6%q;1u89h8,&B=rfsAA[8HIr)4InE;D]N`1c=0bi?8"]V1,9%I#m"-qfd/ChaPQ#Eu(A@ou+c^)eVV]p\,AF%`6iLp2u6*&lD9lWDQJt&m8h,`cjX39-(;h<e4r'C!AG`'^h,ZB4+(uc_Zrt`%&Eu3`>2ZlZBdt,.9fJ=(>>hQ'#:DQl`'+U7r>dr%'9?;u;D&uJLm3Q<]GW'P$^8g-+tB]dpYV2%T<Gqb2oESG@FFNs-ITA]q2Cef:CMphc7gSQc=7@F;6[1;UDh26l:F4J)UlL*BZ8_a%Or9B6JE%PAJf6kH0pU"Q/p%nm,)4M-f#h95O`?bpeOT5.DkK=^ko\A$K(ZUBUjn_'T=0%0I^NFaW9'XW3ub8jV3R]Up.Iu[++%d$%;lmN4AbFn*QR>Dm8u?HH6sI$7bDpH(0M6t7H*:dsa9B#46Y!@aP\g)WR^7,M6d+XIT^8T(>17s^W+hk7ia?&P.$pINd<F/:$=3C\%Pip/LFcgO%lgl4%.QIB1Dd`7W(<*aap"bi4\_mn;V2.9q:1h)W@U-96`p48+Y#pZbm)IFn>]aH/P5/2ga:\q.nPEmfAihbNP0'!u%f&S/"qrbOn:3?*enJ7RB&\!"tKr3`m;`ro'dr1m.*cIb:-e"fTW&maSh>^th:D@d<d#-rc64+oiL[=4Q()@_u1$:O()$[6;,dIt+%ef;+I_1`T4[P#5>P;(f/^,GGp+RQKd_*<*,iLU1b*T<jt`E`iE(i./Xf[1qIa'g!#cJ-&dq/-dS7ns;?:V4:4$qbjh]s4%@]+)cC%i9kPMfEs_hLd:!NM9MX>pZ:SLj()_"XSR+_W[3j?<qal14Ca$8@8G8Y4rO,H<hCR[6hES@p93$<If*-c#AlM_c(;N>\ErbUC$7!*%<(``rHtN<#j)^A7&"3*aN7L"r5SP4`7,&./U8ldFf/>'oCf)L*?\KH'N]5Hih?Fs;a8$`&q$e[Qqb)gS(RV#)NY9\rPP\"YYcd[/%*DRS+q0B9k"X]Y6]mVt4p\#6.\/1_*`U::BNE5ef9tj014<<?Dbb[IA)>C8k@e[jRETO30^p7hWCg!s\b&UcjXM$-l]2%B9/R$=s%XYgcpY0]&,Z\Zd\0$\9Mb/uQCQ'ni!PuUst6'_87>e*aGFZoH"7W`pa_h_s-Put0D,Lh_tmbX$=Q=(;+i"d3B,@^BRfI1&B;8,fR%[E-oj#pcdEKk_C&8Y?9-RY5AfV):[:J/f"r1g1K_+=@-@i3C*cCiBoGEXZdRamV>V2L''-n/>9n&BN2kI)uRS+e"GO$K?h=.ImF_%27D5nOg8I5pfSAjYY-RT6o_Hj2nh+k1Wn_<j)r_^GB*"Rn^FQRAZqMrC^3.?$"E/=YAB"qBuR%Ca.r8q>&Lm2Y8@sd\WVb^I<]>.%&mO%KX6^$iG(V6M5g%?V;Z0HiS&/ZFBN$jGW>h,._(ufRWKY4LT8`J#jN,ZB>MJqu0V(_=k/bg;RcDo*U,n_Y*XRU8aJ<IcB;li_%gsi$+ZUTRu61^rnLK>>]/a'2+6h*n<$a`I#K@ZJcg1sI'B=;THS[_ErW_JE<<jhj3[J%j[?)r*t#!G(c?*(_HD=%dJlgs>J"*4t%%6LgH^I&s$:f:"_LI_!uC;@KdfaKm4rYAGO6f%NamD4FnDabm4,ka4Hd<g:$=V/8rK/YC.^1+RY[TU?BK1P9jf/BQ2#fie_@[]IDY%Fc<&(GTkOoQq#iM;2Jq")+YK\"hJ3&aUP(P;^n,GfJ$5lMeTJb-3HstS$id(\Z(=B2=Ub3@ca3A.V=]N/*\8s,sPhODDOn&>`F/)%YZS7*f(p&gR3mjC$JXc9(hT9h2Ymub/Q%IEeN@",GRl^#-hTt#A69/tcX1n^H1.<eRgbNMAtdH;4.i[G"^__]pK^8iQm`?,5e95]%>JgHl7fcF!`,6,O*We$$CS[K-N0Kdkn(HqIi9]q\G<\(a_:'JZjPE6Kd>M`.M^Pg`p2olWIC>YV]B1?mRUiLjO6eZu&h>l3e9FB+%IaS"1s4NAq`HU_.NM>#UZ0'QUQ3/)I\r.#q1t(?AUCm+Mi3C+h)r,cbk1V$H+F?\;;3$9jUH&X9oai6G[6j5h'VnZ36]@VE)4/?"%4.8d<('SR*,ou3,B=kV*8-dcA,i`QV/eAJcc7V0lQ@d]"61b8rke"l?MbcS"g^^&1Fue\YqoADdr:UH"r;9SS(nYZE.2Lh4GUM1$%X`RT4Y8m"rU!M.1Pp/;`P4Gl%1U8e`BLnb9csY9cKED<,HB/rNLW0QD>*gPB#:K+(bmr^:Wn&2^9JTB7POJ'LSf-\TIlh8e'r**e%*PorCl%0;OGK(RS@Nj#C163bZ0oEQJDAtu*Bf,E,R^k"/\)_G>#GoKo6Ktu<:)+4mgQL,cHedVH9Uqu,4%QXLHB:bH_MI79^>!IP%G9$q-_h*(K*UC(+ADMNPIR(94de]!ejEaGq=H3[anPnmI4BL,uFda(iI_r7SDl",F3M0&ZT(5fUD.^K(Y$2=H=O48LQF?(p9!tCG%g(isBr"L^s9f!N^I8EL(-CAb;@k6Q>M#;3Em^.60.V6b=T@;'<iX01[,9uT&$kS8fMNN3*7OB.7,kWe18&E>nHltmB"Wonj22cT=%Kq<LSO!O5;Y"L5ZkNL(ZH("G-r)1rb8\1\hA_)<rB?[.tSFP-4cBX+(F>"e0*4e_s\_HNjk>aGS+LoHhXON+;[uDo`2jZotmm^$5%1gT7[hlRf0h;`RTA`YbG+=O9E0:l]c2:bgmOm/J8go2(2foY#bB?0[+kOu8(.oYW!&I):Of!QJdKjHb85\F!j<1k08b''cWTbSt+%'d$Nd!^3Uo`26g'cPXD<K%W2`%Ln9ePoY`aWPgIZ%4.!)l2a7UAQ.@$b(#R8d<eX?Zm.0N);0+<I.bFfW#D^L`dMVm,9M;K6YiTE%m7Q=e;a(!NZ[&g]V3r&)4MP,JkoqS@lUoHqh$t]Ka;OUf'1N]UDT<W>*-%O>^.fLe&@/gjBKa^]]Ztc7UV4,]7sf]rmSA[3?g%/d%j7t.ViAlhJ%@sjgST7(ufDCa5e2rFSMNoU_4=+tD]LY,h9(seZ51s1_DBgp-A/E_Y(g>2;P[`:OF3R-q&uDq/a]4Rt(Hn1KT*MXL%o`D=gV+J.P[4udOau31D?*$%^ZS#s4\u<_pYf!BQ]88fD1a)apC:]1543(ul/2?]?nl`pWhXM.o1%_\oEis8k87cjKW>/c.dHc9a%j(W2sN.,u&/iJI9oqXA0&$JWO%#^\W]<u>]2i$%Jq4q,V^p*57Zl<WP(iFL6(f\6*8%@*_\)Vm%m:Z$%5*'ZV'g9LFenqiJiRc^>%g@_AHOKV4QA/Q"X>@Ud988h>SNHGo1iU4P=*U;QE4Jc$!nm97&g3qQ4@DtH*f'CR/(8/]pFH?1[*q.K>hP5G18,%7hmdV@Sj#suo%HZY>CkROp$*UhD3;>]U'Nq_a$Sna;[k^E_64Pli[]LV^@O7)NZh;^Z00<W-nHM;TlhIh60UVYtR]#T/>O8%j]/IfaIFH?1[*q.K>%hP9sgn'SPVpB4U2-6T0M?K:i`s(q4]'Y,0Y,Dc!h2E"j7(mns`PNetub>4_(+D)<qYqRI/d)>^k(D3Jgrf\2ZRr0Baho_ZfIOg>O%:ian(/B!C.KV1)lb*VTZ&V\rU:aQYe*<UF*d$@n7]/fT:?6iOP,ikNZf>d7PoXjPd'$_["]CkU'Q#omB^jq_/-1s^30_lFKEZ;-S%SWm5#V3#@&:,.9>dVV/gb#ol-Nd4<_ULLf;&Ydn+:=g<&i^U3<Ng#)U]DcX;<b?>Hlb16M#GsR>'a^ejE.r(s:0Ie+Shu<jl)r_C%&^urN(^ZBmZ,/p*$"4hVWO$YW8-DBDc<=d$D%[E#euH*F&O;IiqW@&B_C*rY3,l=JeZqs!h/!bWi'6J8Et:,tpDA[D<Cau^=H6*1%*3F!)[mq6XiX=@n(Da&eXF4"""qj=$8j^45OO?g[]3i8,BQ+ED*2@lp"8^IY$+X:b^PR;>q+m33H;=MDk`/QgJ=)Ed[Da'KB3"Zi%gU2@GSmm]/F0\R+a\j2QnuH5pbd2U/?.uh9D4\_HYpq[">dIG0V^:uF'u"fgoZB>agP&\3d+iTV:pK#F8*,!*A@,)Al4JT)[1^ij%9?C6<T44k^e(rt``L[k8'J"4M@+simSYAXBl/#m:aZXM+knBJC(!3Aen`:H1VO!8+djCc_hj?B.3a*a7onc!5M.8Fk=7)/DMbo:k%oX!bDI_*'R]7c<f!a3[A?PM?^&?FlR&OWg("R]bE"#Qp-<@>OR"B#*a>2*)0dB`NgS_q<M3s>%$0kc2a;ll1)"pd2@"IdS%b^.TY%PZWgWit*/)6EJ<YSX!'ZQ:%#8]6$8fl3l-:,eT`6fB9ZgQt!<Yd;:3VeKU7q0aYf0S6]]+:>2De!(dJJF_1kM.@0uj8ZCs>Pa]<:%:",r9I@'7H_gPluQ=R]oTubp\jgokKgPaous!_XYb?VI/k==1`<9&;5nq]Q<IQ_D$hfRBbrRab?/%uk1nnaa0_e.f.VumBV'"-<(%8^qNLU2C0@^q60j<[iZ8UKF5:p-IQjOd`5ElV($[Jr+Q4a/S;1f,O(5?'>937`EO7cLs\7c,rI_h5e=PM/8+:%&<0YFH03"ACGhM%'0>a,V]&4jn.g;T[.n?p**,M+(-/he8O#ps-EUplq@rJ;:5iR4/*K(UgiY-Mb<qHF_JEepR5kssVE:,u[nZQf-4$ZHFc^h'<,\>k%1sa.0BqE@Z:6XJ(@`)h\>I.P@-FZ(=16Jp0RCAcOmSh%7X\5gtaRF$$Rp6YXZ@"NFda^$S'N&W0b<%J913lMDkm/Od+hWWVktU<\%:#:h6)!=R=\V__*N8)I4qiV_u\b31_]>OJ]hs&2$-bH97VYio;YDAU];ss*l%e0*a2a!TT]SIXfhX%IPk[#34[)&->q^Ks&>EnH(%i76]FX.,//muWoZHdMBL=gX/ad0!X?drj"Nmm+tsXCJsE%Y':i/em1IU15=!S.TeSQ)ri(5)26%-QJFM``!aqDFd)>l51ik0gH?T%6ubI30L6iq"c!1[]^ST'$HduK.""@5K.&hf#^agEfT/d[>s.g=lua]OMauZZ%E%5ac9/bG*T3o+m-VHL-]Oi_o1Wj5gfIW&Y=tX]%FF^hR<Ei.a[W2M9NqD<Se:LJiEc.[Il0bj0W,g*@UYbE2=C#76/%"KdpaT?IjWghmB9c3a`1[ZtVG--2C^K)U\2f9kdj%'jIN#rm%SfYF,L@7p29,Sq'%l7Hu<&6\3rY(#3;XB(Sf'1"!,'hdnIN!Z3U*q?>\a\=LHml;Td(Upe"LP(jMj-ssF#\XVq9FW,o<@](L@f!N%pZa?mI0&8s&FcDASA.:U56cZP?+,q9M*09'MV%+5"#Kt);XU/dj,(M,gcmX"[+"?,n7T*+f=+/`8[c+1jPqaGHe)q(^:#`JAEKo"%ia@njK?5sX.L`Jd7R]IFlS43EI4BR>$MAL[fqGat!r>S@ko.M]Ta#E#YqrE*I!rWWgZ?;[-Euct[h,p3`Ek^)10o97q$&XZ;-6iN%.'7BVg:12<7^l$m:U3^i]$E8HTXiBgVeD<*L,U-H577<W9AWIMI['CZn\0DjadS-NM`%u2YM;K3]Q6fEMG6Yl2EaJ^Gl%35kfmki%o?_G%XOFU!ds?-!BjYE"EXioQr!],Q+75\Gl^>/PWB:@`RC&Q_o:Uafm]@LgTA*.W(S?j3]8s-3)j7eo-a[aF<Zgp*7MaFNP3e1J%\l,RdOg$pu,F^h"b_DjOn?(D`!^e`_P@_'->X[]*=RK4.'B][P2rENLr-3F2F+8K,ma\@s+m!&Fhg^/p1k"uUg&:m?mNunQg&'n,%YCS&U,]K_8"G0rg[RZWM5*QDD93JffK<XCaKb6K+k+d1uq>9XUhu=]\rc\AA2DV&r7fW9kjlcd)J,^tql*P`,J[jC\Bn1?`eHU'U%e(+-lFG"N/!@j&bL#74K>PMK,.]?<mZW8TA(KjVI>#K*.dBI\3ZHeiRP)6%UrJLRKC#K!aJ$?]7;qHuo\nU*q^nL;se*sPaA$08i%U&T6><.U.s7Ua?-)8g%dM*ci4KHP3Q[V>"H"IW;CH@RlDDLp^TBV@ZXHS#5Il(:T3VGUi'C2AR#(]LW%e_mrhl8Bd%2JnN`lRn,W%*sfY3\@E`3Fl'iSKdajj.l^JMNu@OO,kr_YB5EfN[k#8,"01to3A*f@[]!uT!c,Iq`t:`'lXl)b;hh*R#n6t\lImI&O^]'A6=UTX%ouIuGQNZjjn#c`X8Eb/jb)K8G3L(D6$"&6p09o;`eMudM%ZV3%[dgVdh'om@1NTU8n*)'YOTS9f0HjDog*j:fGl)0eO'H'D9b$Mk%NFN:L;]JGcg9:D*"G3.ZFU2`:N<hU`/"P'[(Ikc`FfeuH+1":GSRn.=&lHQ9"7c/d:")@Yd`^tEgK"6QYSqPP7j-5Zj0O2LU^S'M%/\EF7ZrLMiT!F/r-u?pu=m6^Y!IO=EYgsHHX_TeQ0^VAQ$-,#)_L,bc0`OktmX5I4S]@aBFZcO-*OsP#27_/KerkP9g9GQ7dp<Z$%4g&)!!"57rFK'9u`H'9f0-+:3U!F"f\Tbh7%]@NYFaJRJ607^j__*,LZ3E6d<Hf4'k`U!s&4:+j4l)>Gk/.dCK!;gYYV:p\?=d?9%Q<-VDE0CA`n*_iSJUKbI[nK:TF<DinPD^P47pI-f"bp;t9T.E][I#i=aW^%?.+=tk[KtVNBMkjLEaY_II>GL+hMINlZk0aa)nI"h%7"d2Um3A2d,3rI5I;>^@8bOmf5)t]!_(13JD'FO_U#097/Wl6+a%KUTYj36G.u7@pkb<c4ng5CpXn&=mX3A(o%?FL:(i1YR['?lR%d!Vc&\s@QIqBc(\,16AC2uD2eE#f+*@B63QTr5B=%cZG.8IJoXM5XMHH^jD2X]P2;:H/>]pVM61YE`132X,VHhF:Sa`*bl:^-_Bj%Zbg$s+)%.>o<sHqP))lb`B(gE`T99cO49GIhW>c!L9TN/]3eq_,jlulaCL2E@HSKMfgQ_./!tGK-@A4+cufQYgEa7FSDEmB<06J^%f1#^GdG!#0YeGO_]26*@6S:d.h-iCL'k*j^J0\%6"M!cl]:Y=uRa^*%#)\(PKlr]TE(+U;3eMu3"icLkSbBmqmV,IDnt*T2-Y1F\%\[c*(`M9LXT"^WL4a_W1m6iJ,nm<3pBG1=CrO:c04=pq2^O63d)m=?k"bGM3q_E<hjPb-<lN$VcEZI)!pp:,5=O='7E8JYSE,=S>%]CuCE_Em)_?<ta^Il/7g/qFB3MthGfPsg'(Y#KXCqiq-ke'2:AcI:B`U:Ic."dhj_IGboadl;5.JBLar_%*nJ#$1<;cs^[uBrkc?%fMlM]2WKF[6#Uh0Mk+glbITNj>6rrT-6QK(H@'cU];rTPqut_XUq72O`8ECejTIEJj-H5GncStFW"K7*@?JjF!FlP!UB[-O?Y1eP%)GkWr%qa>!.SP"3K>uMK$Q,s<%//=E!7oG"!JZ^l0[<PZpPc/.D-1a`fpYP\6oo%eo60PfemghrO#.\%L+rmM-Y"-I_+-diUoUcZ%fD.-sL(5U6C?2*Hi^T[jL'q&S4pLmf1DjZ4;]^Vs\WE;ZW69=FkUOdE$D`_JgiF<7g9=Ef)Yj#!!nYFa=XuiiS(']uV,^o%kLb:p%@\8sl:/MPof[hsrT)XkMUI(dc$G`JOYVqc2FkTEJPdI?1,ql5qI<=uk;QO`>Cqt-AFPg2<TE7cS]Eu"UC-]U!+^hNH0sL;uJPoVO%nh<G3VW%b^"_LWSqX=qGO"_5DMdU[!9,rllN=[FMT!UT]\<N6ijQMKEC0sWe7US]N]PtbDZ!?1>2h7?T>ff%lJ;.j&[&gfAQ<.pG%/bErG\3=b.aT=E/E!`^a,sYJN"r^p#FX[\\@(,dGP3NBU>QBMQ1+^U6*N1IY*ZuS>+E9FM6pNjDk#QI8`nT-6XfH7L"@NEVg9#U7%"4Wc/0Z/PQN<Xr5hF5?ioo6%l$cW35/RE;5W3,;i-I@M*)m*lUZt&E\E%]dVVu[iL[$5aM#f1R$=^TF5ec?f!Ob0l"!n]A^!UG]k%6/u_;R;`rXYu@W!Wo!pfGX8DUili0)`\gJhAHc2d4LLF``+<J%(ekA]lnIuS)]<2I_bSn+?_+?Ql.0EVVE49Lj4?"f!&rSS&4T3\%]ZJ5Xd"GtjBp=SrS[";eH>eHIQpqp4:j:mp0:o6PH%lO?.:jA%-icQK/<,SgL_q"9&Dk)PFh7YV>C\8bTLImS_/ir+hA;P<NsrgD%+bbnAMFR;i@j%G*CX\W$3Df[Y@%=</?dlGl!un\_Zf8%e@Z_.N0n:/BE1@i-nhbkac^Vua%>cDh**S/GMq\[rCWurk^5_O2(7(S/%"XUG6g4u"P<E;!X?(aMabAITe"rdP]l(nF5UTe5oF/ae$`hbi#HKX;-"f+CGau.kH%nq\&JZiJ)'o[cd"Fso%%B[4WY^&n8/rD0`%9e0NV^4G]oA>u64.H#DPei8;O7oKF_8-@H4S2W?DC<Rk%(au$Nl-NXq\..4>MJ]TFo5\TgTY6c'br3)!RhB9fI[S.b1h\m&\Q:91%U\_d>^#l$npU%_?`c-Hch[_7PJ7s@s:,uo5#W>;2_]$RI\.&l"\r=K3ke\CaR.[s+)?hb!-rUDr5hUl<g&P/[EP"+'?Nf?!n_?N<%eLZ7g\@\5\Y)2_4n1F]f,H/usm90K"._ZQN8uHh7j[;\cclbYH/Te%DJnNk(V2>4-HIoSD(hIFsZsIGH696"!Q$4J$B<"jA7hbo:%BKX/IJC8&2qiiF*%;iTTZqC$m?Wq/D`Q\`a[aIG#<@j<.7MTVl#i?42[BI@n<,B?qT`e)nMV*jc$"P2)&CdOYds>0T'fiT,Cm^u;%BeEVI`*<>0if[1lnEGT<<Un7+fVfYcJLpRrB]L:D&0Db8[<$%[+bEb1aO1CYGp/kF,!Z`llWRqbWar$7?s.'@#X=k$K`)ip`7.&K%130LNFk5V0A)aX[P4s]34bsYMfO5n"!?.8u!;/N-0?>UnIAjM(E?imgg9c\SfZL1p,W26i!pE4.!FQY0ObiUOWG2Vq:?F(J4V_k$%=B<OqJRGerEMKB`\Q^q2FC\6g_4]F!3EIF6X_sZkZE=nuMknT_,KnH5.^?^f,ShUX=(NgJ1::`&Bq&#cL)l3<Jeb`$_I6<lD9@U1%Sn>r%_a*T5$$_a[&ZgY(@TX!=X8&uhR0]+C=[CT')Lsi6G$3K&`inF")PeQl[ALKB@OXH!@"I=uAOHQ-2[N-I;;D?aP(BKnqLS9a%Fd57u0OFSZLa8YaJq#VV!&-tBQ*O:cl;ni0"q:$jLOCd1BTtLX=D"S";iDQL8p!D&<SS007SsH7QR(EG%>feg!/i?.BS11RLs`;N%"gHWGilb_*/up<WJ=s^KKiEVPWH)+r<`iCaYu!l,_@.:7]<*;p*.Xjtr7.+0o-Rk7A[An(6)="tG[N%f8K)?%#ARM.8a92352:H[%)6?i+0*2-*&11q(S@8p.USOPkF/O2D:)dW]?5fc%:n_JifDA6i8"_\821f`.jrdb0!fNdF"H$+D8OK3V5S/pVgPj^8:^^iFQTA/J%::MqQi;jejW3%;LOTZPPaadll#b_6YHjo*G_Q1rB==XFaJtlTur'TuiJ3e:?3J`)S'N6sE7+jD,4D_oST&_UE6q)urZU#oN_[%1\%88,GA&:D#u=q".K1p\KeRu$"4E"0+%J2nq._1igU[CmF%SBbYWhDmi9:Q(N,97W;TZt0ZP@Ka`:Lg*&9rO!@i!6ZjY1f?*RY#AgN%2Zlcbk`VnZ=EeU!=P'fVg9Mh3i4,a*9?S*$8q[qt+9R$;=P/9u`rV2R*Pd4,d",%QNg;4S5oW^.ekmXZ>":@U-o8AS"e@PdDh&WZ%$e/`E<e+R(-6iM;6!"d8HIgqLne@XR`%hkT7G#Dg/(iBCr=`rI=NtAoJd/4>A76b,5gVBjPO5D#Ppi]T(9&4=o\-)U@KY+7i6tO6%Y=YiQJ8!oA@U(WqgCTMWI%CRZ*9;="(=eiYD!Hs\.SD78!!ZT`AeH9gX!i%SNTf=JXO=V<ZV-e[qkeIEUM()#pOG'9K4^UE!AR.?%T8EiT!"N2GJ=RMu!Z2A9"=D\@?t&/QEpUd3OAuOD*46^#R:8`W4TO2LPD.hSJ5)8?0ku4W-pq,Rf`r+\DEq;<D3:\]qeR4l7`h5'%Eb/L%V+cO8R5BU)0A08r[Tigg&Q@/$VO9nJ%DYPYY+dctJC+R`-ng1I,rmcb>>U2g2l.7JQ6)7)mo?"1?G$[s-KaV"[QWd?9"(<,%0K)acYm%p$.aG2Rp1u<"7'o&M(qJP0G%%-ON=smOJE$ii3WfI'kqAW,frXmH,-H`4LLs!.AYQ]JdK=G-rN0a&J,4K`p]"oT6D*8Z%bsfgN\BWEW:^FNO<@s9l@"4pZQlX*:Ne3^q!c,:'[=74P&H5@2HjP2S#,AtAEI5nK=T_EYh!F$;`$Q1;S'Z1@TsFs8#@L1Y%m_9;%JN+QZ!8(+IEP#SOUaOic^m[^nN<T]MJ8e@9!GgV/]rsrc$?]aOFBlC3MYe.,Etk7O(Ch]L!,CMW<*!dN3N*Bq=Xtt9'`.2&Ca$fL%^p[-=<ZB4l.k??_3#oe78K07?--3YDf-fhn^d,/42aj<NKE]=$JtiH-`cD7/7Dk[Mb?&@,62(E^DIFmmD<3YL$O(_WHDRFDJIuq7%!7l`Ue=@/,=ssF1?ipMKf$6EdSWXnq/l&W>/:c?_nQHk#!XrS'*Y:h-W7@^Y"\G27#moes7Nh-?e,d@o1k9S'e3I-rKGi.#_:)'p%L[C%N9iWs&23gUhK6p,?4QYdNUNQ_VL/'N2&hX44*_ns+0OnL#<-M^g]\AA^P!]>uOSs^,]]!1"@)*1],:c)d*.Tc&6VCi@e5mc?%XriLY,qFS!B8oJ`;>hV71fBrF1'AL\49:"_;ZgF#PQo3>KtsR"(l6ln!.t>kC<*goZb[)9b[-e@eL7",nD@o.>uS]hO?N2K);Cfr%$+A70:$qM37/ceT[*'(1[G0&S7!Vr39=@@oelJZf]"3ddeje53?'eQ-f0cVB0b9)8-Qq+TW!O/7"#-BTCK]ba9Or[^hfd.M1oqsu%&^W<ACksr)&<'cA!TJ8*%]b]'CR(4j9Vbk!S.Vt`BdO:M[o.c=a@+O8Q>RGYhUk;RO[_u]E>aA1Gp4_*+s$?bEejjS^pKqG*1/ei%]aUU7ZNcAS.76B+@CXVp%-%U)#T$,'Ri5H,!"M\g_4IS0:AKF!dV^2k09raj%7W$d^ett_l$-Ze!=7ojKFWgk=-e)+_R;9$#Mllp%]SQX8#iTP)]S\#G#B7pRC]Hi/Vu_^2![)1.c3[r)ckon02PP_MmO^=/J,u-k0%q$?B!e4"#o*UtOug#)GUY.jP$&t/+eVY&hIn,N%!9r,q.8.T"JC_ZpVBS2=J3e.V)6Xn!J\YGh_Yh4%/?N*$Q(dRX5S,bF")nj<G^%r-.L][GQ)oh]<1kYXotn?p!/&YUA::0V4F(Xd%BopsK^e3/c*pi[:=;Id_aJpo(?!mXZ&hJ2k_]`e5'lk4?QS(jOk@U^-VJ,#`m\B@o[&TCL%:G,#O.i;7"VI`6U*)fI%sX5-YSXL2%"@CL.9*[/VOaoaNl_%(L+[ftE:`Ag7"e6DmQ*&3=[c+_(Q#+Uor^@9H92fGr1^shmn2`8HO;Q>hknp4A&ID+LG$U>7PUm;X=*]o;%Ge_j1'UFr-UqtO53"_2qC+D@662a6!FT?.^PDT3g;6)/(KMW>KG6"CVO!hCp>h7H&(=\H(#7XX9-5U,/W.D`E:#+9,I@i83]Z(A_%H"88Eb/!pHD@8]Cq2Vd]'AJ5j/5-DZXLYF7L$Zp:MSL?MHeDK$.Q2eq=m?h(D<NRGVC>@V,+(!:Tnbd:LrR:U(<j9llDLbt2RFo"%UH3:cBl5J@6!6.h86O$p+:XP:FE.&Sfa'n%8E/j]3b<9jPY:!Q^]O,/Pg5@]5ZPpjA#(_7>>q%lHYPlM-_`nOKjY+fA/&HEq:G[:%&J,RX[K+2H"IgMf0I5lu7L_+L"IT7m_#qI^&5NO=V/#6q.7:=GfG)KudQh;]2*ec)k%Y/9a'C7s.iACV^0'fSk"%*+>Jrf-#BXZ4%MpY\W/^8+KOmS*6V;o,fZ_->Nn7\Od+R^&=XGGAF:khtZ\3HokYlXLk1F4d]DCAJTHHX_Z!0uN+>)E0[=\tgNJsD%@5q(_n+_$(S%@IBorg:>jdd3<^i4:3Db&uqWV=?[&T)IioV,+N<`\WYh7fE4[\`so8'#H]mVJ49Z\%J"Yd%H(Uq&1hJ4X9".eEA+(TjFNJs@HIZ"%&hY(Zhf;S,*#G^j&FF`GXB_jP)^\O&aJjf"oGVe['X[r8,?8!7F^]o84W.:#Z.V`K7Na=44bg-RW]`(#UWBB0[A1HL^u!i8gQ<DQ%8[Q!)P;Nq7!%T5P.WS;J'lhoMpEAo*2o*9iQrL2!_U.Z86?)=-DEt,)#2)8K,#@2-2A!t^$:dR@`@fU`<!\64d.9/JJ<HdijOVu9%J0l-QL>Xq-.KJ&*4D[SuT7N!Hj]EXuNGBl`U&Y@7P?&:r%GgP>Uqp5(.+pFD7$X`OCnQV/DBn9qBEC,=!^!8h6^-5q"s\L6HGE9<%!h6]_C;p^!Tolk<a8eJ<ib2o0!\e<R#Y(+Q5\C^TQI8$%F%AmPJ/,0lad\ZKJXB%Q7FALO+11.+-pejI!j!qm_^6*#7VH37\8r;p%Q'T?7V1Bbp8e3cQ[MDe=[d)dC1g,YPKcTJ<ZDld(+p'eWS-okm'@8[)1"m".#B3tk,Ucu/%buRppEh$:fQaHS$]eeCM!WMr7mJc<%1Qu@<"V\/*1qk`MJ["R<!SZ4d(S`5!/3(!CLs[bfT:l&IdGrX*;AKep1IGce5\,q@Xj3kI^M[#X8Wffe4QSofGB'fO:D\2KU.r^Z%/eEjI\BHCSn]DX(Wh]fr[8<qOA#b*.U)%:m`l)K:jj%'3&LVh7.Ua>GNtS\h_U7jX2`>&:ML3H,?j$9`_Bp:mWZX&raeDL6-%MIE%gkM2gX[#SrJn&rNJpTBG:*gjE"]d3cAAPk!Xk&M&WuUM+fE7740i0Xu5XhCp;ZsH7Y"lhAX5O&;SDJe0;0i3kG(f(moN%I&&=N"&%&6pMT]b["DS<I9<#+2iMJ/AqkbS)3Q"&On-!sYep+9ukbj0GHA!C3EV#Af:%RWN*f")VNMke*g[!O"IoE"aNnZtg6"GpBt_D=mmF%ABIQ*D4q0(:e/WsX#2`]/>J@ZB>I7e4\.Vq"m^N"W%7CJ=HdT'ZLS($NdS-C[DLp;6(a:&[+d#[m4pODqe;jA@Jc:oZ(9WQYkq&q%T\W2O8bSC.!W#VC&P'L"Nj6\<a\GO5fO$oS-=PjS`;Ri_EeZ`5$dtjIOFO2\]37iThHRk#[:3)J=bI]tE8?(=KQ#pW[5N#?j#OR_%MG$2b]+'@'%kt)16OjDQCX9:B#Vn,6`iTe^fGeUuY>]>HZ%<#m"9;!@JM>I'J1@#uKgGl*mJouJ<[GsN=lsNpVhKB[#eH0i?F*c]%'WfG*qrpShqC6A,'W+:6\-q?RaD]KNI9)K.7=uTlXa#3n)T=i"1D-/N>jcE&LU5_`XMo-$A10+K0")X2fWf:Y.sD,,gE=X[EO7@"%+CPPM\HcLt#8j+)!obq\->nr;!F.#CDAjQuZm=du#\Pr^W0^V@23mC,Eq"e!ZFqI(:pXK`C]Gf]_>7D+A'N)@0iKon<H,t.lUprX%@9*aj3+@e6k"%a=7;X9,K)mN^9.WoJ&VFAQPZumQ.S.fS$P7-En</UZ7Z?t6a\e#BeK?EcCaDXY^em;#g]IOWZG%ct'nJrR7h6h%%THNT)YhbCd&-IF#(soM?[][OZ"slp)Vup/q5d='NakFp!A-;t\7Jd(?![G5+A_b-no#6e4@]aFuj]+[hY4OP'/qB7bUBS,ag4mQ)%)RRbf^GlfpCImP6S-6/I!)R=fF9YDGF-;q6F@s_C7"(0?<\diKo,;$#qkA@q?8*cGpI`=1@r3WG,HWO!<_YEj6l'&IP4%AB:)TKt%#42$b[Pl53jL@UN0Gp+r!t:A=YWOM<)o,d;$KDO[?Ueq5BWhVJeCAN)Ta&:f-qiFeSm'm-Q&,#K%dla'U2*jLn4C/JXBGgA@q8)d%$NW5rXEeHG3,E37aI94eft1j;@/qY>'T7?EMq(ni1MX^&,W^oNk0])'Y#/_i#%3XU(01c"!00e$8pl=a=pU(<mn@*,]PD\S;7hj6%6po!=WEgms3G>'$Xh_:=WG^ob='?'gJ?D=-'PftYAk!Of8>()OS[TclZ=aIr2Zh5SN;smtE8r,TaM@+6nHg<]2&-3jWaj$n3\u:h%dS<mQ5T<]?8%K$3;UPPEo&.-Cbgh[@7]PK"G6a3<Y'!]Z>a_^!a2a\P=G_Yc>GNt*BIct3krT=+B.IZ$h)eq0"9oR2b3S?VTOXPt%m>;^9rQ,aJ.dfk^rQj%rLElM%]Pj$.5uQdkr&!GBTgsl-5gfiH2=`P(+p0Mi?F%5.:A*)-apZ>-fm4f9+ZFXC'kL&-\Oq8`(T7th%:_Ji<,f?4+TLA$Yg(^do/h4?Krh4-W7NTlZQ-1bH9b_"ip/a-e?cE;G:%8tWJO(FZoW;u/?@d>FY@8TcX2G)DoU9BbU?id((89L!%r[!0'7/10,0Nf8.+4!2+]02;9@fshJ-3cSG+@Dhp%H&*TSo7q@5mMODA0b%p:S:Vk&e4%Q"=_J&`PAjl=kpoq@n#U)d:2M$[($B-%2;==b(8h_V9WDU`80Ua,?H;iP;Be@-<;(65!hef#7PEUSLaUN-KJFet;&0FK$@lEJhni,S!#]2r[7'NfW(d^6+;rdG2T%h*H^(jV%hP@Gc/$#DcPl0(RguX\ETJEQA<h2#8&Zg-m0EFVqV?20TX/jCU#66YOb"?>t1JpnKd0&AN4G2--'ifMZ`ci`L%"OUr032oB![(^H%<Fe9o*:q8%,rbmb(mKcC]oMu$!+XS%>!0)c/FCqLpLG-L5Wn)Oqk^d,>uQZ$br$\*"Y^-"0G\rOYS:p#P'iqYBU5WmZ/3=5F]gn&%8Oas1:<GQQRQJNG>Bsa'U',F(iI!=7d&[MO<8-mo_o+m714KHab:3L2RlIW5dnRb1O71L;3R?5t3[jCKdV]]I,jlcT]pD<'1H-*!%4HV+smqN_A`C>+X7hWKM$&8XEBJ^WQ)pr)aMaUW9#9>YT2"E7d@Q>LU(:K;:G\A4_N*%L!b62Jb/&f_^OZ'4#ocV`;CN8c(LkUlS%/Qah4b[G[n2NmP6/OT"Em<YbH(o>3[`43Y!$!AKZCc2Y]39hLNNZ=3!J5$Hrb"1<=NDd98c.arm8J]E:>jdWu4N(s0qEA):Z5N6X%j><*:%tRGe=j'>_2jSga+ZKb3'8E/&Wh2n@3t1ZlM;f"VNUUVg9(L0HfaJ6V[QTGB;qsVnP[FTU;fVR=jD8on]lB$QfSbfjKf#I1%R"\ANjAqJ8Q\,=4>:,d[U/r/R7PR1;"]/6VW$rL(GZD-:bL%(.ZT/aW@bIOr$'>FbO^:$oUhgYY5R_e"h_[-)n93F2TL-6!j4HoZ%^g*tuW*$ehJh<!pCm'Fp@n;,@%aeYB)@6F2I6l&g]TGpI6Ve7o$\sPp4D:%/7Z,F\V[P3D8u@o8/L-Y#A!*ORfJE4F/+Q"'1A]T^%Wa=Q$_7@'1V)DU.>DVKDcmDsU7836E)$s>KN84%J+Lh)aG^\+QOpf%ZMa7U8QEa*1q^[6od%b:Po'@cT7[p@Cpa2!B7>$1GDL@k1%L)TX!HUTP\=p$ME4FiVm8"rsGmocbM!5Q*J;Lh@>];RI,^?eiVdIVet5k)2f;H:)s!Ec23LV-R"U8.8Sh@j9X.Q]7Tb.aU7Xt;9p%<TZP\fW#*bN=,j[R`YnP,Dr^7o8eYXJ2S<C'/6`/j:hX=fJ5K*]T)-<TIL_b!=#-7%^`66IH+fc3(FiPYIm8uMRjFN]MEl<4Wt9=%.$t0gH'O.>YR(kk7`#uT+7b:C7poWFHuZMqP@@SN=D="n0JGd>!V>R(53[o<!AH!)U-a+OU7uNB"/Q&9Z_R(:ONclF=X;aTXQaO>%D,R[3"_cVg;%!GuamJe^Fq\f"I4&/`6NbFL8Qcc>kZ$?u4KhO$c!m>%Lfk-)TF`jYZWddZ`^h]/=TR/CF&#k1%nuWZ.b[5!\%_)\%Eu7ucKHo634g8D1P536PNY3*-5U@SUkjF]GfX,_)iPV-9GVjFXE!+*Y4>ASm;W!]sdNNIU53WP3&CK5`7L,1eWXjhI#q5K5jmY.0%eWs;PJ='`()i.JOP#$Bls2T2s.GU#8Q&unO.pFHo"HP:ZCiY(&[4FYl_P&5,(?f=oc$bg!0s8lBL_UmWO+nm_R(_IXbSZPfM]5Dk%7W5Zdm\"5)Kh!SdpQWLqA`4c-eJ,_K/ntC;1+opj8@'a1eI%)oF7n$7(<N5FOg&q$-m/s9-f\+kU@<C7?Ar,M2UKD;<X^.<#3<E1%pQc$78G!c,bS4rN@H*9b<V(qR,Sii4`![OROiuLpU-pBr8teSt-S-HDq)C>H\XSa[/Z.HD!X=%qcqG]f@.&&MbK%CZN;Ah21*stL%^pM+KD,nd#Jef'HBZM>QBJr>j8k:So1sS*c@A0-RfLCg-Q3N^P@sBpc`>jkX*WoJuO>EJ1OTn^:9I]nD&\elHHkX*<F@hV3T!Vs@%5_:W%(i(gafC5am1bUYh<jA;;oRm!fU;W8mJuQY^+W,_@X[YSL]E9j)b7/#YU6jP&ejuRs]HUNDKL,jIksQSCXW1c.0D"_hR#aa8%?nq0@W)aGe*0b]a,dP;!GfItVOU:/!I&&Hf<q;:!p\?r6hS\#d=Z)'=r&lDWidg\WYr"HgfT8kO^fo;@7WL8J,0q0n<2g,"P#1DQ%s+9YXNrk]e.'9![FReE2nm>=,;bO0dVLt)^K^co"(ob+olR;ju`+3Ee`ag=<l"l=)c[^a.8-1,h#CL$%/.ttM;qV33&P,b`EEfR+%Zm.)8!EdD6%-X4F/NCY#WM8<C_S7d,!ocWY<3k"FPUd]LZZZ@O`cE`![3t7n:'f68*u&CW<mK.)>'!XEWiE?CV-V-kiq%6#/k0j@%Z.C>e\nU8_GKopl]=\N&AV'P_>SY*c^^O)_R8ItBJJj-R2)$_MY6%NG%Sou,2">fn,W`$pB`#XKarX;Y2\\^_VCs;*JO;-,Udr7P%JjV9W\bIod%0;r+l&;]`08;f'[4KaNF9,+2163&^)h</\&HR0:@(O0X`YCk5^uW[>+.l5.3hAcm9q=ulR\D7@<H25p=+CGb7p75>%K=Y]3/P(gA1HB(2.'tkC#PmkAQYR^MU$%VL:4O"_;?/mY/(7TmZiMGGeU6RDg1LK:ZK/k?LJJf3MC=F8UFa5-m#;c+YaZC@Bdd[R%g<RL7C^H/cp]H(61bMCHi2J>CM)[Qo/fntl?%Oe5g5#dNB5F+u,Jc$?f8QoOehN,V@^'cA4beIh,ouJ(%&0^l:?IHUU]EJ[j2c:e%b$Z2MO-dQT!;&rBU(or*Hqr=,?71Pt@%iU_L'1397Yt?^M?h[:EcKTd'QC(uH=U<=)&EH`%V1),3QJMcUI,#[bBTV`kii;JQoa0h%KHgL4+*M`\%hD.Te>4uE:.!,J'U)T,&Rr/`Vl[W9/d:8mX*cAgVpdnF,'=3a_^Hb'H?94)BN8i97>uSg#$a9XmNT-LFkg(3F^SIE%pPIt0^(KP1G>UQ.'o>276OBd39Jcm9`GFR#&b"de56/%1Oa8<.Xej[.JM\VZ)W^1P)i/Km&=?.K/2@<2pEl^qE2Z>?$tk4LT7Z3p%\2cWCi:)Vu\=F:F!ZhaOQ:=@_&j?]]7M\M=mOmNGYg;p?FTsniAC\[51bfU`LmoFS`eajXUJ2$+kJN</-T6\7>?NcGq'2Q=Jc]p!%"4.@L/n4l$Zti*NWYD)_W9#!4oKWnEe7$bJL**05i/Xeb7jpmkf>IZVN+3+Ra=.8G$f?LL_bRZ6GZmPbJHnLXLY0DaRaeCJ<uI8T%q^*ANOi,8%&?M!m8F1p!S;9Z"bF*TG$Ubpa!38^]^iF<R#)1fXSJk=8>K)/5Ljg5&$$(nH!i@tKk?BZF;(X=oc6nl3h1/9+G"PA-%aNW/efDrs7Gq\S[38G;a"c<!)9h\MQ.?LdFDCA.`&f4:\bYA8q_^T2'qb.))=^O5sV9`4+SCVef3\V-D'qP5=KJl\PH\KM6f`UGD%FqtGqT@6@[!4+$QOpt5%+UIZ*_5gO)>BnAE)?BAnC_LijZGH]!Z4nf6M%Sg!YDX:F&F@Q\i[RO[i"?orR$kdU14gc3X%#e&cnARn%ORSqUdLqfFJ:,#]AOeC-3Ke4PigZcLX2<*6(69o"2%Lg`MF2:?;L"$<0`W>cI$5*F%J\"<j5'rb6C`iS3[uEU2C6[$qEG,L8stI%%Vo&]S,Q4`(lqppU*D#`EH<is*D?4!40a?&g=%;mp%a-Ib+Z[4c*jd>dGf<'N"^i>[;_Att91qH@`iX&,V2cl((LoBr"i<2SWJ[E,%g1ch67mI.Vp/,uK%=L,*d(`LO+u#<p`e1;N<(S'okOTZT@.'_0\!RSZ>&ML,r165dd+YKfc0&bfFOQ&%-7aDM#FmBf6RYKaNNVJG%(BW?9AqX[DdJ=g"PIYH/Muhor3a&/-'T+J3l"IbI;CE=]CC)Aq0grq"1[F6cXec'I3/JSm`2qf5JIJ['6J$(.2hNm<M)-K%6HAj,%p2Ub,XUo.u(J_QqmO>nI78t\@9O9NbW[+C7ZJm+.B_TNVQ:?6I7TZttD/sa'>_g-J?HPkK^P\.kWu[SHT!;0?E@K>BF?ICY:6[K+%f/kX/J0p$:V:0\MQ4bQt\1j3/H,3;hE?B>[cQ.W\"5h2PkRp>h.j`SHV$&5,ULI2Y'-P=MP.ss1G4B'S0c?PmH]W03/]=]nQ[YcM%'uaG[K9-`_E#J=s9FT1KQWh7%P#j8-&7?H5TdhACP-Jg3,nPbpSb%X+W9Em"qnsb8-O7W2_7(YQcs+N*?Zbh[+i,pgo:gBc[(d2j%?.Y7l$bcTFFj8k*&scIdOG=suT;@bYCpImJK<W^=/bL]RP<(q6.ZV0l%e0D[;GPc9%GrnrBKfp$@*X9o?n^apnC)*$,H$n3n.QK7%ktakF-T6/,<n?BcD4'"`^tM^@d:q/u+"UEiHc:F`L>?+;6C6YsoiI.tiK,-Jj<^nClSdDeOch6GBDE5u8d)`jJfQ5m^+*HE[nJu)%qE_b1</iT!T6o`T1`UC=%gZ]]-_CSJK*6i>>^*t9VCV7-11.RIT#h#jSjh$rJEL`-kOUc<fqrRE8H7lISehI55(t`0AqHm3Oa62V%!^&,>h94!]J`Nr9%/RX3"m6M;LH.BshV`sHC^dWG[88]&&F2S9d'Y'CjdOHIgnu(>,=WIkT@!aSX]tqV.3>_[8>dC&^RPIls!QkQ%LcD!es1Vb`#%;/XdMVS%.RTkm4`ET]'!MT;1.pGT.-1ZD**b#BYtk2d!)%bKd8<&"[K/@_"n?.Er7NETpI$):$H"_AL58ZeLEYq<%Ajf%"OPq&g3Ic/Q\p2>0X(Ouh&Wje_IE8>bj!239)BF;q<6Co^o@NupkRpiYFnl_A>,&N9=BLRXG75pKq*MLf$T4lRACeoH)EN2$%5WQUc_$tL>'9(:-]G1_`hU3aYM449S&'9R9,fCj8e0CM7$+s*U`lM!n3+*YGOeNi^Qk`/01Dl;'Y/:N]5LYE9/b?8aeHQ+.D1d84%386j14]JYWAhn<s=kujMa*cT5X\5aE:mTen]+j^1X'HpS+Qh2en11k9-p$X%;m]s7[WkmU6RXm/1Kh.=-D=bW3bJO3LJ_Yp%4;0m%[@2WJ*[G^UgXKsrY#QI3(Xo`ce2>BG5p-2DXKX\<-EL]%F/Z/(\.b_Z<aeTN'W<0>!3Ed4"BVNgfbr6aERqo4''<C"U3i)?1luFq%nH;7,NhoEU#aB-L(#KFT5TA@Li1FN@_2ME8.]B:`Ro15F\e9WWf^UM&?Q2R/!-s>JX?p-K"+\%UHj:JA\2[Y);X$H(8?2,)Z%K$M%U9;0L/e>IL3TN0'+p-0eGL!WY9*S?dV;lYi3/!2$o%6M$(sk9Y#%g><90(c0fZ1p7`^tJXCZ8cr"9`?J)!&u#()RN+8bO&Q)-7s]%gQ4c17`2ZWPoZ[<N(rA,;)'WKP]TJ-![Zkq_?&ke@!NA1ipel/MZO'LV'KI\45,pi=n$gAkIbKQ(duJL/#ho\C*Cr*/>/+4+=+LT%A.T%O@`[6ESk'6:b,b^n.Wh9K:.0i!@\&Qr2pjO`QrSJN5\PSj;.A4A!EV)%@^`d+N&Y$q(`peS5\puSfhMgN!,/;H+sb:am#6T+%fu?Ye[3I%R2Ls3?BPF`2";P+EhiLe==\Zu7d_c<%?Re4MrBtK/s.HAk]6JK'@&IiYH>I[r-0bMNc#iXLp<DdP^<U+=Y=9#GfVj8j%/qT3%En\):Wt,?*Mh[RLCRlc"beS$Sb.HP_8PiBa"ZSDN0_>C+Zp=$s.4sKe=m+LP!Kj:_0`29P`d.;d=U0;.l3ZMD\dc%eXF/_+%]:'qM3oCto(4sue*Sq=P)p,nk.l2-.mjl)K;%B(=)cSSQ5SICcdLKlFg3,0B&S""#=i]*Eo1&Rr;8]ftY3aM9%G._%K!_*qO^K:b%<t^cD[<k@j<i7iq?`t^7n)H04@KA%^QkYF'JUo;oLhrS$,a6s6mJaR"S%tQKHgPLuOO!.gG\F.q=ML@N/FQ";DQRPB)+abArah[F%A2d8!!VkgSgRB;R/oU/2Dr/0R7:9ZAq%q$E+5e)<dT<XPrND.&X3aQ1kP0&hQf?>@s6fOVgP[A*S6qlF?f'Y0h>P(PMf2(7qWIP%%:&+!RkgnSO0+[g#O'dtIXn_MKmd@/Tir&c:e]$A8#/791J,]0(5(*[NmXP8@K^\msq=`(olGNM*2sT_VTDs(UGoj\I*Ep4'f<4V(%Z`=>2EHr-gp(`-a#>0Ye5ad+KlCjGL%3<;M2]'[Bo$:qca6bP[]fa'%hEK_"KW\$f\+DQflR``N.!ko5n,Q[8Sp[K:*'S)O?!c=$%+$;/.]uNP9qr"aW^?7<DIX1bWrVb[58F_0Kd.MfqPP5T3^H>aQDpF\:O[<%QU.!l0eAOC#mEkD$EqXL`\6JsILOb':Ut_mAj<M=J%I=6TjJ%gVTUeuTZdQ_)F/Vg[Z<h1T[@5W.?2\4M)SDTt;@u$3.<M"SGYiLP!m;DaiiG(=WP2\hgd$h,<%:/E=O0X1[q/ahV2Ks<H%hOf$Z?Jds%SM1"hGP:"ojnW:unRh9l>i%RFQ#5ho)ThB%jk\VgmG6^jU^DI^FtR^AY`REM<R80iB"-A6DEhIa%p:_rU&uenDghAP%kKC?0Dt[Gj1Il;cB-9]]Df9`TUUIY81\1jup>4Ys"gRgeqqK;T0217BCumaYHi'f1%GnUUlJ>Co40!WtFml9srLqcTl1,q>X4Qgd%/oH/c!A;)feOrd:P^-uScn9CGkM"8mF7TX`L'ER++7ClFbC<cg6&0UpVt3MV51_(ATMb'Pa>gq>4`$6a%Tehmle01rO-aK<;]=\i%aO5^-d)BtLGjucTEVMeRDnd+7Z2a6t8G7JJhnFO9EHscs_9;f_*8poMpq^AR+!9q-St.NAT:]Bu2]oIY4hZ5"G]4ajk7:X,GI-%n%O8!9G_[14gi\Qt?G9,ee5<mr[/0?Uh<:S(#Gm31U7'iKB?JXK:jgXu[D@[HUIc#ikWUu>#J&5<<@"*@Q6=<U+jnFJT#,O-R$q87P%#34]Mc_3VY*JUlWer<aGQYG.#)XpEUaH*fs2ts5Om6?@hEqu0uMc46A#:'iIaLV#8&\h!u_P:oj4*qY7S+7%`1YTf>Z7jF0nAat`%(3;i$&Q!S!'qnuiYEE7bA!%1lOY&rG#GUp<7eH2$k\&qp0?j<BG'A63rd&iSHpiasII8ZHm/,@ZFa=#Ig#Y,E`ZKTs4<.XPG;Jd7%r8a7mo"4#>]-UkUJ:sS$(Y;<MM_E\5A'!"Aa`?t>S([2reb!air7>=LnG^E8frn_:61'_T8jpA&aJ^-=M2m]q#:*0Gn_hmJG@q_Y%&&Xa,'L*!Fi-oI4(RJ39_nDLoUi?m9U.9!2q`5ja3!Rgd`H+Yh[s&qNhd5-Qqu)%EP8D<kNm)>.RG!okrO&g23\n#p.X]!qf\7F,%GjRF#qdm!uk$XMODF^`;@'(MU`9g2\ZbHTVmJ4%@LPqG<liZRnpq58b#)BT.>5!MSL2/o,Z6]r$d@kAJ#FS$>Vnr@fg&&+FS)r2d%jjipL(R8jFifhjFQ<9T7j6_$6jdFE'9ElI%+$4,9'p!CS;fK=]&%VLIn5;<7I;&,+%V6`N?[holF`tL3?JaIeGP:!G2P]TEd*uIT%nKDR9j[bujb"("Y3-<[FBt2YB`V4X`m5t=hCnWp-T!qpMeH=`T1H6HPSZn/BiHN0M.N`'\Or]?ph\j4;ZbjO4JAEK,!XrID<o;Z&%@L1jt?<uq2Tm$);dsAJk_/JP!c7U_%mk=\q>_kueT&-c^7HDSGAD?+aF$J?qZQ-n#bg!K)P1P2E]cT:Dm93:-eo:<:g$aQ+0!N7j%Zb)d\-^ETH@pEs@DQeh:%4qDca(T@VB7nN8S=a)XIs65oS-DoGB5i+N$tk=Xk7?/TgOiSueWj.f?WY;Hm;OBIp,Q+5_>N7.\?Bk]%[uF!EP=fk=F*W3-CoLhR2%SLnIgh(b1Zdft`<F-f+46ca5E<Q6HXcF!J[G,ufcRD(>d_Bg=u=Im'S2#T%WhX/_I81[kYO16@lR0N%SErO$b[;Uk(_/@UQZ/=Y,?aBKl1R:\k5<2P_[IX7U$P.eE1!47fp?Xpog]=DfjS1R49'bLi@r/>F=99?(_5#mMa(u:bRR%LmgS-n%Ku4<@d@i7EcfP0eS7nK7k&ArFoh9FOLfjh(#V8'__AA\q0:,Do!%-[JFl8ZorZ[L`c7purS)(.R0.c%'\?Y6_Z51-p,iDIc_<AG>%kq77%NZ;ml8#u[2*,Y3'Nu[Q.d>f2`cT0_$>lYj5Zm.rmGD<O/69XnG,<m-ac]/(\Oe3Zifo_mI5!R5]3cB35=hcZ!2L+_``D_.$%5.op])7")6+*lNJ*rL$2r5"_Z/Osu'$m(E&V]EYDZ5QL\0)k7-+#!Z)]__0`m.WHN*<dG$%\@o)c[#-5iGcNCjn8#L6mmbTlU?f_%2cVk92Z,0tiSQTQF85W,pgWmDU1[hP@N.0es2"\I[McRg*7NVX$%mW&Zo0!j5VAFtj#Ue(foJf\?T`n^'9D>Ik$n/[o&au&b;*lE%bHq*A%dYpNZ1eQ6p-j^^>4(i_m)h!H?HHPt\4QWq,5$-tdiU/BJ"NWJc^2e_rd?-^b@11gpAWG3mIc7hO$Po'iF*,7q@*;hR<ZSB%`cs`W@BdH7f.HE[Ca,P9e#VP^#;U\+r;%B`Ab_4#)0.nP[F[4?-%IKfLcuC,[I9UJg"kcgqs3ABn3,q'2UNN[K1"?Z^O1LN6f(0@%a2RSI3B\D`gnb*CGOj.Pg`9SAS\//>^S<mdkYBtNG;?<tE%"fL2`n.mUC2?hF<M`3a?(nH0@Y]']M)jXF<M`3a@@%en%9WGa;m-G%cV8aV(\5t-r$@Vg_<g+=mVNNl?gj;A]N+4<l0S0+e^a&*6UuBDq<n30q#8f(V!]3b`br3_outd/he`R%FnU#m(RK't5($V\DJt-V%I5@AsY123E?F]0F'k?j3D-&e/lNQ1tqso\`ZpfB6mV]SJq'N2^jYoJF\U8Vubs*h!YEnq?gat1n\\1):GrKut7r-oDfr]6Il)N`K%`0-lemV%bFRcKJU\YDaaOA'];%sIW:rTj%NiI8t(M>@"1nkW"sp#%PVYJPd4Z8-#LT$?+J^I4(O'R&[&MMR[a@WKU(_BG'>Mmb\V%^\.3YLZNg6hX5PF>c^tR"t=oN;4d^W6P(%T1!3Jc):YH6lMTT[&7:S,8gn:9%]8S#]7"sJ)n+1Vh1gnKBYHL\D)r<id;F$4gDoT=%8%[$nDR2C0UYY'G[lN/Z>(_,V]?PD5a"K%.BHN10Y?BmH5V(>/Pf8(&Ip[47N>Ha>GeZoe?\C?XF(gN(08IR:Ja@XlNT$iap,n,M%n/9pN*#^L$$BUUF6t=gk`kC7nY:f9n4M0D29KMU4qoRdiI.'2[TA$cfo>Td_g6HRs\'=*k2BQKS30^Q:R!7iEE5+'\m`tELbW3((%#G12ALS&X&o'Mpun'<V(Ilh!-o=$qR<i3^d[uT,Fp-O"NP3`7r[!<YTM>Y1+CL6p&49FgBB:uBc"51Oao7?g\cPO^;0DO;2Da,lC%@7f6+06Uf9LUR,1^leUN'S+6Ml:]V0p179r`_1=P'67'sp/j16r.MVaPl5@\+GPdmcQR!bVipl*p3]dKT![B-06W/BjO/BLL;QIS%kE+Ja*^2OOQeMTmZf+IF6S`E+8#+)%M(!_PY8s'4F.bu3s&+do_Zt3=C)hd#HYCV&B[lgPlHoD`.n?ASdAX=r7ZI;O*?pX>etd<X%2@mBtjR2C4rp8qIgWSQ,buAs2B&lZ^4Ke9/(Wc3tiMY_P8V2COqm]nd/cX_Go&b>0'%!WNj9*'*I=6TjJ%il_Q(&&PoZrk*4/<d/%eTlINd,5JpRtp;O_Ku.#%R\F?4T.#SD#->[9\%$NFA,S\5fo$mE6=f>PjrCA*UK0_B++`eVM%/qa=D2tDQegO%P7MdJc<^f70f3p%BKZ'QY5?u4]$0Ot%-<kfkR!2;5<ms%no,=%SO9\-mNAOt\W2#1\aoNJDpMtWh;s%:dF?l?*g:O",e!;VbE:N]0XqT'GWA6Tm7RRb%q9gJ.L6#unj2Z>1R6Nt7fR5BE]bi+c3A-B$rS,5um154h3],;L/@h)c"*BXihC]I^<;;I\he-7O7tpF'.XZkmrhI>S<;;I\hbiA0%6RdC92(l!N&'jEYeG/`9iu:+37ucu9nJsL$UW1oVW2%B,#L`DHj7`3+h;-b'o&!Yon!,p`I#"WhfpAT*m6ZPSY4Cs62h(gmDm3Jp%\2ba>fQA93OsORua)i_Rg`:(JMdm[O9`mCf]_Fl<nED`84Ne";)Dh9_r#JRMb.\34+C/FTQX?o@c@>e)7%i9FBBPWU^].jMS++Jq%hlhdh\@M7\T:t'%](SKo9figL:_qL]#k<GrdVb8Qk<%&61l6ZRcCo[$p#kG[$m.4!mHc.i\jO+>E,^oca+q:9BBRIik@_EJ#H^To%:2@VXhr.Dl(#P#MC;:UH%C'.)l&C)&EJWEtYZ5=cLW1..c>IPahOeYs[P-6P]Ch0kmjF'*a6RLOA]NNt<o014[70>rgVqj\0!?@?%E;%6@:HlJbi7poIX72aPHidH1-Qa.B9[B,Bk_mMao1S/oVsLL2Ni7NU#@n+<]^m5A^&=&d#"o>E?gQ(t_J7&&LuR65PUHM/E-np=%`$eR'UYpS8rBC)nb[3'>F'mSe;-l:?H0H_0IJuFCB&7KWo$X:NQJZUUrA&d&:D5(gs3u7+V^;o$A3P8<qfRhK4du^*qXd:s"qP8>%9)8-?(<U%0n(0-;o7<jRSrkVX]^gX;BB.#c//n3JmdgAUol>i".h68$h:9`_pY4l]jo(6QQeMoja1ZOY);LhPS\qq,4l8>VccD^H%S\o)NchG^jq:9Q?I*QU#;'pnTf(fBUcGQnS+)blK7p5&6oD&KUM_E\5"!WDbRYp;4?<_m&VqW*NiFQ):\Td06]Q4SK6^-771<Iu;%=_MPh#*;2[ltTMje+Y:XL(5(c%:<UCquG="^2IY6%95W1O7>;:L4SNH^68_F-lh7XOJq5/8VKrd?LO:_dXe:jGVrT0htJ*4Y?jnc%O!cYM4n4ngGl!')cbp)!/j75"6I*<og<0o`Hi+6)It%h#)dm2@^Yf79LDZ&EL0l6TLnaTQaDTn'?Tt@'V]-.`/KLdorSi!(+L]&"%?/@.cn+ORcZ7kfsJ+h(T3BdRuAi1Ln'Yq!Rqed1m<h8DH`V"1krmLmfP8?`#@lGl-IgeC8l]KJaOj;GuKq1r1/&VRU*B5&=oA/*E%a0u.gOk:b%IuI41mt09:1l4?c'[7e'6YL.[,$,lR+ZqOt3B+L[g4ME=(R.%B=HB_U]6)u!?G=n]:L?i1<TT^6Ru;M#'S%`"hL'g"%o4)G8ZcTj(n9"Kong=C2q#1B)JR?+irVDl8X5Zq(Zb*E!E\n+&rr--l&H;T(UgTY+ruV12^Vbj,%\V]KB(XpC5Q@c(>sRYHMHA)'%e_!s7)L:A3Z-pdUXug#MY$KS:!3!q4=_e#gA(-YW!q!KQWlfjud"&TCm&]q!p_:Qh\87+>2<!kAXBb-s0?\q%0l/e#D5kRip=sNi%[UWT'29K9<bBe!J`fK\N7Gt8?@FX#mAPWnS`k#-`eO2`a/^:fQV<\-SfJr!&h%fjZ(=QUlg&:/R2aAQ'UN^op(RIE!*;THsdAq:m%W_g&0;td3to/JA'8iJl)oR$G;J7A!]L8i@9h1W8N;FZYReTSmge_$oXp8T/meu7!RY?SD%?Y`qcXf]KWfeCUuo=T7^:2L*a\%]Hm%2r<lJoJ,emcB#A6$Jt_>d-Yqt'2t?M(iOd^eiqN!":'%8:2)%P<Runn.SER$(e1=6c%&3k@@FmO_5BuP^'T54S++u6PWIQF=U(+N%;7cl6ACRWFooQstEE1kTns:MJ2&.a,fWb]-qN>8Tn7e!q3GTf^-[Su+jGqL]n[k*)NCCG/VK,j/]%+N7Af]]^mV!EfIhS-ZdK'S&%%(A+kQ1R\:^gBE^N,G>41Ch?#D67ZmR&]YA5WbZLHE?C0D6Kf.=>sYh!klHi`ha,sfj:]fI<(clL&^C0Dlm!=^pq6T[$QMF@BtH@%D6=lrkW"Mu3a.M[jiabS"_t/S?g$ktN`'9?%ONGQa0=e2:o2%/.)SA):#02_kJNI5%m"MGUL/T/9jiR4K.WnHJN<>-ojO:-@rq-R%#@*>'&TH=B)K9NR/Uh-K`\bJ'HkXS#o1N#-!O$@;e]8YJC?060FZ[$k?5]_m4!S%[QZ_6=aP5]m75Oehf;$+\8,2`,RiqF\\"qc^%hNXd":N(0T7XkbCK`3\sM9EN#P8gaFr:T%>Ju$AhhM=Ra(&B?b*$=Y<cjTY*$V+R;WE'Bn`kT._<$Y!tDdoo5!(<PS^G%J?me5W"%E\tQ0m:KA$)&mM$K8i4L](-1lBLDjeS$oJ9+L@j8Ze*XOgX!BX2ndtThI6<TIG;7"hnFO=p?`*'hg3Q@h)sloXhTV0'@mh8h1:8!%B>`<.?KM[PZZXpVH)iW72n.-A<On.6q>],p&+IZCnmL+^0"\Pnl`rFOCQHV/UG=X7(\OcmX5</UAgGW91c(T+[Z`BB!WF_q+V9t!%'LEeR,Td-p-6XI&S3VN*In\cD!>G$n:;TA-nC!8*K+%ZS\UEnZF&gfF24Cr6dCJ^+msEp_T!t82.DTeP,qIONrZM<\)V]/H0f!8I%G6mVJJ9srVTLX#SJqD9LKj):<nZf1:.CD^,AbaEU!11OKWW!$F-rd>Q>VFstC-,rd'Ga^`3K7k\RY>7Eg*<718g^,3C7'QHE:DPS%A\\#+rGo=/V.)0[\)Sd-KE=0US5U,X+/,Q_Q<Y'0*>rf;qY(\'llm!M&5$@mU)"+b&j]t:^B34%of_Es8HN%;=H27GKlK'^"T3m]%FKbi9b%WO7FKK9bAI;698hni=!^s)+Pm*5".:RE6.#"l+Q!,c@dP"=q-9T)M(]W5Xr1JHh_hr#A;MkK55nk2n9`dm/ZUb2%J//Q0%OpYbY;$9VY?pS?8f-BHKD,jN5B9QR/4%+q$9A:kRW*#AG$s\r&AM.D#[BN94e4*.l!1?5i-1-di(461DK.Ka5%9"@#,hYZK(n\W_%+9b"kageQPQMusp`S+G2"DjANU*N9lL%tjJJ\W>@m.5!l"=XeM!'7p;GqO6t:bg(%Q\bl#.N18V$j"E/i*5niJ_:`OS;73p9d$67%..Y0gV^SM]RKLWUn<F_7YE+Cg<%<Pa;^oL,%uXki!.9+tUOm>,>"KDe;gSAG:tA"$<_=9*:*?ec;`b@j-#)(Eb(1,^VQ&D@&&emF%H4//f3L@r+P6n>QQ/YV$Q-6#^NOud]E2io?N!);m!Ig<\F.h1Es"oq^]o98Md8W0[.fY&n`)s*k;W,a6R"/'#!T3%)6%t7bC6E`l%\q%Xci\RoL%0MMB*<%O'UlYWW#`.5p&;Oc7=K@@W`N#??l`SmjVcF)s%L`gWoEL"Q[FEa@OFQ))Sq"dBhY*hu(ZsJPV;dqpoG\nK%nDA`dZ,]'$Yn'(kl^N;T<.%1aopc!YA,l,-msOlAhtc!@I-aYdQjhaNbNh[eqq]$`m+3mQoDJ4+>kn/.rpmnbL`;Z3NL]m:^\k"5%IIESrrTorM^A?L"mjO^*KB9QI2h(]gJ,>WeJ,@>8^]!9?I.Z65=RE[%j6]G;aueM\[u^OK5<eqqJ+iR@<l6[YpFnbP?[h$>hu<>Y%r7\]H."./RA"L,Bs579l=K(*tA$1>e"s*g+0pIW'H,r:>1>lfhV34fk):90NrR*>^i.?!LEBN%"ck012O6)dAn-d%pMi+Eb>8U%F%2J),h6ObXeR_nKJEtr3FKcl1>'rU,!?jJ&t=q?A7!gHM:"+[>PCSuu.K#lD.-hnrd.H&gPM\05GJL?3V">%Ddpp]15Bj"?\c400b%&-[[BrR<P$I/JWcs,N;8rPZ5g+/a3fMLF1hg(12:(PDE_W\:OYm2*)^#=8B=p>[:[hiE4+2!oYWa$J1ef7"\rXaBHU6.<?qIN11]%qpCIWVJEA`3,"cSUE9_8cX-Kfd'W.057X-B_`h>^oY4T+E;4MLF80hOF80hOF80hOF0U3IGG"-Mid2d@iS]2<pR(g-QIiVdqdDto%X/->n90_e,^E!+/K`4WT+$61r;XDGAkeEAYYo!6iKmr@nr<M#:rM9IYm`WSDrKZTi.n0?SkfZ9>DY:P.BKi/<S3\71o#e#[kK5<9%<icFsYJ0/oFk<5cTBi\mp=Rns*OVpL_2k4ul..ra])2-a]C3>k2)h/?mb$%iO#?^?-Z?QMm:Ct%[^K4fnMRiE\@Ln77?o)fY<H98%lTIsiFDPAC\\>ed\iA*p8N!$P"]R4UETG8XY!7'?8K:jV^@jM3^[o8Hhta]>^&Hg`FKa&5qUG2i>\U9ZjN:s[Dm/@$Q]&WK#9Wa,%O$EJt:H\LD^NoU8hslHg`I>Q#p63N*23(per5Q@^_7BJ^4S4u4r;;nrnZDidO+72L=2+HtO$ER12f?qG]m&@Y>ZV$ET-jGuYC"l.%I-P(Rp#Pjsr:Ed6o(7umpsaN%rqIl@ia&`\p5u7q2#ocuSu)]Nht5e*kOEJ=n&PJ,e)t'<TBC^tgbV1mmPc6fL\JMsF-&G2UIs(!%UXu$KRiL5[m12AReL,k=m*B!cl0%:%dYfdVm+EIDq:3MLo\3T&jP;2eOa2*AlK`B_p20g&LHk[\$dV*-Q_b4oo<W'^I.OZdrp@ro%n*S_6F[YZ5WVU#n9cs5u[smi5$S"-=o?n#mrnq"QrQq$s_>7).2i_3MFdeqLh0U7@jq"%>_P8$qrSX0+^%YT@fXjpaI0:e)V5\tA%?2sEE$dZOp"@lHuGkT!U55onsBZ&*8?n[OFIH#-nn^g#'L&ZJ]KpPKk?[hgI(S:H+J,/]f:K)IB#CCI_fM1dIp0F<ck)Xsl7ZU6n%:Oi/IO1f&:drc;M"=Uk348.A=I/_7f2C/VBouqVDo>g%j4b+kUiOV+<L#;gl'Arhh3C0mdMpHh?M\!ROdf5bOY<6jdWpB*dio`Q"%N?:B'K`Lc)B0Z=:hn3Zc\`5_QiPaQSC[ZZC>>JI$"Ah5\j)9>CD/nMe0Qs,+l1XcT5Ofg[Z)dB2e,TF244i3S4s<qYpmk2]W:6#N%pr%gNmAG/+iKM$_Z%i[Oqk,1umP_kWJ%+O&Y1%>0hY(sDER:s*NqD>#roP^qpmL57K7WoN3cJ/,q\nA1lTXs[mlgQBV(B=Tm.\6h%U"<$6TP+=>]t'iOoU\j.q^7[drVZJ`I/DC].J:Rb!U%ABHTRDR+8PL%T<gc`AFKD&IcPm^j'F.j:g@od`dd*`TDA30c^R[cT>1$r%e)1/KH[fUs\G\HJWK2QI<#8Y$s4:WSmXL^$\X-Xtn*b_iYKsBWl>ApeoErCd4,B$r*d[Ho(WqsH<Z;jhp?4m<N=^;)H3WT<)dTS(%Dg:0;^\N:V2=pcbIenJ2=DW-9-u6+5='^02-bT/M%t3RZ=HU^J,XqEdc[=qNCLPO@f1Lo/RZ\>.q"cr,o&j+T^*)Z4790?_>;lA,%GFVLS$<"#0<6"t-pc#tb_e5S<g%.[E9P@BU<o5j+-BPh=jPsVIc;Qq1qHg)fM:4C'1E)&gJ3fUZIcJ$^rqL-?pm#dqqnMG+aplD7%9Fs*bMq`/p`udPD2o'%YRk2N,$GFpSk?e1c\%T,2;3];m/Z0PdcMi[>e`9o>K%ZFeJ?#+-E&IE`AZoe"V(0Ng4*gF5JF@H$A_-r_%3HFblX,gPE]FtOq$*L#t5>KuUV386=V&n$7#;l(n1X9ZoB-&+SgS_r/N-)<<4@Vs<BGMZF#P'0="?],tM/:k53?LbqkchPS,N)ET%bnp0fl4-1;]QENC/IIp[F;@B$0CmMo?(U^U=%n-OM_:<=Z0#]4<#A_jiUH;nB>#^EA,#jgb:E5<Gg!]?H4Td5oWC-FF]d[@n,Lgi%B:j\4`>;m+rn.\ZqSBYD=0-H9&&*;I7BO7LnYmm"pi]khlgO]%+.&JE(Otq.5HmVDJ*[F&m_I"1pghL@:>p9?>L[rojVL+!?E<R@%CY&cXqTn#:<p-+Bl2[=OKlUGlGVH;tG)-CRqKtTT[stA^#B8]F[@CV(`to`FH26P0n'Y236`]`3If:q"eCjVK_`BG8o5:DQgV3-`%d`Yugb*>0[@V'6;o=_WSe:#GYSX5uGF/dSl/i^',o)C(WrE[b;T[HbW`g-PE>.Da?ci-,2oH%WiMa,NPKId!SkKF%&oU]>fH?!#O%rmrZ$krlZ:T$3"GFtufJbBG3Do&.6--aIq^'(`I0\q<V9bA-#=c8kFD5EdJR>JK@2dZ`kU8dX\QrC]a[&e@.mYg.s[;cVJ9dg?&b%/WJce]r)k#GuC[oY=O&pM-BoC-WA_k=57Fud,`N2T@"SXBPK$IH0KD5XtY;Gph+qY07D-iJ/2uZqFdG:RPY?&B:lN3o>5.Bbkq*D%5I.6ZrVs??;<Nfe2W+1]n!.C0m^rMsDHgHqq:6'>nH5o=Gi="As0M;G].3$.HH-9)puKoMrq**QIJ1]WIc1BIETi3aOo2?=s2.(t%UHeUmhuBh$3%i%nj`?Y.3rY@rF8CRhS3H>g>r-"NUgFlAPD<T9*lDB5di=<u$.'C2]$NmN'Z8SYDbT^cM?OjXs/U@4TfZ14`*>Pf%"`H7t_r&Z3h@l'<mkeH$pn)7O9Pa)[_/T1aMQnkWF8RO($ThVT4*!_lhlEt\GLb6q*'\oMg1u`k5B[K0SQWiN^\7N(P;h99_o\)i%Y.s\?"mh@%Y<IEkM&U?Dq:)OM\b4NP2rAlN`3mXg2G#8;^$;&%:Y]p\Xgd,+kFHhQFlsdShfe<[2k7DOR]DI7!?SkUlD@d(^[pmB%pYP4Vh0[K4]C,m,<S&6IJ0)6.AIe1Aq]8g5D&rE$f!t.Y)lF7NdcX]8!J%Z8FcWT3Y.h^S4q71-26PDPh?H5fWR%>@?X![7X6]%6%bq38*\##qC;dWUScX"#r2!.XEmc,[4HHi#Te@6Hd>C:lZTDZEhV?R$HkA+rrTtu6NlK`>too@MODGRUb:Js%E:o*"'$p[VGEU+(c%.ZM:lDnbUV='\2"O.^0b4]mH9#Tj%hh0g5U<2T</e^rYs/&5HJj<Z4/"):?aH'Y-0Dc;)/4a3DWWT:[P???'>YXqWK*s)N2-].uO%0r2Pf1j[bhDS5D+UCrKFS[eLhe"B8S8[H(^$5[;Y7@p>AU[IEZDcb9f1/FLQj.=tZB%SA6^hn".CD-luW37)4Y<%,t!dX+&pXV5&%jKM2U#XC\N%-;DFW.fmSOK_)UaNdN`a\mZ9g3`8;5WWfsd!;NV3id/4_m8a/DnfH>45c8N567/n`6[c2iIo,J)F17?(u9N/g8j>_%"R&Y;Xrhjg*VZ%!**6/oXupn+NC`8`/.majq3jHa,YK%YL:MXRaS/"tY:Q;2khJ$\P]$Ut.\[>!`si%K]espA9h=E[/^9lA\sdts%bQB=Pe)TXla0,`@@!^>6)a$jQj(WJaK#r$0W>i"l9f]_,E8j=eHMZL`g,_1feC@UW$RQhn4Kb<r#kWjMYIObN\uNTeFmj%S%Y+P=%Wub=a^]*:g:kc^8K"LK_oCgp6h#qA;R;)f**Wt]i-D6WA]D_HXDS$Y!!QATH_iUn1m_m3dDS55rRr>n.L8koQapq6ee^_^)N=j3l%?%%upVNX9+*!O.0*5d*R?7X4r1TmeZ-3H?cp9FA<jl=/en+=%;]t6`#dG7,APPtV6SoNg1X1,a"Jq,N8(-)EPcu!ep+"m]1<hQ\7%VX^1A@\1V!r^(7^ooVAJ2ALJ+-C8l'RS33>_'dS2UOs9e`^fV?X(t^6-rYY%Dm^FVQ/$JX<C+DZ!pV1q$aK$!:of/tFB<=eS-ST-%qjK\ih)PmK;&TRGK_[KR$4JK&E;4WGGEpq/]?"m(f*rG/a6gIKm*UeFDeK+Fo^(r:BRaYfohF.Q-XC!'<$HPdCOc"Y?[I8T1"F1u%>GYA:#u#3kpHR"(/dV.-rO["H^[KpElu&,iTC@NrZEH@iL[Y8$^OG7+O8d+j^&.`2AnFE%'DUftX]&H-J&e2Z`Q(18:S7O>5CMhc%5PumIIpI@u]F-m8Y,Ndls-k,,nAdclKn"I/M(a;VZ&_'Gcu7_^lY/\u\="=AJ*l"jp]('M5QBJ>^[_!#Id(pGpo?W-qeOdg8^t)9%M8A8V]^8Mpl4]fedT=0^[BKMoB-7)nT=jPmP1%hF4HZJgDuRQX+8OFL*rjZT*rk#nrq6H_qMip$`.PUJ-U4p95Mksd+8G%aI-RuW%54oHdkP]o">JIg7_VH[6W318brVe`>pn%50p`gmVnGE7LS\KV+1"'6P6LO?VD#`MG0E9a1*rN_/Hgn/Pp;#g<06<2sX=J1g'Dn]f%g!]g0Pd9hY?G91TBL$ic95":G`5G2b>>',7-s^i3WI*srlg*t!<FM\oIP*,YiEY"&jL.BPVtNRFPR&NO.1V7ULuH0fZ66B.4m#%,%'77lTTRQ5V(ZJcH=D2gP<GXpk#5VSU;DILSEgHPJbra-[3Cm[^PKQc@L0"c)r4-?IGp)pu1'Wmop\#O\)#s;e/1jbm(P6b@2h'Xt%2S[cL^*L!gY!Q#2HPC&=mLJ!F8b7+EVd)i*c-+RHe2AFiX#;(G<tV5`"A(H8#GEeL.)n%4j>,4!bC*eQ5BH_>.%/r*[^/cSPk?#R%?f_2s]EDHho0K.D8-#7'B&Kf&Ft]NAh=^<hDhLtCZs\pb>/aM#b'3u*,XL&\;\YVQ>P_f[ntDDo5W&N]@?D?P>pN#Y=2U@\Z&GPV%cJR&4c0A]q2=Mk?P.F[OKe`i&Q1;@$^L`#Z?.r=^P4J.EE`k8s5UjWXW(a</<p>sJ<>-E5al$&"hT#b;m7.-=>RV.M,6_F%+n@Hk%[Z-,u5k%*PJ:sS[s*Ni4\1[nZE0q>oe)YHYa(d8;Kn;O@JmJKZpR-"@Hsm![h^Ab;=C`6t*lL,/ofT&.UNhf#rpQ*o83J,0#+IZ.%&e#Sbn+B:_`&AIo]fGk[ad'jQ"Nl%3l@5)%1_uJW:O6@l7qjH%0"5=aQeN+XbOPAa.m`cUe,Dtf]O/#f"O2:ir?,h2/aWd;mquf'%BKC?)qa&]?)qkgkY2.NTcnt-EmXqBL\$R56/\@_RT]u5?Tj+DmTP6B]qs`e<kO@[(kO@Y4s1)D-pEA@JF??>rEhiSRO*<3(\mI&Z%r8g2U(!W($h3TVYQ"[lGBm32@V*t2UBtb9ph_!(X8c)h.I\gc907$tsqC`W/(Q88oK&6I#s!!PFjN(3nEHIB(k`s1aT"=$L>>C_O%?Km9eQ,cXk]"OeI@!H4,TVLK>;^RiYWNaE=\N:"n1[!ZinA>dOmsJ_nYetn3G_qg[3I:$kI5lBKI38:''E@mX;c!AT';,'@qp)+V%or!ff:Zd5SPp^<5W<`IkM>t0Vj6'`rl(s_QI.##krp,EUHS?273H8UjY\3D%,@A1SS8pD)]P6cD$X\ADr1(e5IcZF+V2$+Ab'8El%cX2(fWQ-)aC=Il'i:m0(djB:prVXX4s6VsqE")XXMgHXtU'Eo/_IF$+JU:-_S2kVkB'pgX?j-JU>g5"IpFB$nc9M<8mDV+^5CPe<%$INnTG^\k>VsLVMGk%b';Jt"ZQ)>f:Iec"iq[;BGkKc;2^@MPR=l;#YlB)I>DZ4nNaUaEh#"UapZK(ir'q,>ks6.k4L>te,3-o>t%IK*I?;@uGla%68ZbK.Rs<PAOo`W(>C^o=)1>^=B^?X7VipWlb[)S+tnOlHn=:].^8fb"!g#jnRS1:4A_.aYX5J*;4hm^^tEgH20W%B0:bCreP'5K976t6F\k<c3Tcu";&<?k`73Uo&9ge3a?sbp]pi"_UU2%J*tJj7aP*rH:,`B^L/jQjeh@)UK]=2<R:]ef7.O*\_8l>%-f3))fhQ$:M/h!`*o@U=<=p,Q;,R9W9rKN`7CAO4:!iB*TpA[mRuKah%KGMTIp](h<Fr@bL[+l<a8[D`DB0uiJrG?SH1AEe4o*#@%kNBOfPZo2FUk%ET-452#o8-!;r&c_r-<:T3=:C2C_p[^rkI8Gmh52MnL3H#6ME]D$hKFOZH'O?Y/^amYDG+(7O'Mep^VKh(8X"KX%V!B:#G1LP:!]t0.IWoen]tMj:P*F&)PFV\:mh6Se"V8VW[*+B\%/rb;S1+59L(hC)MWT9p99\Rc%=j`UiVmV]n-L'ZW*bc:TQ^O3%PNM@S(QKUuh=Zrr\KTG(rZ3`[,8lXZC!F2G?n`.QQaXo>`>F9Y*H2)$XH/n2;`uH/UOTKuOhp4/p*;KikgQ-A7R$[U#JmZ-G3"$%%FN6mVr\N6e=>HJm-\1j*a-B'95F.8)LLL8$rTL1a.+$Qj$1.jXEe5C$S1jt#Nu&m/-^Rj2&jcDD@`iXrKpRfVQd?NA@:e_@)YFgU%Af8cg/A>t$i+[QQ5uYqaklM5]+&+Mh&<%)HSMc&Sk=KM65.h:n>2Y@D/3F95CJu\!aDkLrN!K-R"3PA"JrejoepppR`0sRM;h`bD%88Yc9n*n]pj`JHmR"R[!1nSR2"V3kcSlI\aTje._Ioj?jLT5<"q4mGrZ_.9mU[\-kZ(LPRpg*Hr?A.44gG,<enE?=kn,FuBrQ'[7%4CVs'0;%j;]=bK9'pc@X3$Edn8D\&-d*iqE:W)YND!mYia7_V)^UJ*niV_I0kLhcgSR-X0S)=-nXYB8A^"k3ngWNkT>e?uK^$->:%noV`VF#;Uh9Gkrs@44qc]/CD6p)].rm_N5R`@H0[g0ilnrB-4rS)$^%%\[WuU&':H7R<Z:&4?PFZbS*NiL09mGG;q\<RD%i/]#^Q%#mY-:\n"4eH$'$\J7n^\f:]8`]'4kJ4>L.M`eYm3RppV+:_7S#)K\SdKViDi'am:P8=#u-Pi-$!7l.F]CfUu"?4QTpC7FpR1r\,^%F$:4+/q]<c_XXF8;ljh(+9BqOd^iORTF#*5JKH+*W3Y:c8Rm-1,G=pAGTT<#!Zh?WG+N85:%=mj(iYT]5U87dDoAAPD.H?^)4KWF%8-K4t@6gh.lWR@/Ype0IXVf"DFE[:fTU1`"$2l,`\et#AY`]XWV2#Hb<CoYjUgX>D/1lhd]XLS_C*9)lEM5Wg\eE_"=s3?l<gEtb%aaPs;U&-=4R'6YR_CQC78h-'DKE-]k,GIL/1^*rd\.fX-;Ud=WS&0jnBFGYs5*"`<6Qtn3."q`1(s"j+YnAg6b9`ON,ac0M-s7)^%r5+-rllhAt5gL8]r=Ug:Ua0eQ&Y`5/)O;rTKp;n!-n.Hr;2Oh*1a?B[_/TO2Pq3=f9&N.7O?b`HJO56+)5RAE=AWqj@"<^A1(3ls%&X66#S/r/]J>7Br$#O@-PScahk=@@EU.A+JKqcXt^BnkC'XWS(!?SsWK/ULP^u3UDAGSVP`iOKe'J>+iOeed'7mXn?f"rc$Au#X(%Cl+m`:`]_%V.i(D*(5CFCcF_D\<$eRJY_c`Lbu$?<D#$m0TCUH&n'_J,dmau[K?:l*m?+E^01lR.7tHaejkOdU]Yn*'I<gBdPjo(%@)mh!a-26$,`r7('%(8nTS)`C5WMn6+nZ7jbpt>q1.`Y^/GaVE]jM\/_*oWi)p3\=:omi'.Kq!rd*&*175,^K,Ec;.5+]VP<@Ut$%&E^@lY_pj/XjScD)@D$NVh)l$106/DXK1<eL1?"AUCgW_la@5@5Y$@0PGT2FEhEt%a-..T8Gpt(\]Zh$$lW5-`@7+iXYQ+d7qs3?%J>*39FihUUNtti(cSKhC(b6o+@%N;.(<S`a(hCjtY\Lq'?6LcSA]b+B'PNrR2[MJMgNI=;`fmZTI)B>oPe>7i3a][._RHrc*%<sV%5VQo'Q_YZPC=t1)0R/>n7YR^1=u*oN.HaSt<feX;Eg,VTB&T:HBJRqd+:f:50sj%^Pki;FdTcd9PemJO!6moPOqdC>+Y:5iUr^q9%l&n&)^3NKI[f?JeU8:1Kj@#MC"MKsF4qD`W.nUuj&E'UL^r-I6*t'H:,#$Z)ZF\ABOD^_B,O:5"[rU/"-K-Fj`,\H$<]6)iGjcA1%'@M/1A[,E1NRsia^u)HdLD.3F&qD'k1;K,SAS_f)D&XN).M'Zla)i<Ea'<Ak>XkNt9a/[=o#db-D;+Je:jGkilm@pjI/8MtQjm9.%O<>(HnVdYC\l'Sr#NB19/L\(Q#1.:]Ak\CSk"5d,(oncKAu\6/Y]m3CjFQ1$3l*)/-kuJDZot?%H2?knWE:JYG+_lpA*k.j'fX]A%R7&h!)D@qEa[U!+B1DS\mHg0:P-4-rQ0VLK3(:Eq<O*L__'^'.:@U[SO_#ij'joiC!$@@JjmW;il-bHQ84^HJ"^%m3Lrs`HM`jR^%6h(CT#(Y[,Z.SRT9hDI-1_r+0kjp(%Gi-=*-F)l*6[',h6Kf=em*H''jNpJ=X9LmS,UbqchN7nqk6@"M$@B9FFNR9<+%OM<11*Rs%_\AP!./gCs,om+h^=6/>97S8.&/&7m-/CEd@iVikLJeYaqN_>?TVVt::lHN:L7if)LOgWm@*XkdK0p>/N8e5ri"A]uM.U):fQ#&+%,N,JI1R@)hijaZ<=XC-\"Z-m$A-A61,sB)m;KU'DU?lD/GT_9Fqe)K8;']CV[c0JIKn9K$IdV8sY+\51/JHsWU$13gDIJ#`GHsih%[H8N>'6Y&,WgDo_BM#44U4be@h15j%Va22D*DJpoZMD*J.bS=a[91P]s#nRUgpK;i/*t[rLn1CU.W+;"RuGL,mm0P\GB`e%.^.Ch%@CBWg=c*#A]"tslYsXS^>iB$>_KipQ1o$NZ-L-(f7-[c.]eVKej!$no:;$C[%Zm*nYOdXY?9bF`qY,E?Apbh][mCr'C#o8sdsq`n%UY,qT5Dl:JLB\N(.:p;*QUDW^KHOi!7C[O-7B(N`j5`O(c;L>=33+WsA02Y"\Q)[,$5m0IJ/=FScr(D^<G@&H@0rBa,$btk+B-'3%;I#0V>4r\&P+abPEkdh==Cagd.1[ueqqsbal]NCeG-lD?M\>t&6V*=s%ic3nktiu:>#D"(I&.ZWb*=4FGu=P_05DtiErM]/7G7_l%!+h$EK=4df:ng5KLZMtPW!u("o9*<XRAQZCb?tde)HaCSRT@UV!#_jh4'%f?(`-A?6<]S(P7h_'"r^3D77L3<-u\[Q"VE7>!@Cq0%F]jSE.'*_H$C6^).Fes+``]8uOdDCa"@62P"h89R.O,bIHDV4;TnV/B]SmA(+N$!SrC;0!1;'-kL,WWNd^$V9:^hrBVQI5Z-'CBK%Pr5j`nrbq#;PL>cj7:n2.7iqP:%2nZJsVu9nAs;rdQ/NVHR,N>Bkb6^=;-6t,^=!P3/3R>JI!nJQMZYBQdfIMDg71kET>?`=H&W'%XVs#DWP+=^EMsh-9*%^DM;EEkj&P%iIBa'%h2#1Ee7,d]#h]@h)>qo%Zj2D?9S8%`O+=i`eO$WN^qnMD9koQJe?WJL"d.:l_6Y+f%&_8.)$PgNT]5"V+NC!0m%Dr)2VQYaha[X3(pm*,ipHaBHJbqgHGdr_7BRK%FNVY1CZ-@*!X,9ZP12pr2E!>90LhPuq!_qV^=`=aJ%@0(l:m'3_q?W]mNfnQNB,s.89.oh^t_,1pS<8j6;<T%%7:dq;e(flY!nkc"aU]nh*E6!?YbLn*3T7_.VN.Cku3=G(14Ab-Hs'Sna%!4e_6Er\AUgFU-7R*5YjSdlr?<o'[n8dRBAH3*I<DY4600h:8J]`8<MW.4S70,@#:RoPjU']/$VRRPQ3FN%)4e$LModnq]oZ!"o-%&[WtR(R,^2"U]-$'XWR=RZ"t'A$[Bp%na08j9S6,":0%`T[9DCRC5p9%(@`'/);%!miC78Ff70/Xbks*7YpOS>D10MU3HBg$qUiX%.b%*7`uEB*5,$q+aQ*G%%b-MFLO+M,TI@2?e$_"@L7AB+O;]F8U-b;`B@'rrq$S25gil_S"JB4X8n^k].&`CZ&a``,Y6,b&`>Wtm%oTD/1@O69qMPKfif-.?V7Lbq:=G,a!<4:o2epISj5/0EUh!pkp7)s3bg@]6,3'6#a:cI<roLQ&c9]e-n$p5-L;bA@!KsG6`$oA/N%i^,A\,1;;QE`-q3.L1pfT?HAT.`dX`m8Q,\p?j">eU^!j6gV[1L>k9!AH3%D4c'lT1+s>8'FL^43=UQN%a.$$j.M3FPnt)rK@RA-%%&FC97A<@.%E/nu%CiGJV$r=%;E/AsXACZc:>d6u5D#I/7Gsii7h]Rf(Z*gHU(>Am;UXV04s\@KDXA!p2'7@VL&msEm6PfXd"oS<%/g)@)BU(J^,Bo<h.3T89_NqZQ`O_?e&FOM)?m?pMBM]2-;hCu<.0R^tm">D!bb3c%S*#?:_d-3\8B'"8?.37R&4&(A[G7j_ZN=#s%EG-7%0Y7@aQ:PS_]qo;12WMf;7GLk.b>>4Nmf?Vm.pu+AT$Hn5Htu'l`lCtTe4)!HFVO3u6\*HC/YC-s7Y"Mm!laU#C0l=aI8G&5%#G2:sa[iuGILiWR9u`)kP*H=898*i,:b38a:Zbs#q*[!qB`H;1+,47hF:*8J\W'QnJt)h@h=%(C\Y@D-HnGW;Q\.3-]V#Q_4DP>.%"/QSXC*K+,'e@/]VG0<Q'3=L]_*iak[S[]cGm,ml_\nj!f0P0M@ek7Lm37-K9pC3h,W"sig?!HOCnri[XTi:6M+e*^%p92Q5uIVN%QOeuWO<L/[m'C)&0FeAM.NmX[&G3ki*/ODr,RaX99W/u&]0].@_LU"]i1C;Sa[h8HL_L/OJs@SeoV;5kms%u`B3?$$B=u0@NDpct%Lm1:5]g22:G\"pSJ<r2KR0Wb8aQ3;aI'X+bk`TO#M.V:q,mW'>#(X<f^J"Q]HqU&>O\t3D#'j>k7DmXq5?=IkQH2;&+&.)k.8+,a%4g>\oL]Vmj3t,@#Qt,*kUmBNk`MHScXd6=l.]nd8^C/.,l(]jH7620$+H$rXWGtDNNoa6Y:ZQ:E$<@(V9_Q1/q?&\rRZsKF%%n-L%9`>$27a<;k#_,BKg5`&Y+M`SO!5h_Q(C%[O31oW*5[)A]N>H*p:&@Q!=<SF2f#VJ_PI=I>oK>@-QXE*(G5$mh0ppHJQh,(!.)k-U%-eDU?Xt#c.dgV0jgKY#bX0'P++,T*;-@H231Po#0B[I9+`Efb'J.;(f^4IAlPTYC[OGo]&AqgsIja]=mZ>S;Wf!X@7**`Zb[DUN3%P[dVeY#+&<lbRZuPLr#Cr2@?`AZ(H'.`#j%()36f]u^.k2JbJ?7?q6%&YTH.Y(a%;%X$$iXuR&!j*V<rdS`1D@DZ?:6JuOZEegBp%q`ui-Z]hsQX3#]q/<p;u&,UD:=s$?5H*f$sM,Z38;5kt6.`sWFZo?-t.o5\E!P6fL>FJei"#k7$.YKaZJO6lk/%IbHAk3?>!aj\6%5:sf`l"'7'1_q`Vo4F!,TGhAV7[!R,QuMgDX*Zh&IE4qcr#B[ZZRK,`!Zehg<q[Md0?SAS>LLoq<p>mMaBLJWV6*QPQV-PRKGk_%%AX$XE8&EC@HkJY)[+k-TG)(8<P-E]-M$]J(0>S)rCM\L2khZ_g7C=/]B616GNE@BO?^]o.cgW/Pc)n&7=Ee6YZ]WN4&lNBuj)_J)%?E:50e!Ym_ms#ut`u7cOJFLiE$QI2D*+%O\GdJ%r?E:r\Kd4G>GG>4L\Ha'VLo2u,5!^MARu>7^mbi]IF=E8.^XD43/AHI<1##,&%g302KKgW9DMleo-^Ph<C<`F7rWt#TM%R#]NXT;eS;V=L&Z/PsuO#'3006ZJ,H0RcCZ=N&d>mfXjE$$[D.ro!&rge;4W%JZNFZG0:%"9G#$)CA>b!Jf_[-bpSt0GNDc-k:[8SV?'7nCh9>fNB?b,tZQN*2^P*PrS\>0Hcl1gMrY,n,3am8.m:YiH@$honbM`(4JOHa,'V_%KRK+8"`gN_3PmC/[mQ]OR&B'Vomt\f,VB75&gd\Rhk*$\@7Z/FW@N(R*8W"BmluFP_^PX5?:=L]W3QNH=fE::h.NiBiLCXj5<5c3%964c\%`Hd8]V2#P7b6S)ZnfE:T^ue=49EY6X\$^:e?=6J%'#dGU.FEO17cZ9>sL!OVITFlV'Np5:;md46<P!Wk,DIoKIAa(esjp^%IRuWgEO!q``PS8u85KmBVpuN4[kb"^fts^T/ff9=s/DL(&eU;Cq8LnB^j]3D;rVBX)Dt7VE$_,e9Q`>M/UXM:23P`p]GcRqK"rCA%nr"28Y`0:6-,%3]]XYEJe[k[%3JfYAK-rdX:?%J6*4eJs0N#RqHfitO#"urCHeL9"\7<h$W/1beW#A>2=5,U(>q6sKWug3)W\)Vb%\ME'/4n1([emj59J:g=t5'60"l(`Kh^F37/=*QNYZXiu_9*"DFnCh%h=bLE!2p1uST>=$`?.Dr!S.S*aqeW-sCXe(S>NsWQ/5XoQ%ZYK`B_=;(_c3u&Fb90BRp?Zf!6LFCTQ<%'q)i"X`^^SdIMCkh>1UH'k]1q4H>Tu@r"e7fN%q`NJeJG)(0'M[Z'7;21^IU,!W,Rm9%jbV)*?O\[>hg\`'ZBPA39bB59LeWd9?AFj'(j-D5c`d+=-*NN78n<XX9#RQJ^eP3lp\B?qX4=BK#^WDGbud8Eg?<r>D+:NX&aT/U%:M'1Z@h6)r<g.?s#[#S$))k91@m%/a9.S,DSQJdZqaFcb@M*\!.8T[M?pon'[#]c-?X_C)I3MtEg4pQA_[Oti[SVIQpaVMhjEBmk%O9T>dgPCiu6GZ_''(G9(1qN8qH\TDoQMjf:KkHB_$@H]Nd8OJE3%D[>k%Pm$`_,LT@KiU2:5UbrY,B5RoHnu1/JL7W1bt4cW)lGh%]Q\B!pa!YI6fa9/<oNp,8XF'rHYrd,*2f2kQ*I]2,d-C0B6jZo%hTO;o!H5h!)k#L,+h3@Rr1B!4[Bl<VG_L1Z@6m^'lVHa6"Z>F%1mkuo$3Ou\kQ*;97XE-JQa*;eo<Ki>k^f*0,4OgMDa6H5_obeA\1&1\;4P!r(r%LpKc,cM"+)#O^du#N,*2HbJ1hUnNn:$"'G;Cc%ecB,XdF1C>Y$_LPb.T*79S^a+>Yp-KGu02-5S]_dfZ/o7KTBUG.<^B[$jhH8DkI2E;<-kW*"![%PQ\`%+JAe`nr".aN[FurJS&>k%,gQL)<g:^<,V!5(78=4b6%Wf=0eMueJX-!T_31a<'VgAI!$uMRN+3,aJd<=WBLV899I7=lNm\K_U>CIT_%*'!LRT%KQ"2/+;5@MA%k@n0+[ElW@EcMsBfnGcZ;>:;%U3s-^Ht+G$X\$;\Yk"1Ppb<[9Bl7<\RSbJc]+$'"S!Rm4m;l*98=#Tr+%dgn1QoR2b.nE,.YrVL%3(;>nX7TPPej6(.5s(`R6'-US@OQ)S-YPK1>`,Ih6l`/K+K?9;#P1o?[fD+DNlN"H1DEIn$QDQ2&P_qS\eYfJ5]L78KLk5B,:[g^%@L;sE%n0`JH(L.W/2"=+!X)\=#l#J]:gAhl5UAssW/*$^joJ(^aXAGb-2FCuNf!$XP38VO8e#@!aY_uY7EYI\P4Sq%!F]E#Ue]JX%+rX8Y%DU=+=Y^je;Rl;=lI?=OeI>)+8DIb/@:b/18pMd+8$I4@?m?"?8/CJ'a?r7m$3s9n2+UD!HuUA\@7VHSo`A)-+Bg%C*,Fmg%%0m<nPeK[U-Zp5c!L,Jj.e6!'d0<-t6lp6;QH(!p'WEhmAWfI87%iVPo"7J6$Md`n<J1uZ)?kccM_`BsS'])Q3[ni*cmn%B`$dUJ%83=sd(N9KDf[NSo74=rqTW01](jB$K.jGuESsH7-+DW'4@fuha6sZY:bf-<0j$f>TLujmm<"9_HJjg>tW@`P\)<GebcC6D@=%S'2%ZN4p>ekBhWm@a["c5JOA@bU@7;BE>o/jk+<1iH4t+ol%W1;4(k,:1nZFm\+:o9r,b?+KMeZJT&<Ta0"(SC)9-NM5$hQ?I3T.'-("%MX?*N8!d2MCV@kHTWo:Y/s,b-O2?ASo%u;'S!X.enDBc62iI]JjhEhR2l#"Mr3u#&q#pUS-3#R>"Nc/:%ALU-Jr9FWHeCKkmsPa,%g=fq%g#?M4A?ndt.Hql/p=?O*!?p:DAbGndEPZ7iJ-6[HfhA1=`ANl3'gU7YJuM6(jg^mi/<>9"*hmk(H$Zf$n:,j(R!?X>[+;sU%gbTG;CODo)pnf'jhRXX=Vo.24BaZU"^(:aeN(s0'Abq.jRA%GQfgO9\@@PG]s&M/_*db_VbbnK77JVpVr]hNbaXbcW5.%MEMJo<=%M0r3IMn$D];18k%'pVk.H0R2>j`@\SThTUJ:CDJD5#_eq@<oZj%]2-=QpaM3pXa!!SP1r*FMO8c(@#uhS<4t!%^o`FWD!@)8il/T%&<?9knI4\Njo/tfpM'Esa9g:\'9;p]JhKc=,5;mComeE9]Mp:k[k?62^RVZ5lT*"VK:pLYq;TM)CEWm\Q-eZE.HXSL0D`<]Zs5qn%]GbBr@I:d%fGYk$1ao.un]P2S;^1ZTGY2,DYoI1BUO1A1QQgYrafG.G=S:gj<2-n]Udl'U!V]4EI"Fn/Q$W+RP9)l+i4WPrhQ9[g%2Nk'4%4CFGJNVS&.I4HD*Ep^>n9&M#\Q0]qVa02(Uhf(7/ck:!eD>GYP`I2EE,WRDRt"hA%[r'QA20B8Y=.7e*TA.)W(fhI#:Irr%!S0h]TT:@(,PbjnR6R$[9dK0\\fuu10t*NCVi$Z:OE[ZI==*,2]Ui$H2&ON<QX]8Pf17f$P27R)S;XbKc#U'W6>7)HY_A+rk_]_X%Csc&n9;a&7kN/\2aJF9oLm<0WAFWCur'pQI=.iO:]#J35@PTTR1^%'Q+%dkXV(L;$ZB.eIUr@)&IqDu>DcSG:i@?YqT8G6YbTq:H%PZdA,b^aXo>:R58o3%J1Uq/3'cmQDZP(a@!2O(/g:kWW2KW`=6WL*c^g=O^`,eA$$*$DhSg+&q/.L=)#1olS6k_eJ[X4^T=i<&Ah%k$=cu*NanIoe-K1`em@>.bl-ih8c>V9\:cIr0`HD=cYcI)GDFW)8DEccbFM]dVr(moMM[qU]=SD%TES]oVEaJ?;?S]jH)u!78TgX%/Lq.ZRNbZq9[]n6dT$EK%mr+@p*A=DZ8l*G_("UeK\>#K=_uZ$!UVe/-]Ufs%QKLPb'P`I\#R#?A*I)BDR=J>.e.U1#C6Zn_YZV0%f7@`Qbbr237ZAeE]s/cK?A$pU/.JLS!BiBJB*p2_3LT=DCE^*H-X[&]Z.bD3P>tl]>V_q(ak_PT\V9V->TfYtiB<-2'RA3Y'bVQG%"s4Z-MklE!^'j4MJOSH8@5V<*-kB<`,BZDjX*.:lB%<*jK(0[Nk"=li14S':;e;#RJ`Xm':ca>eY"Vm`^FPR8A!ejDMFfraG,=EG%;9K<_YBhi#pm)HK:8Tk&a:)YgfIog):\r(ZY3G#I/!L2u-fJ7uN)'tF/2Xr`;1P'uR8b0Ab50l>9J2rC9;Ri\W+=#+D`t>(B7g@q%(8(T5K$:?8D>MWO?]F/I+i>O."pfl@RE2P5q9mBmU1<+j2Wko8YBnD&TWo:_.5sohX]U%YTVpKEYX5`"=:NdjTX@ag%J*c#kY%^O%Te[QG%$Sl<A]o1J&Zef4/JN(##og.^5Ng4'*JcHZq*_sT"5Xt6P=,SQ[8J>(d:&(M6,taKX?,akH&A)U<+_iNBK:oj"YfG''f)<_%"lF&%l31CR9QE:nC0M&gW2%/P.qj>NF1=mU/XtD.Ue03BXB=Um);ki@Ys^@>Zk3BGPUo.5WN7jdC(@RLKi79A5q$i@(Qi;6Q-UC3%53,e66*;.M/`6Wdi0Ij&s"Kp-.NJ.2lljiWS1Vm"/tT0F:p:g."HY#Lj.nG-`lek_4I+L:TdfM-V%UnOIjb]!S7I?<$8ab*70L-!%])?7>/eldK"@dsdX)&t09MAP_Jlf@3P<-5W<+kHSA"muMa,OTK.5af\5F:!lf*j`oOg%K=NQ@P`&HJ_#^'P3Z"f4rnOFe3HC('ec%)UhXl;R&kGceCg%XHGi9:NltCCQm[&[D3q]\5j\jL%@Rijm<9R[\>PjjbVn#Y#tj@R:aoI(>V5TYqZ>_\YB;$;#"Z4F#LW;"J_&^%cY2<91ID6FdHju#P#$6Q,!_.&B+#M+XJUkZ0cN7Z5r"<qO]Ii8YbJgbO/MS5HY3IJa9jkm[IZm2UuKk,UAaVLS\-Cn52j]Ii<GpA%]jZGACI!s(7on+jM\-:"&DFQd,R7a`pXtG("=($pP301j6D7nOEa':;cIqrs&C735&(h!j#UZ,lfSM_@.AkNc,/h'B@%>ZM>\-)i%E&P'Js0n_dLnG+G$'pI3MaJ;Ve^\BpU^dt3,!6;\;51Vn\I9/h"IP\*CG'\F;,C.>d)p!<jtHkY!H"@LXP%h<#V</>WM7KYU@]iB%QNK"U9?f@oc6cGl5bD<d;4FaSYT]B<#t_[m0l:f^0S0d-Bq>XMF`W`%N/W]W,mXT7UBnc'P>i\q@.(`P2%>9LR#uM1pBH3a2H)W/%p+eP23s<`ZGU6]f6Gtde4+r7s?`]VO'7p/L.bn1j1/Bjn`amjSonK,Y'%]@%F)F9Lc:scU`mDjDBR#_*:)r#bMK'rP2;&_cj%:`'%Dlc>FL`/0^`l]U$@coG4j5+56STYOqg/7kqndQW3#?.p1#0'#YI0(?_68\ui10qfjo?H[O*=ZkjR?i<5Ib5V+cM)-l['"&AqkM[n%Sq^&kjt"r$PJ%R2[^CIfVfR[YC)pPm)!]D5id<RL%1-p8@;6+C&3_%>D^"DWgQm4]h<cf)6?cjgnlNB6gBO_M1/NHT\DB;.f\Ogu%a$Zhdc?S")CKN5W240a7q"SgXh9+(:'Z4Q"K?Tjp-*WXT/-PghM]9p3>\to.B'Q7GB@@==<UT>pdD'GM=<0&tnPc4S$\=.rDorut%(9Veb]6uKHf\Ka#D)I)QgngsI-a?_67a-am/.\)aCQ$Yh0\r:kBjD*a'LNi;*3!Gg8prZo%W6L"G;W(SFo]X<d*hbg(4<1?%eh:G%We4X:CgCH(>FWGcbet-j.^sZRdi=FefhkOYK3<)-&%Lm#k2;YnQ0.L2_dkTg/2_QFp"+)g`T+3tpat#9=W?/3Qq>.:j7B7]Q.FG_%Ij18'G;XX:bmUA`i->2YUqa1HXabu+EcZ(rMqrqX]O@kOA#RYuD_6(,Ghue0UBC=:+5+<[8h)F4_u59<^c&nMa\UARU,<\Va2%J5%6QI4d9/;ms8%*@IAd@/JTt^6Skt$`R(;RHPc#^:`HmlVVgch!jDl$KM(K%N0))pbU-eD<*LLd!Gk!h.g:S#>H7a<N@k#>fO+;\gK%_Z!YaIC-S2/e>4+nA,`P"bBX`M:J%Y#(:FXN4)C:g8?.t(d-:\=i$(pZW&"Xh&2rtZSU#rKtGntUirUsg=m6QcRbcP<!W]q%0p#B%$NLP-.g.E'"H]480aO"S:`3IX$nii+LQdEEL7@5K`WHn5Zd%Gds1ie'(2KiVEiYD!mChK?cG7@f]GMKbM[ot<-lS%nJ7"hK"a(H!%OdVK;P/8Co[5p$Jg/K")d_:+44CGMKnCi+4JbTP?NAWV<f!\<5&V;T9\Kf:.o2Lg>l&U#No,Eleld0_i)BjZ+jZ,#>9eFW+XLMeO%V7ttn^<:o@!t1TuEjmoMPW[?4RLBi-Cb,;26_nZ_S_Rtg]5=9E':@u:QHE?E(eG1ojaj&G=2V<MTZ=KhWIU+,V(j\Bp!i.C6Q=h5%>\'+5D[Il`q%b/7da=p'K%ZhOA$@>bgeT,.C\Ou"iCk9]L&90d0g,4#J-t>k>6BH8V;P0,[+5b>jFPiL1mHX]7EX(i%!mM>Y%(XP%Rk"tlbQW>@C-)h\<4N#Eal.3bVE5)\NOD1`6PF7;e(JbVNGrn,Xej[6X'$1Vju2@\JKo#[L$Vtk<Ch++>C,I&W5dQ*?F<jOak$;?%0U'NqTm.#(GP'5Sb=L5$J0(K%;tjZu:N8D"'c:<B&,T:!9a!DZf$MSD-AJhlh,=u8Z"QNBSZ-Y=%Q.1R-K#`FZ=t277[G'p2l,0G%$5!<$9F<5kp6OC7ScHN)>mM"4-!l:`XSV,G![B:&o9_kCR&f"52/Ah2dmNLS[AfS0`'f$3`qke8C+7Sm)4=RGAZIgH2:F&pPc"<H%>(B@_1r&SqN5"pHZ4ZNN2m&=rDHZ%tI04kAD'I;[q\s1fHe^d_$kZe/VW#uTY[-RkBHTLR"t"S()h8@C!qGO'49^.I%?/i1JuD3#%)C++)2's:_WqRo6Wk$ZPO&Y^\M[9t$EHaA:'oKe6E,nALni%UR%<]OnDI$C%#dgG:%Ydq4L-eL$oPF`];/.V#;<:k-$@e&O?XXh*%(D2sH7#)*MC"bjT_W=Lj`2baV_D4!9U_%8E@gOX@lr8cZQcj>X+U-&F$&\jc8D=_p0ZRRZTe9X<DYUjHQ?B-#";Kd3Ko;]e(1;T_%;-F:)IF/Ohh9\2)#fA?(/F#Lm.*N#IAXs1#o^'B,;Z@.Th2N=d^fZi+2"\c'OJ'2[>?$Y_o-_Ca/f9km@SkZ,<E.+O(1FIY(?Tg;%`sth9a/t`/T9Z+K.`l8XPj@7G8eVDDU'@%Re0@ELFlRI=fb#eX<Qr(:6=Y[&T.65sYZcf;.Blc@e^;F^3bGceGsO"M`)oKn3m,6R%lAWn$G9M]3V?<:7%k5#DQ#G\T2\>LlYUe/0;(,kb<ugQGm`lX)@tF05]1-]mZG;YWGdt;da;4:AJ/d#,hoNAhU-Gq(JuZO6*"Rb3%JC>Oo"GSkSC;L?V"Q@<bOD=iV>2uR$.@KBQ2/>pX(2ab0IBaW)*[POVV2dQqNDlPnA:78[!(4R<@'o+NFWDZ@];HQ05f86gl+t>P%R%9u\=ST>8_.\Adp.pEi4dk$>_!H;8pGB=oj[X[<]A(#H9t7sKQISEO+Lm(7QJR5t@A/uA_:A3tZ7.Q-l`%nWBEeLZ`-,OaYAk_u%$A)*<#&s?q4Q\+PV@:ICC`tSM`4fe;k8S:+RYkt*^8qn#M_>Hd9?EZWNK"&/@lRGHbU)'1e4P'h(cr>VUMaFQO+qlCS3nibH`fmf%lC-e\P._7^=Jf^LHF96i#RM]kEDE;810[QD)mr8Q'96j+r$,]^JXWTZ98sC$_.\1+_5DN155XilBlF6FiiCl4jC3-P]J`q1pSULC%K@6QH]r%ctH2Dj6;7&<2(<":W9ME#VV'L^X6tjlRX[G<f"24c_4u#Pbeh+;Q%\K%_iH9'K(D`*0H93&_R%C8Ze#+(?:B^;Y1C!P=%Kn^/srC6tKUb]R&UsVI*SF5mH'0t>H%YUL0)+l_U=-bqeE,]c>dtCO7VQA*6)b8=nB_JH'IVV10oba,tis@T3^ep8%65q'0,7,O-%7.bE;HE!1<V@iTfBME<>$(rllI\aL?k1'Ulh)6rk"(I^YC1[$A6'RUWG7=esHP0tBN-43\m`B2U:QUl's*TU"6mY-D<PO81.)M!R%A?s/f'(o\*0a;M?]%U1-QHW<a=;+&M;Y$J;lOF?dK"XII'I:bcaau9\(O\Pec7]@>[K3T&?pY>s4'-ZUU+&\+pXZ\PDYomW<a.M-%KXo6BL3pZi6S!n29-S(DZ;>V3[@rS6lIP+CT&jNhgV/6sk"p,)F6CW53WiUF#V6-<WK(`d6'YZrHr/d4p#qfO3Z021WTs9`TMgE;%@A7Wa&;b=Cf;$_)cfW2[FD3>T&.OTl!<q@:MW5\.iWAe9G+Rq/Jgb;4oFHp5"CTE[2V2"_0`b1,4A2/#k&C%fH3"f7#$.,+@QKr`%F#&*MKLi@0^nO6mA5?k]D/=3f2a+".B`;BhZnWX(o:-b'.;uXSU<_WXcIp/`Bj:qDF*e9CJG&3qmB1\3*l`q45Zl:5qoIWn(+9D$%0M\5LYPG2$bg2=KI"CLNmqGi3<2?od[d(aK[$*R=!)sWV]c@IhV9AL/]aG:#M9ta:fJf,cG.4'r9W8e#PrkL3Xm[:"JO/gRUa8*%%$Ae\'PM27c"GF%lB/h[J1F.%u'k!q?-UHL,9"!IfA2"AoA=Qs4%h*"'67\Nk#.P?%E4@RX4:94X8BD[0d'n\Z2kjX:Sp>((n[@4X%ACXJW"7K^L5F6+JZeh"*XA78`lQ$iQB?DRdlc,^C[In%WjcMe?k,MM-M-kIFK(0Li@.poCZkm/'Bn!E,k[`5W_<-PhpN5T3@OX"b%'OD/n>E_&LdT08E4qhe'*@V'YM+f<.#+I[Yc6U8`/[7a`%/T/W!#^\!lDMHDDJ+'P)E.L4ae]`_M598_(r)YW0Imf0h:k6$%B(M_%2WCk4EQ5.1E+&;=A7t43?spb_#_M\gg\s+2$m\"(N\57%\MuA%^CZ6Ge[+4c^?T]X`-jPt?0E@m/*1.b%9"lJTi=`,-V_M0#bW?.%CGEtdZq005kaktI%)O15BtZm5.53A;MgV9a_"KDSl$ZNFi.Y,a(0QMmPC_,iBt)(gQ3L4YK_l-%))/N[?]Vg3@6'G6R>aShHUs4O%'_]T0-)'oV]#BY_5T3>Un5*M/U3g,1GtXCtJb(qT']9e]6J\cmgF7T?VNZRf5djAI.!BYna>S(S:C^o]S$o*Zd<Ir%/=de$/N!pP%AHrnI\Y,.LY!-n-iG*-.%E\9\/mC7:B'#sQbBYlq'8em%5mJa6\i.1T4*,$9PQ$.,aD(fm#r2Ym6"9rL_LSA@+=heSUS5K_3r%fB%Y&[%M,=>FU'8;b?XEUBT9U`C!j0Z&WWNmqFD.PoD!3ih#fJA'.SK$j]"._P.&_^WN,@UUEXsnV(\<YLN4l*pS$Sb\<1cKDi>3?n'%o&c6j9ANNh`M,s@)#]JGQ'+,T5I[TU0N>or42/\5XB+oVK1Or*`f'Gfn616Y>%$r=dqCb=/\*^D@3R?i`h3@u""L4J4rOcc:!cm%%"8o_q4q_(fpLjdghH^Jlf.P:!i564h`4<n]!7BK7AWZl!j<PHNpCC!D!+"=E"Yr6u"$!0I5clFHMd<FZbaC=RG>AhGQ8:&MrXPBS%/.Jd8L=[b-5.+P''[h\e94/$/qk_7b&1XUs;MngH@k2"r3#g2#B@u<p0I3&@i+b_.!k^M$Y+LVbYo<h[D(#l0CnPr-5Sop,J[*Eq%33p-(ggPp@!&5O7(t]I11_QGK(6!<n.(%3<F(7p!i5db!Qrs]t-9>*:7j&N6Y?iG)Ycr2F@I#7$-^dMUm91HfH3S[`:#oh@;^J]8%Z.KAsP'ilpL/K$t!a>-@Y#otM2\k6ti'J-jiP%M>s7h62E3ank#&'BddCD'K.gcc#NLh!>!m\W(SJ4[eMii(3n^ZD5?4rtnP!Mf<%2(8g>@ufkk*G3h%hC)kPZOPW+=V"2"\>M3:N,0eh0R4F'SP:CI/HSf65!'Te0%R2)Ss"7C;7/%_$P:d@'i;M$#K2$P=QXEnN,Jb]%0m,bS/8ReBZ=h+sW]+>Q!H=U?"ONI-?[]>j5/hbbm9$7dI(_q]/_gK!L*TG0A9rb^ku0<0UT`YmLSsAS.*5?*#<+ItYKf4>:SC&\%SV`.QJaCBq;fcS[:6bDg<1gtFnhkT87N5umUEeT-r2JE$Fu:U:+OT;XT*$\bQgX!Keft3hVbi'4hqk<0h`DPs-asHJ&sO.fE*Z?5%Wcqbq+3*6T%SCX*BWN!YD3ej>.jaf8d^Ps2ZV=lCVM6iJE*kSBRhWn/TKF9TG-?+fJW*;K,fXf@;lV7RHIpmBWiec&1u\UDSa,:5%.59'76\4cnDW!j_2eB?ui+c@],[RKR%L?BJ9t9*0a;N!o]dK@B#+<_(Jt&36S.bV":bS&h)G(/Dp@\PZ?M$\hA(>k3P-8('V].EK%+Gu!Zf\((W8$rZ7$'8((*Ld'32VE\IOMMjNW#Fj>$Bi_";W$9WmG/>(?>\rkR1gn_JDgf.LY(5U'G_Y,/h6-W<agmZ_DYDN2A1j+%nG1K.+X"LI3uSt#cF",s8m-RS&rkUI3$*roL7;*?38[J$P**;_^5.sKdg[j*N+'F&K@kg0!NkmObjc>s^&D]T'S)+-B1IO=gY`N2%1P$\d4#@.#gY0?("(Eo5b]4Yg0r`RJ)W6ZFr?/C:["d2M^>Y&ph=HKWBQlga6K-a2?n=CL_KB`TDJIU`Lr[>dp;';C@M"4L*2O,O%Ala7OBd!X>f"'Vd+'tL0NWmb#mHj5.?-]S9/VjSnQ,/U2?pLsN^!U#NQgG-`20@BLMGVTZ;59^leC,4Lk9`\3IO$XF2sFJ#!n;fQ%T=+tA3(J!fgM6g8G>\)WheHh/!J[YLolKGen61"?)'s5q1YpRE67qD.:^@JbJeL9n?Z%;H0\7_OUT[A$-"4<MSe1.PrjM$2b>bO9%01n;>OY"k<hH>K(.IF3%'@["`]`fFu8cq)V-]m.:pu1Y$iUC;k(?f;RBOU3@/i8-@H>6"<^Fn\4$9Ze2BL@hBg'[uWE/Y4&"lM11%9\9):Jm=3o?*&t&='H:k7\6KgUscB6H8tE;jU(fQ^:S7(>68e*^C8oR6p36hhH1m>84HV=E%A:Cd+7$]3#Ud5I1p.9EIAG;qgn9Z%[pO"]W0EDIR"))Ycs_?35?cr#QrCI=q5Wc".?<^iX`G04ff:N[m1&nN15T,(\3?Gg[.\gq`"A@ibt[`q0N%#XTSSZ2%Q0Ba>MlFe%1:*1F4YS,G-L'-*.Q\Ls\;/HhS:eH7$Ec(o`;jc7j$c;H*Dd,$Xra1TDc%>X8#:X/E8tjPK,M/3C0OMYQWD`JC:5KGQ.\hIMS=>D%,bGs>2eD\o2I5h77f@d0jm9A5!,F3QO\`&YTY`MBQVNmo?JoYVV7F6g+-$Xnh>mO,Nu);6<:`$&Rpd*Vj@F)Mfk7pF=b_mT$H;8j%l;T6YT?RR])*/%I=-$?@)PR<T<);#r:k:o2FrPI5d#!-bCC$NjX:-#!#ASn6JQb,:P\m#?5mYX"jFRdKmluM-LuM(QqV]Jd^hWS5%r<SkA*(XWRQ0Y)LQrTk_Y#7-%_l5[3/U1iVZ[f0FiBq9t3$sk_85.>Z3kmnPZ:I^2]D!hG16ADnoK%g61fnWu*&]LnfX0cTPXB!V%`XV\E*d#2o0*.;/C+U`M+?)N[.H;GkB!UrdI!.$>Njj"`Z9p[ia[._9O%NDO/s<m*,I;s6h%=C5^7Z-F;*ZU]^Fu)6e0kLT#lo`F%<_Q8)PdXUKYuFnqRrehV5Y&2jbE0/K*&"E\ij,!3(hA0!*$]&i(6V4Q-hIXaXHb+Jj9a(b-']t]1">D=4$Bbb]9-nj,r]^#gS&'_%WJ@'F,uJqK"h!OO9b.G4BHj3^g?TtSTjAbmabbDWON+69.u(k'KOQrhd82=WJ<b@?_WsHB`=[L&".Tj)[dJ$B<u*8.*P#G'WIi_1%Soe\)D8hAk[l@f6+J-o^`eoDR#Efg<,c.1J*\].0MrkLkKqc@?-Tgr8*SkjK0<BIuCTP-(Jd:[]XK\cBXDl.3bZRLmq_E.6m0;-&%&-2$sFXm22<`6st1/atVVkQsr>0Go/"ikgh0t+@f8[`fpG,,,\</Kuc3r<Ns[KJ_5iK;ik]b>-W`]N]Wc.i_M-p/.^J.<ALCTcYd%dNopRG6--bqCT5FgIPp]L"JE<UKGO4%=93n>d4>]<hhkS"u)YWQs&&epoSK$JS`Gn""p5S$u?PlH%[(p[gq:cR*m-mE<0TBeI4-@%Y$r/)&Pou9k`V[-.iis:hPLL!0UPL8BF:U2"sgA_XsBmq1MS]_>6]m*Hp'`<9gt[(\4W/`phD^ZA&g*k:ZZ[G6:!UQglN0=aj8*2%8bE7&qDSYp_8C1*J-X]eB2rVA[3_[te!`AOn0SG8=#u1+rHL9tZW$4m40(Q<K*!WDF55=d3iR\]_)0\gQ]n+j^,))>8Pbm_%B^,!%"p-C0BQI]F<&<S'%Eo7]&pq0l:irFiRHaD]gC'Ztrta"o1(n?ig*kBcFf9;IBch2gR_,Ftr<1MM-bs44q9W<k6?Q[\BjrjO*b!@R%VuGhp69\0[@b&_ET)S$;T'ag<:P/(9\Z<F(>uT9[_+Rb:Cn.&pp',.I_V[*6;6Z!7"f>i>ILD<5JVAVWG>X,&eValFWhHaGC]LGT%qtpVkL[(o,>lk0mBu%11Ya2T'_Gkt-/IW2>AfP=31b84.BB\b\NsAW/1Ra>JN,]g4`DBLBNuf!-E*R^hl^7fS(d_mJ;C4I`T!:Vn%P[@\P(q2caZ,1B;jTkrd\2"E=/obqW#d"E]hV.V%J'K$JHhDc[G%u3=*9h-,6YC1J^;%g-f%9&m37DbrPhg#QlXGUmOYX7!7$M@'%1*?a&&DERdJudqP)UFco-))(%@1/l9Xa=S@&?nL46M/dQ9`ckXIBDc(FuT&qqIWDkFl@.qPE:e]1`45sDC_Rt#Up>+eHeJKYt1WN%RpVufcTn:cjeM+1B0(c6blB2V/JFtWp8B982Eb;D6uu^n<^@YI0@d\4/<E?]>c*(I9p$1mMmNMaUg]?51"lBUX?"`&)Gd&XYKr[]%c'MI%GGD'OIaJR<F*ej2ZaApH='N:BRcDYT1:-R?FJ+'#[&5e//^_h5$'2)WX5$lUb,5"eOk($P-[VqV-Ae>Ag,X6JSs^q*h!Ro:%e2T_:k6ubj2"W?B%%d-<$qT(=c1*NI1pX>'eKLLL,R4-6)Bs#b8C<i9V6@S%gH6/9@a'oHK3N+_9;KF$A80R$kn9*=iUlWLMH5XW%TOD`RkKE!^OcBt"]Hu"B*bKq"OTHELU7GqQM8&LL$`'WYpgDE1Di/Xo.&JPX<k0T@BD`\aI@]gOVNr,]c&iKn%9&k`1L6kKVnH%%%.T.rQHF2-%:Ksq9dM+Ffd]m>CoLrW_Cj!D4@tk\VbMm9]OC_cX>LO&[(.]7QLo$pJ@ubZ@\L,o2PWM2=fD,#e?(kmnQ:Pe'Q^[j7%8DC2GoD.Uk-:HR(5[*8%#fBVcF,eNf#A@>NNEW;LAu6iLRpqQ^l1QmIPt+Ar[J0=YHJ1@,gmTfa+B%DPQ-Ihc^O%pt1^9%b(Q:M:%SB2?UdUH:a_5=f#\n+!<W5W4]^P]D@%2Hf0&W'1N+^/6`.We`N,X)&V5T23l<FL[?4,oAGOTSnld[H$l$*52JgiV0/i1SAd.V>][%:b`HB&nO4sU)2,#K\Msrdf*u+Hh7&(ZYWQ1[`Z7@C.dhs1OG.Sdd]N)jjWA;NbmG3kt$5/dJW+PM+Duf7=I:(jpMT@pWgrXVi4Z1%(`]#I<hG[NnmGoQDI%Uf3k]G&Pc=8B4d@ur%$rlu>1Xgf&k/:f)j-fddtt?rYfa5VkP8Qp,oa7`flHaFa`#?u(Q?h%Qs(#ce>MCJ%S$!^0Z`ZI9/U2*'p25Q.T#r%BA*9>`CG0ROL97(#H'fJ=Vs?uIQ"+COJU-_N[!p.kH"5E$4+(h-2B3ro,/[O751<)9Xe-)A\$jt/%XL16Y?+-h??/HW2jep:Ij3tT5c;"-!W_r@f;abk'jVWH<1IPVIc&Bd@B;ck7mE@GrkCA""b"/N[2AVOkXn6fdYsE<K7!On("o\Dh%/s=q!s*2&SH$hsJ<nE\R\"40C@5`e51CMT`)S^hMC)[k7UWU&LJ#["d&I`,C"R,H[0qIIMf2)ns,@64:.+6N8[Bl0:5]J>QXt\:l%<>DZd8B<W<cuZ&ebm5#e[<=@%5bGNK#(K<5.s[O*d]l'[e\X:Yd/rS!Jf2ud2stHU1e4&.'dJEpN[7R?kH)itHdZ)nmF@1%WT&sn%j)nN0O0FiQBqi>U<^hnYIg%:'6cs:3mltYS$DSl'_2I$]lB0Xc@m3P]aSWG3$K=A0rNE1!R(fcJm'7)KSiY.8.J3TK85YTsM%]G0%@TH%?XH<j&#,\Ja6B=I2@0#"Bpq0&kk*=_uV@L?c3''Hp_83kL+GlA\eprAgOgCm!$^eJ51g)!X`,1U1=#D_].JCu=W.lq!%l/mZ%]N$J*[R=:U^I$eSO:nVsSOD(h_Qkn=2?B\\@(nH&Z\:3&$LfVUo*,e[fq=c6qT0?=B0FI+PaZ+cf^kC?BW)fJccI<ih7>-W<-q"t%lZT>D3cgn2K]Fk_G1;?VJ,uA"gDE=J5Ucg@r>Wk_)u]p/Mo)#3XZDb0%!jTL-=_0-]a=kLSF>g'\><Oa6Wm'F?lfLc'eS&N<D0bo%OtH1T]JerI:Br)0GBkA7#*qn%dkVsBMTph)\D"$6FC!Y:@&<k=?Z9s\k/q]I)f!k7ZlD:i5GtnD9mQb8Y&@jo_$E(=59bA23FsP0%<Gj=!felg_SDKC4@guopmTD<N=QnFrABAlBk,WOk&*K'rA'+HppWbb5(@o`=>VeYB@\S5o$_:"<eIs[;*_j5[U?YT3,`poi/U8?=%'pA6i-TU1ea%fbtmijHOmP@\7T9[Tr#,'_+=qoh=/9nW<Tb^;;!HYYc0e765Y$B=c]et0*>$(%ROCV^7=M<-bO62N-+Y>]cL0=6X%c2E3>C%P-<4gGXmm^Y[jbA9p(l,kj4Bpa5ACWpgdLc)JMerhUbDPrGuZdM.#,W$N/I_"JuV.2."3@[!9p@#:Aj/e0hoJE=G-YIbA%pZPrGSX,^EWalr<`TNT.&g$1K6,+ZsL__F5`$/6g>Z5o-dB>9QT"dr[U1IM)gK6Cs/5H&bkZXf%/aRqfAr*`,=T:k!\YIpfZPaDB%-RsubqdVdS]J.C+-db:>"j]XIAdPTS3:e"Fj1?`SmELfFMolrFq=k$NQV./74nV&kH;.\jX<t(.[3d>*@mq$Wr!GS^Lba&9A<M\f%PW<M!5K17]NF4'!cLL[d)Z/N-"RVR6jg>nZWZ<tZgQ?$G:$K"8;If]32J1AOZ(E!\pQK+:IWCD($caO!/.#L<V"o.alZt4HBS]+N%llB$@R=n%J?p/*B8smqW@TTsIpY'@_Y4q3ur9e3/Z)b$jN0ORhBKaq24%6W,QrW6u47t\pNYub#?]q\U8Vb-6WFH51Z<UfZ=#hF8%-R#'1+]WDN8qj81KFicSW@(+(/M$@e_FugVL9[1VO(t=E?=,?X?10$cD`69Z,]@GgK_&T'c\Jm!'"(hD0CAso<DqjnT35j0pb6=F%_eOcS(:Gf3]I?F8[PT4DT+h:p'\n`.I4#A0Z081E=hJ[tFLl7&@`Z+"Q:WR808kOD$8^?`[2,?]+'R*VIET;2'sZ>o4_(Z5Wq:k'%78+2e^UV1gU2Kn9;%dCTZZ"(9:@LlaZA_q@.8KRQe1$EVU$KX%aUhNf1sA_cH<^@E.;k7kOY[;a:.[*PFBtrFc8K?X)H?>Rs4otq%`'I"=X'b>1)nT-^m$pMr(scO:)^meZeSd:f44!d(3@O,Z8kk)@gh*<mhB?m.[LAquo0+'1lUQlFHd)?e[]Hl_k%o*e`Z0deU=XJ,%-=9]S$6U*iY!MMMqodTAEW^Vh\cMqEc]uThFA4[FmZD_(!S%V<E@Ig+W?H'uD/^U0<DErGkZ[</k=]\XDZ_M',n!&pUh-a0h"Ho6%O?B1>^7BI=Q"2"!#,AX8"jf;6Xg`J\Ps8<+0q<mT2YaQrIn\0/]e=0H*Cmgp>cPZQTZ=FW%8(h.n'!g&<H,8finHoI3s::pZ.FBU%g>U8@]tK&X[5q\<cF97Q*?(IW)s\p?;6S3&UIC'_3nZ\5%nCKW-;W$TL3E3?j=Z`l?n9CtPJ+]d[UZdETsdk\Y1-4WjkI?%P?)pf%.tg!!9V3)UbIemK^Bq4RB9PN+V;X7b#+Hg\RZaDs*Q;<gYpPr/+,`!?$RZ#Dj`JF5Xnuh4dH"F:NCUNK"(hA(dGVMK2YXkA(Fn0;%U!jrYk/sA&%iZHE"t'm;R]1^dNK$p+<MN9g)Jq-K+,lXUNFkEL@68hfBQ3/(hL,`!c$lb-U3?/I9t0aMWik?Kq#]9V$$aPXP%;/#%6h?7@:-2HV)Onulj"jX2[/er;Ro@4<.rW(pB*O.?<&9slfd_1L2%(>/?7pB#A7_;?)V],UW0tklKa#r0#Htg%S^(/FS!oir"f%#N%mDZKb[A)IWJN_ZA[GsBB[`jc+G&4T.<H?3(9d/t7hf@8OJ*"*MmS;XeruUAYs5#!7&5XW.p'/ap(@(V08rYjg:LT_nKMAT"l>s2A%&[Z7.s*j-3%#j;>;d.W5mt3J#eC`JAVcF57j357sCIO)u;*2D!L;j8#cR82:)LBSj>;J&>>GtgBh5N8:cJ'V0[9KP41cpIEq`b/r%FhJPXU1L/^+g"i'63-DQ]gq>>dfiH_e2l"T:1cFuCstS'?FJJ>L1<uU\6X'Q9(I#Zd6+mB4bZhNB9p,0G=,Bc:8\m]]1H0a\a[,]%)Q)%O\RAYnm)U_D>A7f=69a^7Um%?bqKRLt@$V!RRpM@KATf/>gOdER]<?%'B07eIX#I7;EaWj91*in(8,6]G`@0VtW/RP0D"FdZ%R^e'0!V[70Hhod[d#qqRRXg37-kUWL<M`9<rT$9$4L3>)QfH][fD+i?FDAJC?ORE6nk1"Hl5;Y['6I'3mDg)*q\+)H:6iMbTef'9%StK#f4aT:YB7GM.5*<G.1N\M&0g.h#Ak;W=L<fc$SU+IYDeJ;#:XE77(>SEt\n9\1FR!SV]q(kGO/_XhRs_!V?I.!OT:jZ'YhRVE%3YM`SA@l0YX#"kk-g6Z<Dn@1GqBSm-Y&_mihZIeF&nokN@hAr*-OJ%aOF:5<X&JN=`rc^8]3LSKI1FR1(c/jKI&`:m%3)GJY(po-%VSYMCVgQYP%DBkIZ_;3#_o#mBR@Wk>hioI:$'us?G2GO%k!&b>(V,=HqR9j^9N4BBrQ3+VCrOYIN_"2R\[(1X_]s62qii'-Ch06c%nq`6JkAZ+W<0c%M.W,De4P3eToq'XPEn=o_W@u_+C)+=go;s-H4!EQk\)r)uR&HL#]?Koa_eqP<[]qmf3noh(nbJ_-3'anhcWN47%7'%<-&EQs'm2OMm_.kHD,%Aql0tBZB*&S+NG80\L0lehVUI1n:7nd!`D8SKelf=VUp4-:(CY@DuM0>eS?/gqpceiXJGtW?jLFZDu%=#8E#ISN[i.HgIU\R!M,nX8_tf#R[5c[f(UrrNAUUQT/ub*2&:mrd-JadjG('PhRZ^oN+NlthnMK5%UrhXTPk@g:E@pmIc7X)o\#%#Ju"/6."<`4Z-hq6jE+2GMZGU?1g;>R-g<0*R`L'RG0Z\fj9A/R:CuiDm=B<YgnR;c7Dt7)e%mOJV.7p/309f<dDlGkN2'"J.5Jf%8HdbiOVnf1W\D&;1Y^KegO?->\164u4P2H6`HoeYK/%.IWJQL6USn3F`d?.))6&!_Y2T_0(2V<RlXM"-B`X:)<LWf^bV5PZEu`-c%m#7HX?_?2j=a;Y"Ir0,<(Ido]%:;EY"/mUR1ppmHmY^#TNfH1Wm`=UNJ;SZuHiA;nrQWtM,-/2I]7#.#B9)qe.P&!LN'1Q6P>e'[%KWCDV4Q[kY=?HPp4"Vp?(,O#!jLZd=mrSqu)]:@EMlU>4U2HN.(dI`jkK9$^edf\oilCJY:q\YKb\mC7W%JquU5nheo4J=$:2:5r%e6LfmWCCJt0H4\9,.Y#>^)ZRh1h(@Y@M:eF16'L[n+:d*gr\\-f#ZobRP.n4g`?-dH1Q1-aQ-tdS/UXsF!<9F_g=1SA;5Nj4lr2>%N(1et/Nl&%#LVMDXr81@/B3F<:%<@rY*$98I]s1c6^t*<l#hm0Ro^i`>ChWN-P+N@1HV@aF4r^d>H%@O7mGaJW)oUnN;'.T)%WT#%bFY1b4l^-.-d;P"PreL*\,.bBc3W6N8#;4fg1o65_+l$fL=XadDfYW?n[k/9Y-*[5E,U&-h;!:n^>0#9pt>W=FCHR=efhVJWY-"X%Vj``oM77<3lE-)NUct40U5LdZKo!6-a2>=Xr1/9$:)"3t-3)VLio,F]k9[k,nShbs<9K0p;nkL8&NA=?7aU$dd=Na+LDskD=_p2?%`P/`)iYEOFf@%L\bi)9VLPrJAR(I.-nSkba]'X5m><L]FeTYiBfX6"2&jYrKn.F^?`Obq753q,?fkX=@=J*ZISU;WZdf/jAF,/Ab%+gg+R'67hLA(+V'\+!9W-V7l)^,LV"T08>Fg?G&aZo=Na+h2F&6>Us-JLA;o6bDNpL<7eP-RQ`ng7I[A?4EGLU;jG/+ldZg144Np%f46/D8MO7eOJ0rX'&e5n38EI3UWB[ib-Z!#fZqU\E(G;OG31,=Ch9+fh*'@![aQZdI$h/\5%1\#nRgCPDWJ''qAc@8DH?jh+KrVG%j:\#b:Ua\Z?V!S"H>:)ga,)$=do2fh8@q<dVPf<^72J2Cq]g`2:)8ug@R1U*0,>1_qI2`&W@o#$Ontf!)X(lbXmOufE#Rr]@:?af%;MtrfBqY8P*dosB!p`C3'11[))sUt]3\uH+iJ`bfbQWa<iJ`3QOOIsI:q2O3b;hrK`laPS%>>aFmk6R5c=YDj(8F#c-sWsV?g`(f%NUVUr?oTD/L`:WO5@6nTG`X7UE)nVqe(@'\^kdc6iY;aHCD.@!SqMmPma%o)*+$arrD)%Q-Fk`or8E;Zcg6Hof1pJD&YguadD.:2%6IiT.gR6ZD.Y`FVhE:Z+mIJ9g2n,)3YNKhi2t&W5QG!:)%KG.YU>c)9f9Y%_qY,:db8WA^Do7'tW+L)t/EkbfQhaucgtD4YFN#$@%M^+ID;qZlEHDj:V@&M:F$?k`RgAMY4FT#,2l-E3K`<a*Ho]^#G%fRLcm.T&,@(6._7G.S1a-4Te'8M+/:%,dO)u%a@P@Ce74>@oe%Yum\@hrfDN'\ad==2(:e$mTTo]BtXWW1VqiP9T@VSL4/BbX]k*B-&.,DoMsm9o6+O;2cDD#J4icHTq.u:_!-i\6-WI`!EuG_7?fm%4oY!<b4=2G/mit=q(u:(rJ("CphsGo[I(^m*k%X[q:qHHLIY:8K.>+&hqWPRE9`YT1[dE>3[*_Neb'\&.U&:k_q&r;A(gZ8^.M9.%QeRm[*FU,fqdqpfb,fS>+G&p=;*.pM7Alkee*;%7ku-:!l=QLlSiKbdB3LV`\LP^\dOt2.;+[pc(@L=,+6nmXFRf8WJSVo*h[Ds7%`bFDWO-M5n(Qn#I^<LA;i&d!<C9<'TSa,QEg?MR/X"_59>k]ig?-qfXOsAdg4%@[ndI]%>R]_8aAc^;$ULNIs+8A8mdu>8LDe7>D%FMf-0\_bS;H'2jPR3Ng:2Ig7ZQA%fWNLCV"b@772VI^$99Jg%A)gVEr3pi*QbnIM91I]cPd^,#Wllr4h7`Ef8o'MhuRVigL(r[gQ%,arUM/D\C[$?JYbNB189KNV82h5DsbrNad`\d=nT!i,!L0rLt*=_KYJW:cWd@HsZ9FJG9c\V5621u5+--H'!2(elr$`YKOg\$-a>%ar!mFYsh(0NA@8fa9+Y>1u5*4\e-etkDZ8W'h^JHB@f8nF>7W2/DZQcar-r<7PumV5C(gn\nFRiDRK,YMi+AN`R9^ArL'GFU<-f\%BpUA-ZW<UFaV^0!E6`..dG>nj.5q>H`WBQAqT"A?/-+O,!AI@3XFYI`b8n$"DlVRklE.&(DRk[fg)N5=(L""[RN?&qp$,#c@Z@XM%qG*TNH_)W0'A/2&kLc"Nn@:p"f8cEeHk[!5WEif41HA7s;T&T0cZ1pPSiRPVjBS8&WBp(>`(+Dj%pf/p>l=nZWi#S6Fj\Fd13YO$%6_11"*Ui'//GZuCq]h+a@AXdNS%Hn8WF%Y;OD^)Ki8QaZZ-_=^AaY:Kb@qQCZ]r"9BbX&R\f7**PErbK\<B"b5BSDr2eua0qsE&2%=n5gCc?+rDZ)^-\?[YtGlOk`%Ja'm5f`ATe/<:n,g,rP<ZLZeCdJ'j[82iH*.*.Yo$e3G`qePXmLnX,I!BW0QE6.9_8r_>?$oA[e%4$c!VE.t9Ys+N9"ge^,\qmTK^6gLHcmr/$_7!(@GL2):r:qj3RGsa_USFO%'7m9[fD!i)7\CM/X*RZEZD!1_QH8@VY.D\VHM\su6%-dSs[m<#=%f#b6+)Oh@Y2pl^6>O2alDJa7ck'QoGJQW#%@gh8b\6mWleudB=fW"dn2B-!NB3`.%M4k?qad=4an%rW,?<\$alU1XK%leE'u<+T[aW4PQ9rqJ8>n<g>0iK#X_l?#aoIEd.%8*I`EAL?Q>1%_P_+N%`*27>;bQ@P=#<LCO)2>1X0Bru0Ta%d2g!<*\S=S[:J%$h(V<SeVfn[lo!<]5$9!)L$6*G*t(Gp5%p+L)hf"FfJY/GD/,<HlQGPmY$^`@sIj6=3@!YSnM*"]_T[R?/][m8pT5CgeH@Z@q,nF%E2WA88(Y8?40Vb\T,r2IO"iMrCD*+XU:d6t:2VC:B2m_bBPd[`g/m1^a(_]ta3>*F[F=\O@68OGZ`k1ZqX^>od$olP:;+s?9JC6U%%:Y3;8m!]acM2QuLk`,^+Mu]24Lu(ZoV;9[kP0+78f6%(<*i\oioh]!e#,]hc/ZGr1h2G9D=3lkZ$dD$ANXJaU?"q]QI!/KWFLRJ%:d9]b'0Cn&FmN"Q7p)n1$o+nD?LD^>(rINKN)<`I]#D1.psHM)A!\-[GOBL4Q65_9r%_D+l<`n`mB\NBUY%$8ou>1I*H]]"GaR<t%b<6%o=:"Si5K4H'd>bd/g/62F@pFGK:/^KlVeW$"P-XH4?9@p:id8oG6($*kq>1t,%+0^3^*h)CDa-Ek56(8$$3,=)Z$j<Njj![@%?*a.o9>suYjf`$-pI)V-a%iasO,'bXD'a?hh]ACV&(OL3mEF1#p8X&9YcW@6oD$M=13XB^cFqniojb*X]GotM0cquCT/k%I^)\#C%pSRU\3g2oO[UhDsUUP.`mtQn3KCDWc07UYR(Rk'/[k]-#n'>dXNaNiq[XRc)fsi.ep\F`p([&Qt8,ZPaZ&XnDo+V$N)>hflkOkBc%iJ%o/[dn"qq1ispJ+"b4oQG7`lpm+dI(FN*5>$(UC`)$0e)doU'>-&6Uj(.neeCYr'0f:?kaN3<q<R(n-gbsc:[`LQmaT.tbH[Xg%b`g)^hL8T^f-H<#M!5Vjp$Ze"[]W@>T>oH2HMD_Q7YaQ(#TfO"CfuBiG<13gZYu%54@X!T`lJ*alWiOe<0op`YX`?(HF\6X[MgHC%bZ:.ndFfu:V(HgBXT#^pSb(GTF`B^:\od+1/M&AgU;uuLU=.Ug1f)iTE(qtBfZ&N_(VI+9H4Naf?b\sp9F^D]SJki8^/LBNRP7l?%I):.Ip<lise\c$p.o!C2X5/c1p2Mrqa5!q3b3m:E_!'')fNS`A7XB,kPk[<a_dNcNG^&c/M2!q:b&_>!R:pe'^8YFSB)NRbVfe,k%VrY8"[0Y#4_uP)a@:D+6DA1JZ?>QXk!f]W7741b!'/YRiC)4+o`I,bPh";0<KR&(4jk-@k-^'U97O`s[AHV@.onJ"/nNM"]M?(a%%4[uKX1H$,"=-['a8m]O1@0_CF\#3hDkerOt=ME;Flh$c*OR2G.U\GF*1SoFHi3^uA-]##g;.5Rn?2Aj>hH7P_l.gO=V<GR1#6OTo%^eoPpcHI-J3Q*BBc6#b5`,gP')m\qYe_$+t`huQ1Z0@6BX.hDYWHLDpm@d`qY!GgDjZ,V:;_47_S$?]#FA=Z&q]emnOl=1;\\fg"%ORJMRUB%pG!05>l18]nr/*[;@Dl+quXtbI5lB>"E;/[^uff9DDCCK-c.V;VR!5#D\aB6j8;1N./JtX$sM,?00UB%31q_;6u:D<ub%2$U:[N',,V2E:u'HP?>R*k1pB0G=gDau?IIgL?*3Fk+@R=-TntdY40[[jYT_OmTUmjdU'X>Z=Qab],SM!oBZ/o!SEKISWhT;:Vrf%?^,IsrQ7-Xo!Q'Yb1mVNcd\R9Tu!kBIM.4>OPEZBlh[/+P&!@oU#N)$oAt_T\pj6qgNKdd2_jU#@kF27FoCIJ%FqG\hpgFX$`WGN%\Z0#_XRnVtr?f--#*6AVlhX=ffHUp$3U6Hpmu=F6f<4d/CL+]sr_+1/Z@KN8PH4Q)WOE:Yr?dS?=p:"jFo<Wt#f!Zq\pfjDqK7h%%S5RsWZH$*0-?5Wqg#K.0R>@QIlMB1iP2WEi1Ie2Meb,E5?PoDdl=>&9-Lt$g\G?T3lSmL_Eft`ro>eMi>M%3.1?-HGXWH@klY;H;%)4@>(hh3V-&U+"bfr_F7jJmYB+s4EeM>anJV8@6@"ArWllM=5Xl8NH`AuY)Tal+/<0Fu2ebYm&2'ZI-=ah1Jbh$h3@^->\)^WD3_%F7RXWf2$%+'`U?i4he(=%hgd$1Y24<fuaB]=RAV$r?f!/.@OarW35%"iZ;:[[L9&"(QmZQ<BoWd(.<o;Z7DP,.W$O4N0+]>1Xu(:%hli_IHF&\VfCbVo)t-t^Deden6L+DAY3L5JH@.NkdLc^G>hAFTV>/b=[5.$k?e;J%Kc=+d)]AH26X@I[c`r\`opa1f:j1=`lhZ<a%NNDDhZE-d\lh[/'mWI*lIZpi/bu9\,]4a@<*oHn3n5RrA2qAaaZC%Q3<W+u?:@D$2DfSjm;&]44lM=5Xl8S8LS"["BjJmZ-nm$<u%H(%jccfBeLX0,f"^#bc,rPl#$E9>7[@\0Buha4s\Vq1O1bS\2W[YVMDP8Q_tj.!*Php>=l<W.Y',;[pDRr#?D7G#gif5IrZE%AMC%k.6!dAuqFT@l)^/Rs^_"`eVK=3D!Mka^*=CcM?c%[4d:p"gNI:ooDmYeV_t7E2P!:>t]nm)d`N'MV[e76^&PZj06LnQ:brIlEK-I%*45"D"4J$5M!8=08Q[b^F2^<=Wq4o,6m;9k:;+2cp=HD_2dS%^m)_2GZ.e)!5/*QC\FT"ZmcsAc;,o0>]9)A1TE"cKcfON1P6^Ci%%kcX>^N0/FgA8/QT?egmrqMd,43amCaj05(GEU]"^E+bTlGh`'i:"GSOpC0"oTLX=cai,YgT/+o55Xfda5m',UX.'R62E`irpAR1%jMfX[2j;i(^YDUks6RKohVR'N9&?+g]TTq>oOdLcplE[@a$6`A/rtL04aZquf7fiHs#BuE`]sEL;#fOrc;.dh>q+)O5Bq?]-*)>B%X7+C%5<Ac@YGYII*$&tbSBZr#J"1l[j?e:[l+OdToqsm4c<^8;dXJ_J635Egfme-[ZPoA4cS*E:%YVN4/g(,jH>DX$^CMA1]0B3B%CZA(>r]Oq\f+3a'UCrYb:U4*W?,(Jqo>8Sj_TD;b4e'*2Yki!JUqN&E=P#4o(&mU]lBPoCl&2+np?AcANdoP35%5dO#S)9oIX,]B%CJg[tR)E4<rnBL5n`oF/^ePDO2C9nNmcqsVDh`H_G(TChK>uVU@QooTj7U\NW/^V9b%GTSGk#g"Fn>R2h?jD=hLki5KVForQ8c:u%^4C"1!nB295q1%_\u2Ik=lO&eIpT0qXf`ap*W3Ers2BmTlSgb'IdO5n\U2rOT80UnhQHg*hc'0M,9GtUS1n:-IWp+%K[21:eIVGc%`J:\0F"[B+'e8u!J1_+blJ+Bq;8<+EhLM4;r,]L-LS+Mfn%1YclaNJ#]EA+XQ!\t=mDek7n$g_UlUnE#3r1o5\@QuPrc$i/rZSuJ%k/&G?_mKsPK>67I=7?a)a0+e$c(A>BH?2g;)'o%`qt\t_emP:hp<0qKXm=cq0AkX>m&fKDOJDO5@#JoWXkO@"a9K,FT4ndbqOc(h%B`#G,=+3'_`1u^BG\"_lV`OB5mr$9Nnr#i$4>uDuDi`Yg1,^1uSA:P`qYtqrT.d1sr9Db+5-<_rRJn*3Kuqp6?!Ku$Q0n2fIrtEn%+2<urW:TlFrgU<F[Qg*?Sqjjr:nOo8Q42`>e6"98[\Q[Um,P3Fc*eP0BYb?>q^g-,b@d.pCgV[8p>W^Ocdhu4f:QA6H@^1'h>$mF%)qrDLHS>EdX^&It=?cEtm:dV"g,lpp*sT;nhKpI6++!9n+!tb*!d`G]?ggcRho($?aa\?&rcR8)r!j;:Y302"s13<]I0[cYSq"ea%Z5`i\:4<1fg0aa;Y>nBgkPPAMlN5)\hc\f<]D?Wf!RS!AbBrdMmOIW65IBaW\6joBT6q=LbLZRZi/5&1Kn)\4C9mMR'r^inc^e:n%K:9n'I%'g0gP:<?4);3ds.&tH5Q-(T^Z#BBJb.UdCKq=Ar=+uUEN4OfHMOmC,5&\i(Y8-GoW6rPH_ZfMI_l#n:V.nM#QF5:J#2_C%G,8@uLB>lMQ-8KJ.UW&f]^*o;/).RmX+'T1?'S@HmT/=2gkVBt^1UHGkBFAlIC]?^FWS?\HN6]?q-?mr1lJi8Xk(SbIsTc,;I[c-%XQ?s23tLT>K\#&u2=(]*'3kJkVhC"!Z@C#6l.(C<9(BsH5Eh-Y7lUD,a6T#l_^7!AI:=,)qeDlJ2t6XcZa]+9TcW@d:FP,u/4ri+%-(RgNL>hK+ffd5Rd1(BciN:JBT>M-9U'A-)nFG6oBC@6-#BN5Zp3?4UrpPmVdeERN\8c.%rm_P3<l"WbD*7V(S+QL,hO!\*P-"BW%1>Kk%0^@!I="Z)>1PLUXN-32Rn]Gd3ijSkSg5hV&/63,\.b5_^KBH".o^g<L:QhiN\')H"WH%9-K&M(`Ed7G'nI3gcXnC*'MkpPe%81bF:)>kN,'UGJ91n_UEo+*UL$Ye+/XJ@bKhlW'l(n1Mpk1@4\R.2:EG4:^g[9]FN1_H+Nf?,1\[d)h(AF&4RWM-?<lOWjGleY7`%mq]Hd`7jM,^L*%)LhjaP019Rnr)hY\!N%/Wig"B?io/qE`6/H;8[]mZ!!g6^4#q1fdUo.WGUMiF97F]N?LnR-oc?J!l,PPs15D@o%4D$Hu+/6IKl<ESb0Oq5Epuq+4%GPc?5BIr^W:P)PcM^Cs+rU4!UT_jN>O42f8&qOEV[gtLmQB.XMmPWKG$fro[JS*ib%<BM:id]V%Hu]r"h#A8j4BRWYo&tAkpnQZKdE`?DdEg-9@unA%Z9NQj7N$8j5CAOdf^=4<f^@oEdEaICgUfsqgW.LbcX3U0Fnt@qC&@W8+/5oc%f`*SZ'*o=;YHGd6>FnBUJXhga5kA3u)6i["!mPWqB06\<$T,UeS,n-=8>,c1if%Eu#Qi7h&SHD?P9l:/Lbj*F8Y*d;W%Snm1quJL%6,,T6ckpa,mUk"F+cf*on+l;B3G-cSmm$Zk)s$+IFWn7RIO2b!l>QWJlHrbL0">CRKD'q"[4U".4FF(@p-4Hm9UkH3H4>=0=AQX&%FG37<d$9+@GsYI83_437n"U+SHM^G:0@;8.G+lR4TN3k9o$5B"m]RffP\qa:mpqII'A99&gFF?I-F=;<#,(qlIA99bpiLfIk.ODp%';WSi<2AZ=gGcj5,VNDBJ".%D&e+]gFX'8$rI7mp<Rmmn[o=1=J$pEu3nQZGGl7$.IufmRH5Cp4fC,U$Z_NRgGE2FlTC2`/5Au#,%qfTDuoQ096dan(=gNW,;mcON*f8of%)c:>?&]r\L?Mpidr9Men]:H.UM`gfKc&O2C>^:g@qr%:"+)\`<nE9K1)b9/YMc\Bjp!(r-%IsLSCk4Y?I,_:rZ(*K;UoG%8q`m'"%gL'B=IXLtic$to4.rFhNgpa3=62\Cuo'?]oQhu,T,MRLL]R&ar*t&(\FO-,9/_4Wg0KWE[%H_k!#rcRh9Sc+o-n*S`9+29B,f`$-\g=FSCpTAB3pis'QZI>?Co'"Y_C\aHXIgqG9IJj$)X6XuPjU](rkMKdD=A@D^<0.Q*pPj!S%#=j=Xh^Yo-A)`$[;&g3NdY;7+,]+kR:EK)1F;;-"nU]sT<'d$aU"3N++E@:ubJ4!QmC)o_g<LH@m6hYFh5TR$^C>O9c2OF4q*+^b%h>Uie^)-dQC&d\"g;cG9=71"[5CM;c']*P$_0I4)K0<EJAG4&urPPPmA,&D5^>eTnIkk8%kTmaG\H=V*+"<?<SZ@h1kF]3M&"hE]%B)a.A:%uq4(\lA6Gjq!B#^`&-;g;g\%rtJ(HWTY;Mt&/R]D(JEC_i2]>rmtS&#<-6<U&4L!BQFBAn&'RX4JtY*WPoS63#F0l]:c=%);MlSGPR(i1_^S&D9"#).l?K[[WZ<Hdc;06[5Vob2D+ng\?&ZoIQfg!J,AnGor%+OI\$</emBL@_+FM\ebs:ZNSQP(k_,NCIOmPP%RocYp=^Gq("D0Umg]m<C`Km`807;Lr?:3,&(TCX`0@6rq(&jKI^LFTCgSOU[7.u0]:I+Ui?9eA!HL&P0#PW,;*?7<7#=*RT?gbCd%rmP;]&*M**G9PgrIOr8.0#X6`m>/:A]+AmIUA`tk(C%Jm\=c?X]p:6haAHQ*,5s9_baD[RgaI"S.ZR'Y[:p@^HhI?'_J=GmkN\,T%`1nK0=)n4_^US@`;"Sd8c`9Y?R:4UhD*Ce@>diAQk)j8Y4MACJj3153@diZFC@B0.Bcu5WGrlIYdMqDW%ntpCh,V+O[f3u2lk]"c%d(<W#4Y>=Xmt0pJDuKS&aKtZ.0"jX7'/d#AhR<iJO_TtL.L9!oMV?0#SPV$DejImc5W==)keOd(;0e^Pl7ukrjbYE^T;`m8r@p)#%kacpsd8FAHe8acZ0D2f:rGF(-0XnDd:CX4k-0=4MSBAss5Nc!@;P<&A(W&Y#r:mQ%H]4E'OKM*A@Ga]krQXk,r,_<'q$qi:X\<CP%4gdI\+"jX4?itktAo2"h^Y*`Zr>lp2`3ThU,Fbo/G5^:l4PK!:Mmji8.GHB=SQ`srYg\leStSe\mI=;QH((sId`jRl;uY;64#ce1%0MgTNF8g2^P:lg#WbT+-%Ao/0Ch3'pEHYhN]t8/<f$;L&M[TCMA]_Vr+dTLmaHEUgo67M$\1W:'IksaC`o>n"P1tXJ^Q0[ZF5t#j%--(.R>5URM*:=UZ<7@)kIHrH<<oq:*8%e",m[pC'$+=p102QL)dSIIX)p#4s\FlGP`V],]U0_u-AML],;"L]EfWFN&k25JqBRuU1%EUP$XJIC.(*nBZTC[@GTM/RJAN4YQUd>C.KQ:1jY:j!0?H,$2``K@SC[U`N)GPUe'+XQN:%ps2oS3#AT1YJCo_AGL2<RFF.L$&+&%jn$@Ws07RmK6"j/mn3%XDZt5IDf6YE[!JA$b)/]\m/R"V%3BJ,DsVuMpLs'qs7VM#kn<qJnc+7A<m=O2eOu<OreCStn=d=KcRu&0%97s"rb1j&aa$4MA]D(pSY=J&Bs)7-'5VF2fT&%)jFCC#tII!N=\?tOJPJ$Qaq`h36ZK\L[iS.\EFPZusQiGh;eN<d=IXUhfH.Yd"%'46%lGK<#@J,[JOs,[1BoY4&<dY"C2?RJJgiVgg14A#B\;7NGb:&@XbPY6dhATcJJR^-'7oWk@Z-P[&*";]i7N+d.VqknZ;=moLs%=^#*8HMIV'S<mBn894`B;YM]neF;!DmAHAE]KBp)BjT<9>+,#P`g)5-8[S[lh;j6"Fdg?AOlkoV?8'0#dR[RC.uUc>MH[4S)VQrp%5\/47Q*GnV;Vu/R$t2k:q'c<>E@K1%P#j(VAY/":P_iVup@%+WMg9qWQMAK*Lm;[Q&sa9ZfA(j<.hG8[Cu$4jmksf=0\b3Rhdfk'%A$2H6U9Z"frNu3\LU31%9oKc\7IqG%g5iL^gfD5UUb%j+lZKsY.VM!;JWZn7N"%==oW'fcg/q6#.?;'d@?2_F?beG9p9Q)'a<$>Q%-u6f3Y=V[F2a,SG)'K02`ZfPkjYC_i1?cqJN;9Vs>Br\F9T$-LEE=h?J7P).IT7hW-gN^6ip`ok_]@kOQXkoJ<L#""qlhN,kc(dB%IBO!E>(l'WHN^GO7?0K^<qE'Vq[UZNl,g'"i;["cg3W>]ptqiB9<1!h>i5-#ifh^cmuP_5PV1eah^SGJ<L^[GLm[)5WSM3`hnDF2%[*K/4qeWk\@Ep0AlR>'e9E,YiQ.:#7:M$j3r<-.o;6TIgJ_$m9WuXo*g!D&]aNnC&V(F*<"a&Qr:6QL,]I<o)g=-.RVYsgR.i4i\%KW<$S"[J8:hk9'D(XaH$H"r2@g)g?e]V-c=p+ddHEk-f]Rsn;IRY`HcSZ@pf/'CBo^NDY>V*Kh0.=ZU5*;Ee\,Q<gihdak`K;WqW%K>iX![Io7[`q5r2,il5K\]R#<UT&!CM2qs&5r*`jO2>b*^<Gj8i$lY<ekP31<bKfLo2AUFk1JN3Ysg%&Jj0c.ani"$:'\?$m3^Hp%:V\8_V@J=^M[Y]^4dU3P7nLCE"0EgoD=Dd\`6XdNjA6+XQ2S:INT^sU'q%L\D_f6+;QTKm8FWQUXJU9>ef-fICX9#J4tm%d#X&Vm%20.o+KLQ&2k(]$#D_utODCN\h^-#A]3VC0FYcSr4glcl!$$0\jglp5%@nf1kCSV#i3DYe0Ah#kkGLUr(iN.A/%Y?ikc`]@rdu$V"%qifUt8=]k=[smaM>rD=)kBBtHa%'GRJ7fku/J'SZJV!`F-?Y<KLI@sD\pe"IIHY5CT@KjV3;?B+U\./VaCoior$gZe.QbEEPY%;\%aD6:hn+@m+nH9D!\DP/;8eYOCMDf9S_4P\k$eb?`C]d<=j,%X%+5<sjP;u<GO2([A&'m_hn',1$qUmD?/=tb@Y47`gT[Fo"^3>*<%%]28f_G=*ka9Vq%oC$7>D^L0db-PfBOf%[SP!S;QgV!l5E3^KdbcbR=D]:s19K%%C!W9Wdh9N#Mf-eEhQrp,gig9@n`t+B'il%)\%\hCV)3mVbWWkRAIFKQs0SIQ5&/-Aa?!o"7t=7Fn4VtP>+48`[j$J5j^2]U&Rp'EjInKZ*^bCLUTKo]e$-fJ0^GpAVXhb<p=l(aH>%U(.CGJ$uEcCs-3TjZe0$0n0[6$,)1kj8nTh!4BR,&4rlWj/-(A[u;\DImhZhCV5/qlmJrmOjoZ,F<P$7$QW?n1M0'FD7PgJJ_W$u%Lbs4<qYBW)V=Xe6?;HS]e^--`[:<5ONZWoKh<-^\^DAS*q;^MN@_OYD$U?Df=^F?8][W6J)/W0)k;so8\>)q]5P-*PpEeTiK%(qD%#Wt+ASjKS4nFM7mE1u<pDN['0$P#Agpnl!QM288,$k?`h<b=[/aDV1CM$q@Tb5k/_'WFM`Fhr>kF<3+hl/hOO/qN=)F]ona\Z2M1%Y3H_5i6PAX9Sn8A_.[o)Z]OSHm<Era7*PuLW+X_'q\8K_ggan-+hUseHP)"%qS6Ptm7opH[%Ln4RAaQ*hk%X<UaP>BjOD-h(0::Y%@_Pi,0t=MXQ8XP`=k2/A`<\%#T8_a.N$]QLWpAFa]T$Vu":RMB?no7HbX1GYiG_pTpKj\A_Zru'QZSE,.C/9lq*`04bUl7nDW&Hl%&D03o,:3W?j2)1WFDlmq.Nib#Q*;("b6MS2'U\s7U-SE&e&FQT"3esu'nC6h)+<nj!6On5_Q;75q<5l\H@cW-Fe_aR#ip.aK9XQY%2=>EBH2cPE<P;r3-8.b%8X2_g'8TtTjT)l]5kZ\5dbIS5iVU_`F@/J&hbb/a>7*Q\2tjDZSW[2LVabSR5G)Xr=8'nG?PIOM;b$qa%\!4kmQ;UCo.?B]"MHY$pH))mY._;M8.I)Oj;p\F5($:sjLg3jj`n-GaE_SjcA^d#^b)\Q^Z95^qi2Jahbr&M<Ki_=;RSlPW.>u;*%V3kLdrel5Z)fl+t=u[5aoU5j7^T:**<962to-Y?>,'m0jN3=^bpoa1)-V7g$1$AYANF#XNV>QG1<BtL@hs#5aJI4*1$?K8tU3DmA%kcOsi7Bg`6H),UX&RAG6-nFAa!pq1o]Ndh8O7ff1nJ/43:VjT)<p$\c6n^'Ka^q<9>ZMp9S"h[(e^-VO4"`%5$<=#J2OB\<E`m\+%dCg[SODZ\aXRr"k:M&\B_okXa]rWb3Q^)$-=m88qAHg8E`HRU9<M#u,V0<[H4\[E>X6br4Y-J>j<C??jc=]A+\mau+<dA.=N%pOu%%kQkb!AkCEU^\CQXsTr:RH$`S98&9hW\]rl&bEkN;u:Ph+,h$Zr^D-s:..PKp@Q3X[M:LB=4VW>^c+hr`t3C$9)1)+%(htu]pL]1%O-)Oloim+.nfCoWIli9e=Bc"V*UN.>"U:]m1,c@=6S!OlYV[M4d^]B7"-BA)THMuPSS>pMX104&l'd0KU@9.X5uLMWFY1KHX9-f-%+NA/_F'D)YL*&(]RY_"If\Sc=0<9W/5aG%uR/4bM5MYRT^nChi.2"In0X?K*:k7ZK4B;43aHbOAkV#)^PpMi!$Kk5ig%]'SAtqpq%jfjq2Q^-_jIkH?e-m1;6gHC2ZmQ.S>hh/-[fQb5Y&We<4#:tV'1(HA']?+e*A4BuMV)-W"_\E<O8L>b1/50;I&ud6t9U^Bqb;AH-%!6,]h-l"Cd@=$c4Xu$gh'^Pr-[Pn9hK2EkU/*<7i,k4s&8*V)4&<Ijii:6jsDA`G?\mZfp6O*m^^hebW;UF/E[Uho&qpZ6geBNU_%_Ah(5NCrD\a`N&qm@NPi@l-:hN4`lfKj&E@'M]`l_O:fA,D[Zf\n+S>fIPW-A1GAi0nVl[!^Nc_<_EIBT1!4(fHU+`]q3&jaUN#5%&Fm9a[W&8*qaM1Xc^W-6_?Ymn9kBPFJ=r(QW-Jfg-Cb?/'2JH>R;a>Y9fVp]RZ0@A_MNT(Jp)@mb]ki#%'@\uh>Rg670*fNEM9u5%(1WM[40-GF%8g9#jEBX92bRquo"`)8R4Gr3,q(,k%lU-f@2k?Fr6=54?>QY6o2j>h\28oG\b)@G(g;K3KU]/Y$j+J+?O9]/lVfM+%)'Qp4.T2C3HFmfDmaja`n[-eTDib"rhNaLeV?IH"1N`p.\\(V\CCRllBZgSlMGVN(k[g$!;iK8&Q7gO^J9MoHp'VRCCP2!4I+!;7%:R*2"i;Ns1'D_*U80fGA2e$>P>Ld/E9.P62PF`[I'9G>a(+NuI-dK\/-/KBI'j22X,1EK5K*YI\N2SLXMQ,$57$[8T+u+i&W)l<N%8e+IZ6Y*N2S"$$8i_%F;VN>+sMTM^TOU@)sE\D^RMd"MNk5;KPjjA55+kNOP3cf7ko9I?J#=PaO`PQb0+hDX"D7Pn<"+$MP5P7(d%_1Xbl]Q!2=RDS7u5+.dJjY2:B`]R(TgB<Z_oEs(ML3d.J]$s!Xd&"*'LDkQ4f`0=&6%jIt$^>-Eg=t>im/QR'-(L]DGon"KQDV4+%c9.8O&1*<?6jUhB6o`Rm9K3e4_?$HHlucoe-%lqD>j8-!/rRHh>Tl^CZg\1Z"nK-(Ssnuh"/RNClO42k8^Tq!mk:Qn0K/u2kb/XW%1Q0>&VO64QY%/t*gh.Zo*L#>ZXqEn#hIg4hF_130^Om05/a5Gt7.2qNoKKSucO4ha*.)XTr[W]Us3MDFSg96V"h'eh:"Y,U^!8/A%-mE&FSLGo;))rPMhU.8(<H@3cFU"uK9m#WF,d2KKicXAb=/"4`?puZe^09)i>%aRO@PA0Xl,5!D<9a<WX";!1*4s5SM])>WRDo[[%6tnA"b319$8rF9Y_WN]:Bo+6TVZK^"C+rW?VO@\GAuN5^4cL2:oY+%g+_g*<^oLR!N7aeW2+0'SJW@U./-k:9o`lseht7EPY#7nF%c7/ThkQDGpN:?$(7W^NOP&e>0%6F]'E$67]e',4MgApI1iO`gC7_m$M?I1drp)/FbAE%_ESq:CJUk,NqfJ/7C0,LOrCFt9EM#m=.%/kWqi&8OffB+,CEbldX:_g+'E:>]A2_U/,?^g_9*J@<B@U2hB6dfiRZbYqEVS#8Am:p?u0.LceaMQ]a-V0,@8#[#reCRjOO]l&F^%!W#(8En*S=5r0LP.V(I=`M>=-4GC\07FMf#qNNn!;tCqX*[1_K\(riB6)L9,(eZAeYAu!S'k".:\.>Z0bl$&OVW-DiSh:]K,#,C=%^*X!pEGG9-6\MJnZ5%nS[<65COMF1"N*-G`Pct]'@ho,^.P+1G$_a,S_l@[S!OcW@JAP/p+hDPROQBM?;1J\?M=.XcDtkSU<-T\7%NCtJr71kBW(6RogZ/F&4']9]k2a2OE!l.i_3Je*iMcR*ilESQ5Fo2r:>OW\l&GBco=R^!_0_B$8XU?ju+-^<0ViC@_`5/6#5GH"$%B<#A&EV=(Afo,W05VhZOLi]/!f!+A#UlPBkLGn>a\;Z;EG^jcPe\_<TbK+.5)$N\dUP:V,B%[eX18;`^r@+@-:PDQbAJB9F0;G5D%L<HO:q??bOaB\pBF"6>]S<<;@Ej_$&`qM&pRmsoE)KBp22j#1,nXe\d$Ac6L$mmoqmo1%Z6UaH[>ePoM9Y<pW*jUUW6Pbl4827Z1%4H_SQPL3(<\VOXkf?n_@;-\gcL]V$<,(kT--t)!X$>LZn@UP@?EJJaH+j$c]T*"O@c-/TZ98ZaOEtK/,Z:5WBb]1YS'jX3COc)ab%]ne4/(D4$GZMuL^7"t.mP+/D`eJ<9>A\!1]jY_t$IQ3ZXM@/$D*^p]5l<,8OXf?Y!`(VbdJI/rnnsW#.5Z^Y@[1"[Lb0"Lf;r:q+%k7#YJ,aR%;07joi"7oH?pGA;'f+_)-9ehpb/B7;@73PLPkQ!,i.a`O@fr`uP9?kc,nlFSMdn'FNOe@dHR*'3%M7f.BCPN2?:J6u'%Z+T3HO!@34;bl[J/?`W=S?aWJ!@E@/@M=8LY,k1UOV5m*`[9W_S%=I<[EK^3Y,-U>=DGa4!'mhHN>k8F+H$g:'KsDTON!"XK$T:+%-uhM\;o/Sb2(/tl6oBnrpkL*+@:E]0H%`HEggFqR7jMYi&MeaoKoj;$F+6=7A2mJN3S^?SD4UhT9bV9"9]h52a]u)Y15BeZRf/&q%Akr<'b]DFgN4iuRAf`+31QO5uR2_*%k,*8ZLRUK+d9QRK7WZPuBHFBc1_6o+N94OYeS)+,X[[A;&UdSY9oS3=#tFLlA#"=&OjXu+%!_rE*1tS-lUH)_ed2]N?IRR1F%eo!4OutXkk7C>Ilr1uQZ&,!0jrX%$6Q$cdr=rTsM)CabE&-R80q&?c(sNdoUUaiM1l'(d8%0(N%b0U72Vlj.HOYpU-(YR&A//6SZ+V/#"-86XfM`uh'%\N"L?DMp"fZeOZfPVam.lgB7&N+7EEtF<<B5X0U(uof\:nS-h.U7A'^kMkU%aB8ln5f&)<?7XuVGBs?]#[]HHV(&At%P.fJoEDqm.Q1F+/4euU+ODY.kJJmp(prB@Y&^@ee$F(2ngBKs!2S\U^"p"+YDd`2bZk)\%4]A)g&jD"5Y2JnX!GAJS!`/`Gc9n"=Lk@96Y]jbd(9Atj1!#9MT!_690dn[n$!.N*7Z<HHA2"XKEgM;TT8hQGBjWu\,\YMR0m/e!%14<OZ...gA6,Pi#.EHQLSg0/h+F(DqN"gqP`SbDAE1h!jVZ\^[#*>NY.Qlh5=HUo:Ma7OR@Sh`_(^.OPWl-=M%M3.-E:KZH&2hGC%4lhWA&Jg$D%,E]M/1(dlD`r;F`6mi$\1]NMQ&U3j5eeQh#8r1Z#=C<bb<Z>B3=&eAZV8ke(tAdb5C"dQ$fWtB-pl.M9SrNS+Hlqd%.OK2%K5aG:kpHKBO?,1<:kZ%mA?[0]72X05J<8*:a?eI6ZAdk;U!:"g3=(JHFr7)M(C^L=*[6mci^\h'X:(-prFf(?'g7.A&eI9/%29]E-g8D_<PC7UO.'c+%UY'!/k7?5KGHJh6>YA`mbum,tF/M!>Q'#oF*6&IX$o(Ru>s]o8"bG\D59]_M8#B%dL*HgaP%N+-pDrd"%8&>IP[nJ@ojE3phJ:Z/S`$MM17["CrQh_;^))HBJ"sb^%80Ql:MkG"eG0aP=*G%bl(*gLGZsI<3G@aYb;Uf11K+:gaXq88iKEhqt%CVk/BQ60P'PO/IT(nChjGCYM\ho@+]6Ibq3,!=o5&pfj(kHBZ;ArK2\<b\=2?DeJ\MP2&hGu_e$XfT<_;T/uP*Y0gaca2'IXSWMH%]a9Y,DR+B+BNLj60!/%KPc((@[4>BXd\s4*-"t>8/mrs.n3*9']M0o5THWm,iO$(Q9H=NcJcD]b:MRG*ZiNe@O<h"1X-biSAV8q8%pNeQKoOS$P;?'Gi&4N,Lf9jB)'5fpSaj28fMd&fCG^O(Ac:g=6AeZrbK]4UX89r`V#ejF.W^[[D&hI?\1(FsqmP0a$$r=,Y^P7t'%ifHCre"DdlPUe'mjj5uf)_"NJH_:E$g<]7f6^4bTjY5Vc*9)cp^rf>)$7W0tHR=E1H\@"t-)B<?&lPm"L6Po$6HT>N;qA6^83-;c%B75bmPl';rNC9boB`).NP8rd;QrF?VT<m#gZ^!bHS`?XlN%%grK?=q([5kIQ7$V9BQ-lh)0'F/Q*He2A"*>q(<NZGTW,eFEM(7,V%'+-RH7$UtMU<447kXf%,P]\"Fs+N)88iD/N>J\b*U8#g%)R]`P0h&a](l<GX.;H,Di]5Pn1R9)#N?:Y23Q(pY01OJ;!`12.(%3[t%ia'?YGc)C7GE1PPQ]DmM64]$"7q\EO`&g*S=DP^q=a?],ZjeG@.A?m8`J?7.Smi;X@O1!MpQF#D),GUU11$>jQ19SEB>H?0?9nc=%f):[HTn.e3Tu#C5%hR'(1r11DJAa>11'iQ&ZRc^$#Q^[+34oISYcQ@5Q3.c4#Rr+eKFrldI\puU"Z.5*?A,2J_2HYK-G4'TKj/K?%'^A/fi/anV@kf/Kka:o&`GSg;H1"]#,1Z`TATR-E%k;AgL_-7#`C'kN6'O;tgD9ch4.pk/Wg)NK<!<c!.uWW9ZsT&#e@Ipk[?8GL%k<"!I;]Aku;B*IHSCN0\]j`"lR<-Vi1pf0U6U-`R0IZ?&cWn6iaAQD9F2\=f'.0l9d;A$.W]%Hh!7-q0`ltV>6o8Go"`JofAE<j-%0>0/8Ud]rn%%-9l>([m)Bk(k>V2>;:jD\B,K)$E$dB%."K36>`%+Q2$Xc7D]4OXI'p?XVOb.S5%n2`LHHGn!:XDc!ddj!-BC+;L$%dfYNEGi1d4`b!@].uad!"tZ,"3ahd"S<[;"K1oA+Qio.eMKnA5X\bGp=NWhPK,DMl2aa]^AI%VD<bH'Gm%YtA-`_pj2tfC*Ng/[<%.4g&kTV`!YNXdU@oP4\`.2Xci_pO-?@0"g5#p6e<+`Q$_CM=!]Y9H"X!Ah&k0q8sh:p<M.>n5XV<^tQ$VlY8$o)c(8Kq4MLlkX/B%VSs`7/HM',*`u*:3DWarf:C:B/pj>K^pG!GFG]:M6]3h'V+`%cPs^/UI,U;rF3*DDFGJ%+Q^Pb-_>2E#TEZbdB9*Wji%9FX,_`R#%Ac=5Tq*!l5$DDcJGBf#h1s'<RXC2SGiDamZB;B5UgiE"7#,oug"_u.8?K*?e7j4`QVdZrD6`N5/&U?]"IuT4dQo0s@.LV?aeb4gP%54IlgkBRtDV>3O_jT;Q:T41hFU=>e>s$0^h*K^[J0G0^'m8KteZV+=/8<B%Yd7oHVJbp\4^RT`GdH2d!RA>Z?]K5:7_LSBaX4&32%C32]JN=0C$4THbj]cd7V$jG6:Q=+@S4f$XgR$Y+;Se?_a&.`YaR,O3TOFg45hQ&W$Uu,=NCk@%+&eJ%'\/PMOnb%"&-rpNm\mg]]%@q\$cj+rj7%'B(AAS]8\ZM6Z1j=G_qGhBAs91o3kS'Z)/"qKF?0q=H)+H%BekXjLh'`&m_&8FJ]nB5O;!qj1#Vs"6l8->_]dY98Q%P,HmH@MLD?6gG:GNEHKQ*s@/'Uo4&'\=*14%hSC0$:>#j-mZ_j!t-Jck[+?]S^M;l@9<[(+7OW1<TLPELp7rG0Q"LTXdE!.^lfTI%BFE7OetlgXS5RZl<VB-`aYkG?(8dLU&=bpf$H<F1E1hZ*hT</[4Eps?H=*mLT1(/dKn47O;'3^n=Zj*3:sZrmY$GE\l7-9GMt&EV%Y_3H13]RMYOm<]:6@IspAo(kA41lGWmub73@g'-pg2VbR!)2hd0p\/#C6fh&!4go/.RVe0mj$ng6L*Z"`"J_WPE$NtcPt6Q"UkrQ%XK`iaLLCdReY'-h_I*bLFE^lH2gPXq7[^DUfcU&5aI_Xs@$KuM0(RS_%@h<eZm$dWRkS6uf7OpX(g:Sm>W'`ugXCjbD@,LLb8RT<%<$eHNE$-M5C_1(n\.rEY#CM,ZSsHqq$G;I8"njWdZ[k+q&,BG'EP.imOhbq^Ji@-COU?Hf;_Jt<KE*^r&V<$C>-FWt;tO$<]gQXQ%KOBBNHB0aVA2WG9C,)6(MI"JO7lu`-`l'^>&pkJ\l"0*_2fsU/[Cjq_5"q3t#9g4(Gpjh!4l-G%3iIicM^2&rl'+^^qp<,f^bqsQ%jeD6BY=BS/HnIf&$j_!h!VNjGMJ[Ub&uLpJ#_.nIO"l.*jB9KB^&\>Z+p)AC%I_9LOFX1#B[?1)6]:b%M^-B\/.#TVJD#tfKZG3h%n061hSdN(HSGX"4&MkP^TqC$]maW]oh\FEKdL7J8G*mCanfoEUrsS!.+J.D2G0M1X5DqHi"W=soqiKuGZc(f,7aF\ZA>B@%pD>^b%%9PpQ#hXH`,7$rf>ql-WqO&Sqa[9JfJE2`28)f%<p2f&b</XaFZX7?&kGe[X)'B[^!fK$]0=McI[j)0"1h#EI_gB&Yb`V*n(D(>=%:M98u;R]uM9O?+^$/%/[k7Y(uS"6AH'Xer"?-P_oH#qqf"3/k6]I]RqJ1t<DJ]/72Q*GIf^+`'VF@"5WmAE(BA+<)mUis\(,jsoG%%B$#IS3_CKUXs`*bYu/Pk&UPpMEG'NZl:9E,R5'C%bIq7;""k*[7sYcMStXjf5Ti=M9t/QK]S_a&Yi!`N')]IW$Sl/-U,p?jVb2+%T[n\);P6T0*h-JGb`P7"j_dL!(3d#6,bHT'B\D%*h\Ghk!*RUX*WokLo*29!^XGK-0l:XZkjT:/!0L;P-"]TNMLoVI=I(9j%ql#7%juU?(kEPD[YiUs>'*!b=ITB?N"c6Uf6Ng_OOWph@TsfgupS<'AZ]sDbiUI2i:a(.G0f)9h2T?N`^cjP1#$Ke<5/\kIX$K@NX1_hm%AS$bKC9a#/_3ie&<l=V3O]Gi,`X*K#YSP5X<KKEb;AH_>6Mi/s#@rn8%>5?JmVA7mp<?KL4\6T*&E#\icL,C#A1nF%%/G0:o%Gdh%_t5DRQgdp5niGe66C=uT+NSiWPR2=O%HT7F8R6j_!/Ztu$(j,30tc[IoXVBCW_(<?(h?=q$slUsT"sF3BbJ)c"Mj%`Gp5RWSkr+(%c61,AaVgU-F^b$;oYFEWa;D(;G;";rRl>+\Lmcg'&pCIp?tQ@:-?Iron.rj*W2+FGnEk6&>ECQA+$G<_2^71`'d8sJJDLZ9"u2nY%0c#p7L":6&[!)pqUQ!tE:r8!`TF_Y;!RIhk6#;&gjuX"h+;elc"ai#>_B=*emI^lg'6Oan/5HUfMd*A6f$!]ZQ?kZjYD`o%F'7ep%Ri/beR+;_`3\l>-?OpV)7hf,;UMeCZR)RL:#L=UHaXf0>!NIgVJo^r]?Bc9X,/b$H6OXa*m2B.=><;Dm&4>Z^+bhNmbG'7q;MR;[%PZpP3+^cd)7i7:X>1ZW\kDNr7[02f[cRM^gXt`U7=@\gS0e<NtL`.'a,+53r^ZHtC-n3Ue!9O"YUb%"GK]CC7H483Dk:LEF:-qEJ%o99Y/E;X.SL?6`(_j)2faHcg(Z%,+k^I<h;[huIL(*Xe>@`9Nt*dUXd)1Yo-.R<N&e5)!an7^[Zj?=$FX+YC'DVi['nGF.7b<4n-%'3fa27?lt:9R2*+K]e-AS[7[qp-G*qm:ggF;XT)1"WapimlE8A^$G#fUpM+*]pD6`JZb:6>X4\@&!15r/OiE`fKk)Q+!N3\[_0D!%m>7+kP\S40=HH&UI&E3P+m4KSDZ)/bPp1Hn$o%>Y3iq=F&<m8&RN7VVo9?G!6cHU6e]M#=DCDtGc2hO5%7gS=5((9d%-p:i/=)Dc%+>f*UBX"PaZ]h\b\4.&O%%&=B2Ma'reV^S_dLSWZFi>8bL@]&^HBJlcf\rjS5/eR[8k<@VD-4O_4u5#M8-f8?5Rb"#ng:atq'fu"%I9q.FCCE]Bf`WKEXW,<a"Us4N#;K6or$EpDrQ0aB^9s$G(/_iO?A1-oH'!pFUpSSrk@pO:Q8_SSre0CaM;_<b=+uj#+D*5SMt%Pe%:I.i<dO&m08'nC&1;fqh;BgatD&=5M5gbiA@$j^nrdb:i&;*8H3e(gp!f$E-J]0`3,]EqJM's9NNZ4FoTThlu'Ab\b4dD/=4e=ct%\R1,U:f>g1&OQt!\\-uhfgDO1(u"3#.*3"HbU;%Pm#6_WiQr]8XTo'HisT)9f[pB4!<'9n%^_./3e.>7:c$&&=K0OG/I)m)Q35+m%hD#jf!rrJ[Zj\g`,WorP?o+9%;R-u_\`j=I-fe!Ap'<4,U0gtVB2`b+Nd8_75Od_DL/17fn7f+7pbWg,5.,MfBne7=h(s.OTA`*\%@eS=1WnA&j-8Q$5<9.:+XI^$@<_n>OX(R*ZePdE">m^X)]k!BY0Ts"(p<<Uab";+G$SUXQS.%=%#[s4#_1I(K'=Tg'*>H+/bS+H_%n*C)n+e6)MTj[JN0XQ+o`n?ep\e&\LVQ7PqBs;":1`4t0c/c+jdS+)RH0S'.PGbQQGVA\PTir6E_A5qdeD_?SU`kl?K7.Eh[O<G5%:'Fhg@HBJ!f,dt[fZcSb#jREA\?^o1=94%gD:!FP@%IZqW2Usu1-"?]Pe.r)E6-DYd,?U<JC=]YfBDu4\K5PKgIj`"">VGG"6%?)%;3GL#`X56S*QuqDqR"lm.;F_M12ka.#[V/^+u1AD1K(6l8</AS;phqKSD4ah+:*+j%+[;OBRgh#PKfT6@<($/Lkof=!\1Ns;TtZU%%)f/*cJ#&[Kjt?,bCmB1"ZCf:I+,CTE,UX'Y+YLp1DbneG`P,nCMl0"TcK*h\kFN7(G\/sBHJG<`2%-EO("bjgl#9."k'O(7]Zq^%:?=;*H57tR`c5B/OP)Y)A4%:MC<#0aYDL""#Rn9g&iNNc`+/q$5.?V1'!mf';R<[c@t$5\eQ#U<_5S`#8m+e$+[ns0*K+@[Xf*O>%</in&M.$Al%]@:!$D/&)Lh0&B!`hWu3>/*C?kR2dK,U\*@hA,Ma;iN4_!j\nMcI]h!Ktr'E[=e.JLmQFW^BBu+N058Gbs\(NdXfu%V&4a8*'-D<-JBKZ0Y'4*fORb\3fO$Xd\J/&&3\%3!uSk,(e!g'3$TqHY*cX2F*!WVD$J,0)M!G2V*u4,Vh5heW$.=2fJF+("4$4G%hklkI;M3O0m6rj-;/4I4%Ul@\@M.D4r-cD#V[k=ZE'4QKja$KGd=&,E'9GSMRa]E^EHi.SK%GD:+m3]nZ7':r":W`A*Q/NNW$rDQ%.3QgTciF]2'A0d-Z'%7qBX*<?WFJENP\kLPGZP_0&n]tl=`eUf&1hX[!FcU'LKl1%7T#<V%N^MW6/Q?1gnfW?9BgERFM+igX43;#%eIVIk0jHY"@0VX@AJ'OT[ln1m%ZiX-U7u'`**TG:;X/en,/Bscb3fM^?U;`o;W+HFb):iVXfF"G#Hbu+UpV&)^O[g]'ntfq9%sCE%9s[07j9NOET[k&QG]p%\U$WH0%h`3:P>#E0!E_c?0rk6S@RZ.)9Mpa9GqB:a<opk\`#PG;RKG*1$@?V1PkpeI[n97]p2"(R)^(H1%]e6scP@DbCD@eN-.&Q,,Mt)TilXA<1q4]B#-fp1r4^eJ-)V`8>SDZc0=$Fh3>_L68=@=".J/Li"@`/\/f(E"*51oI#qJ+?_S;msJ%AknU-9^;lp?7TE<dBOOL86XVB\*"-3&Sc`H1K62h%?lU=`Fc'^7deRk9nS+%'[/9#MD53?nt?fNF"#Wmr%#,C*m.&&P%X]XSL(gT%iN]Ih<CT)u^^Llp1$%>f3dhm6:SGp7<^jSK.)n]QIQK,d"N%h9d,3['M?73a(pZ4r+^TIb>#hmljSO+1Q(idc)ljYdH[%>?9PE6)%@:L0K\9Oq`(UbU>'Waj><W9W6$?$>>b?i?J`eQ$R3[H+Z&S9r(B(i[PBLXN'hs7'Km:+f(-0;V@NhdCXH7W2X;FSN\<"O3rXZS$u%5!\5j.S01Dr0M0Z#qO&nH@;fhe5kj%l4I*pCo1TQ:r)A;)&/1je0IR&S=9(5%/Z!TWhl=unZ[g/OTqmf-W5j7NrcALcC-kg<u(<[%lpP#;,!8j<<+6dRC9oTo7_+7>YE>.b`^d>GXbMh1M")Zh9YEt3'/.c`@t@DL?GZWEAqNE,ITfn/@0I!3-XNUYJ,rNF9?#D=e7.W1%=om0LNGc)]XVf^4MCk+EO&Rk-,H]<%_E.DD0aX0L)`@C4dSmfB`JmiGS+-VLCpCE9UTiC)Zj,N'=u6FO)#J%e-r?<s6=pZqBINu4%M$PJ$Ai18_9euTF7_uW-Ap$k\h3&.RRAD>4ntp4HAY->;_ZH%L;jcNCWQZPQAH=SdAhg#85a'8f)>#(p&X>Wd*P'p]b5<5YO:Ya_%-d7gOZA)(Y8nH"3a]'$lX+nc3eTV3IZdrib19S]ooE0M4ZC&cWLJHp.$NjoM4eXW"FB9rh<+[k\Z5VNuE_Bt2Rk[_W9Od(5IV:I5%Z8r^r/tj@KVEe]HH'/,CfZA]g">FqpO:[]EdjV:dBN7:,p6$el8$Hf%i/$Z];CAFk>$Y%g9C%EM0Z+K*$ot'9;'JWG@V_!-ZlBZ'%?j\r'k(md<YY&gLPjhF$E/Out'JRE==cE+kBYCih9^RJkMBLGH*P?<H.tSA0QCY%.LLFlO+MngqN'5QrRT!6&O=(sJ6tng1c!giS%W.Km`4G-3>eOjThEC7("\=m&aXKn^Cg'R:]6#HtqPN]'L;C?bt'LoqZ+@Z]+&\l\3<fjpEM.dY:Ti3Z\3\<g1@;&mk8*tlMSD$o,%3T7>&#lJ:Q&o$&D,&o*0&uW]^37>5DG\Etkr&JPGjS>k!1+!!?!%G!Y+9%Ch<j?S*5QHC=!\bJ[;/'>1Z1PjD5j56l!5'ADPuM2I%ki<I^[tmjG^^O"V0cEo&4cF]#^1\9Tb"Q;XYpimDe,V5Is(C%9GuaL+#*E$sR#s<B@sJ_W=#NYm"oQ1s9/$?Wc<-$%ZbnmC?!M>:%k8>;C,&RV/*3L'p_mSGoC,<;Wj]ur;_DRZjn_jg]%<Z2NK8[@!b\.auZQbdi>8H8L#Nu$)*j21IG&Lq=r^ul"E:d^Vh[G\^=uT")%>6Yb''@^T&b<h&l_6SaVj@#W2,!K?3)AdO5,u.7mj<"sZ:.8.A%%,l,#3._G.)Sri)rl>T]A#U_?,j]KCc6<qQ4KN3eSG@jST9N"%$l32D3.qb.7Ks1qbQq^,VSUo,"H>42ZVedi.B:+AjiA`EB,=@0n5)G#B@LtO1fTIX>)o&+gj[ane:>BAAkNkBN[uB?,E%]GaL6bf%,No/oj>3)Hk^&dRj3Er8#It.U#qZ5oOHTef_/a(J?oa)u[N$0D/OqLCH''#7&5F<fI)^10je:)-&hHOI9p,:gEhn4hN[uNC,K7TA%"JN.7]gG*r'GDj6:MiTr,EZbV4+\=(-6oLECe#=P>EJXkD+>?QgJNX/mDr`O2&)R_aERh.&Ed@X*`2pB2'0Tt:g"Hj7hu]sOi>7`%UmN![i.ItnOCLb(FuZ+aAF_\BPHM4*=HL^bfT%/+D+>1-[\F*pgC^m])YT9qgX5L>+CYWK/YUhP?op+\X&re[irI#>jJYt)@r+Y+%X^XF.gJQErqA2"1"f_qSV]ok<ZBuJi/=+HSJD%B`1h<P:NCV?6b[hcc0V_(s;1u1DBR!8^n0H9T'MK-U7gcNc#j3Z"8/7B-luiq[%%1]YS1a3n\4N;=c5LjSGL_u*c+d3Kpl;00#Mi`CS/OlUQr.+F1/Ojo2CbQbGZ6jes=!S`-I>E_`atbj&4]O>sbT*.#-3]Yp]pIoH%q^/.%cj4'k7L5C*fnUYl&.qf,6nKd25n(%.1cQogX!MhEZn<o>Fo`/aDl>8Q./9aOOtu[W?p]a30P$@Q"S/iTm'ju1!E[V+I[k7'%+@4pC(hZo3YS]>a6NXdE\kZpcg,8I63_;C2b+Zeirun9UPI)[c<_eLh_Pe<F*(F`U%o:$uWVEHuU.dIIE$p;Q;PkMT'(W*"1e&cQ%'2[,&D;68h"\*07\YJ,_0UP7,i%W$3\34:>_N'=R/km*q"`l*g?KRC<4i1;SBJ<<m6I%M`SZ@T01>$6bKG*W[Ai`ThA=`ieZ-4U#%Tj)dWV/S\uBaVfZ.FPS>+o0K#W0`A_.PpVk`J"+(@D/=CWY^UJ.`r+#Ms?=9'"Vctc_.7rmE;4?"=16\_)bB'K40)rPVr?NL3+-(%(<#9.JuDl"?pQAX0NJQJl\0CL/I6bq.iXdM?"`>tn._[D8OP/_PSOQt1kPt>@"a)n*e5^VXp"IOn88Yf%!1Wq81eL/;@<Pf7CPlG%-GF,3QXVXmGY0nMlNI`lA$Qqe!MaOl_BR5IA?r8;me79dgm*%1PfPg,!7ASBf(J$9:l\U3)!\F];iSam70j0EY!^KO/@:U,HnAre%@Y?N>er!:1^t^f,I1JZ.;+"0"(0$3"&#^ek<(;g#LGc[EBc84%@bO,)26Yr>V\*C3%MUPc6icuAGe`fcg?n0l-qfL%$<cq?Q]S&3%b,Qll_S)-qJ;e&M?Tt\r3&n_8VQcJug'aq8[:,,'rl1X_$;NdR!FOFmb'_nT0fP!3%l9&QUPDIle71b&Xus^rdFG?9+**mK;6Eg.%4^e"!7A^<^G/9]%^7Rt34X<Bd3,bVjk1SK1Sq''.(^q!H>3/S-[MBX8'/)ZAfg>V*0aA;Tr%/QA`Xj;VGfaD7Dj<]/?&:,*,"N:)%!hu;>,t*+1FWI$gH,^HWqNU131Ob5HGm?_>Xs/f,Xpi;N=4"OV0G@%^]u%tr-K#6OPEmO$CCjtqE+L^5\:W;#OqfRI<WOJ.?uV.9%JoPElmHdahdA:_7Ln(F`%\.HPSsm%9(bGSZ_6sQhL>GM-bWGsW67!ljCFWJ?j/jMaj/jL6j/il,`,PiWRHL$SK#=^0A0M#J+s0;s%g_]4j0QSM[$IhjHd`amT;C%jtob@bK<WQ*HQ%aGfQW-,lm.*&_KJQ%u35f!g*>;na@$FBN<f-q;C4;AVI76K(<J5@nQ,,H2$<qG=%M6):h//q>2_6I%fYH0.IVkA9D_c^FkDl4'm`**T\0cV,9,UV)I%YojbDH`$7:uR@U`GAKU,ba]gPq`?;HJ]"G"DBf-MC@hse.dFL%Q3@Z"j`4nQYm$/Vib9QS->?r\`E=H+>Crj22o;NE("SL!9n!?7K-8ZESJ4pl4,t^BSUIgF:RoS9D@kCr7Mn0EcubOuDA#(i>1dq)%G.E9^MM1Z,p7WgXj<6NeK^ELd`ce`qisKe'FXfWmD\so]=2^MT!(,cY@[N>s@X:YO$K7]IOYSR7nIj!)\1A7ZM]<DGihCI=2Z0\&%I2!%bA]P<e1WRX@I/m`#<!lsXYllkRADBTW32qsm32_gkE9ft&diL2MQd'%:(s9#g'GC7E#d&4TE,luCfE4C)<[Nugg9.3X4Od9r%$E"^b--)i2;K4#j:?TM`oMYQ#k2'`"*^15\SBf/_Aq3ui[qT=drN29;q#u^MBnQc.=H(`)6l96f;<q2%bk?V:q*]W?)^\r9SPOo9%-1(bKL9YM6-KP9(P*B4Ac3M*e1R#oEI'Be,amGQ/jWMsYO>01d3i)A(0M^dE@<n-*\rD"u[V6?\eJ2&<dP?Xj,1K`,-'u.mF5%Z;%$"8p63,L5kVes5rKN1QIN"r-m"b\FrEi->T]E6?GJsH9i=ga\JcBXRk%IYF+.UuF<g:L1I/u3U)%*3s`bT!76VEo50)<:J6/;rpK%MrEIq+0=a@:/^*3m+hhRFbtN]5QqF/HcI9RM@,qLK7qnl9Y*9h=@#N?TfO9mgt!,WXWmIpL73R6_<rH<$n)\+eW6/uqDDpI_\+]n%(.2\7%"sgB<#icNql]KHBoW.>=QC.g\n4]"<9Ih&?fYbl3[Y]*3=2(`cRm-A8-sFP9U7R&6CkQFj9kJKRCepma<AR^9pqBq\,tW.%;Fgr_U1Q\c3,&Xh9TT`V.JVUn-,P2ZRO<5d*cd)?.7e#jO&3b@M#LWrcu6lioLX-R@;X46[4PtVd:tlN2b-m$V[=oCMdo'?UEWC]%HTf=V'5fP]e:m&KiJl_YJFHYj;t+0=6!';I%Z31m-L^.@`^Et0(b86B&EdNE>trUn<a"^\TLiXYV.E!TYZ+cj]7j7EXkFGmX>Cb<%\P8!?8=?qo@hY8ULm*CJ[aZLq,:H9lERC(UN3oF3,UVD#p)ks:^E6V\9<fn\:g*(PIOp/-Gr#:7`)fttktqpVI(9And=r@R-qb:R%AZ9.5/;73N5_7"g66Aac<=Tg49Im0<o&IX!`MtIh6ktW;WNt#_W%9O:LmM=Wl-O;VOs8+Y<>c88TuC,:l<md.X":Yg&nNNYdO63"%fuTm=<CFl<0i<n`DN2MBASDGu>\6af6c:[hOZfC2nEIAF3]Y-J1fhaWJ=OpeWUl6=jEh$EMqWDmHL]*50:;mgN$BZ@T.,m!2[f'L%e=r7JFh4dYAo9/XiK[E[OdFR@>WK-0k/r9XTd]@P1^,)7]s>e>$@8'W0h@ZE_9A0U0tL@W/H9E;T$RX^AO0D(,Si[S5gE\GAo9s$%#*DR%@WH7LKdOSYF\h6mVeLqt/tsU,66S69afVB(&MGg-#"SWY,/O(G0lrCXN+]P-p-iW.]nrSi(KN)qJg^gjjH<sf94)704%#(9%$<![X+c-`D.Udaa5*`(t&gbp*(f=6e'eLQ^9/Q5aN0[1WQpk0-s/&1a5o@"c8>?q6ER\H>op`C85F;r%:9kn*SYVWFU_Y2;Zq;V!%5\/:MdS/gT+gOdFJVploEo_a)$<Rtp&s,4s/VI*d.[*2MYp(XVVd*8aj@V2,778J&b`!-MU3Y>0RUEJ>)8kHPKcqQ@#lPT2"B#>a%4DJ(IH.7:MjAFZ-feeSc4DHU67kscd1Wa0I02mE/Pt0f&Kd;[iGndiYEjd?E'7r\UZU44r5`@g?0p+sX7e.t7DQf'Das;:%G;!J$%3Q-6=F]oNGm[uC!8!f=8Jg)'IADHJg%.!W7*!T)q<2&u(:5(m!e#^P=o&_*so3>I7QQl@<]q3'M>6bq-c:d1Y^@j)\I\R+]Xu9cN%[$]LXC.K)tN%Hq+P;!tVD%7n=$;,8VY(!C.U50:O0cni[@fDIbJrmCYPRBRTI8Hd[HCEo\l.46IS-]l];1u]n4^oH61P8\g1\/H(%XQrhrS>22`)c5e^7M.2&SRm10KgOH142GEpW4ee=oW/%2a#Zu?%CJQe.&f-JTqVSDUDC\@H`n5oW43\_(`=Z;lZ@m650+UNq^Q5L%^^NG<1$"+)7m;)gX<,KQ=@e'*gnag*r".G\:G"p:e[eCsjJ9d)+T,'OCeqkRV2B.]#WsVq;QiWM:1K2#QM`VTjask,>`]`][4k>H%HKk1cK!a>B$QUqX,S;@u?s'+m'*]/\VosNi<2h'g\;sm[f'u[==\*33SF3Vn1JU]3;\<Zp%-T2YlI3P'.JRsd$d&Nb:&4n0.SA6<%&7_Z4_oBkDU6@K`EQtW%NS_hN]C,'gUQ:'%s0mKj\_11iH1_*brmTp%ruUMKpHJP#s$-BRmuNL%Gk(bls-KQXa88)MIQcOpqXOCI%rrV1eOiLO(DEZe>rVo*!*`;~>%AI9_PrivateDataEnd